<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>薛定谔的腿毛</title>
  
  <subtitle>薛定谔的腿毛</subtitle>
  <link href="https://chenliren9527.github.io/atom.xml" rel="self"/>
  
  <link href="https://chenliren9527.github.io/"/>
  <updated>2022-05-17T05:35:19.269Z</updated>
  <id>https://chenliren9527.github.io/</id>
  
  <author>
    <name>durex</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AbstractRoutingDataSource源码分析</title>
    <link href="https://chenliren9527.github.io/2022/05/16/abstractroutingdatasource-yuan-ma-fen-xi/"/>
    <id>https://chenliren9527.github.io/2022/05/16/abstractroutingdatasource-yuan-ma-fen-xi/</id>
    <published>2022-05-16T12:52:27.000Z</published>
    <updated>2022-05-17T05:35:19.269Z</updated>
    
    <content type="html"><![CDATA[<p>spring为我们提供了AbstractRoutingDataSource抽象类，该类就是<strong>实现动态切换数据源</strong>的关键。</p><p>我们看下该类的类图，其实现了DataSource接口。</p><p><img src="AbstractRoutingDataSource%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.assets/2022-05-16-22-25-38-image.png"></p><p>我们看下它的getConnection方法的逻辑，其首先调用determineTargetDataSource来获取数据源，再获取数据库连接。很容易猜想到就是这里来决定具体使用哪个数据源的。</p><p><img src="AbstractRoutingDataSource%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.assets/2022-05-16-22-27-27-image.png"></p><p>进入到determineTargetDataSource方法，我们可以看到它先是调用determineCurrentLookupKey获取到一个lookupKey，然后根据这个key去resolvedDataSources里去找相应的数据源。</p><p><img src="AbstractRoutingDataSource%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.assets/2022-05-16-22-27-38-image.png"></p><p>看下该类定义的几个对象，defaultTargetDataSource是默认数据源，resolvedDataSources是一个map对象，存储所有主从数据源。</p><p>所以，关键就是这个lookupKey的获取逻辑，决定了当前获取的是哪个数据源，然后执行getConnection等一系列操作。determineCurrentLookupKey是AbstractRoutingDataSource类中的一个抽象方法，而它的返回值是你所要用的数据源dataSource的key值，有了这个key值，resolvedDataSource（这是个map,由配置文件中设置好后存入的）就从中取出对应的DataSource，如果找不到，就用配置默认的数据源。</p><p>所以，通过扩展AbstractRoutingDataSource类，并重写其中的determineCurrentLookupKey()方法，可以实现数据源的切换。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;spring为我们提供了AbstractRoutingDataSource抽象类，该类就是&lt;strong&gt;实现动态切换数据源&lt;/strong&gt;的关键。&lt;/p&gt;
&lt;p&gt;我们看下该类的类图，其实现了DataSource接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;AbstractR</summary>
      
    
    
    
    <category term="数据库" scheme="https://chenliren9527.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据库" scheme="https://chenliren9527.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="多数据源" scheme="https://chenliren9527.github.io/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
    <category term="源码分析" scheme="https://chenliren9527.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    <category term="动态切换数据源" scheme="https://chenliren9527.github.io/tags/%E5%8A%A8%E6%80%81%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>阶段一 第四章 常见组件与中台化</title>
    <link href="https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-chang-jian-zu-jian-yu-zhong-tai-hua/"/>
    <id>https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-chang-jian-zu-jian-yu-zhong-tai-hua/</id>
    <published>2021-12-27T15:19:01.000Z</published>
    <updated>2022-05-17T05:35:19.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见组件与中台化"><a href="#常见组件与中台化" class="headerlink" title="常见组件与中台化"></a>常见组件与中台化</h1><h1 id="1-中台概述"><a href="#1-中台概述" class="headerlink" title="1. 中台概述"></a>1. 中台概述</h1><h2 id="1-1-中台概念"><a href="#1-1-中台概念" class="headerlink" title="1.1. 中台概念"></a>1.1. 中台概念</h2><p>随着互联网公司的崛起，“中台”这个词也进入了人们的视线。BAT 等公司纷纷推出了自己的中台系统。那么，什么是中台系统?</p><p>任何一个软件系统都是通过帮助客户解决问题来实现价值的。针对不同的需求会建立不同的软件项目。这些软件项目包含客户端的应用和后台管理配置的应用。久而久之就形成了固定的“前台”和“后台”系统，而且大家都在乐此不疲地开发着类似的业务系统。</p><p>但是，时间一长大家就发现了，这些系统中有一些部分大同小异，在做第二个项目的时候并不用将所有的功能重写，可以把之前项目中那些共有的模块拿出来，稍作修改就可以在新项目中应用了。中台系统就是将“后台”系统中那些针对技术，业务，组织的通用“模块/服务”从原来固定的项目中抽离出来，并且使之能够成为一个自治的服务提供给更多的“前台”使用。</p><p>中台是 IT 信息化过程中经验总结的产物，他是前人归纳总结出来的方法论，也是解决问题的思路。它把这些经验和方法从具体的场景中抽离出来，为的是服务于更多的场景，即<strong>能力复用</strong>。</p><p>中台的催生基石是<strong>能力共享</strong>。如果中台所提供的能力无法被共享，那就不是中台能力。<strong>如果中台只服务于一个前端应用，那就不是中台。</strong></p><p>中台是为业务服务的，是需要根据企业业务演进逐渐积累而成的，因此<strong>中台的建设不是一蹴而就的。</strong></p><p><strong>要让中台模式在企业中发挥作用，对企业本身也是有一定要求的，比如企业要有一定规模，业务比较丰富，值得去提炼共性元素形成共享能力。</strong></p><h2 id="1-2-中台背景"><a href="#1-2-中台背景" class="headerlink" title="1.2. 中台背景"></a>1.2. 中台背景</h2><p>许多人通过阿里巴巴推出的中台战略而得知中台这一概念，其实中台是一个旧名词，在很早的时候就出现过，只不过一直没有被真正的应用起来，在2017年通过《企业IT架构转型之道：阿里巴巴中台战略思想与架构实战》一书热度上升起来，那么阿里提出的中台究竟是什么。</p><p><strong>阿里中台主要应用于业务种类繁杂、个人/企业会员数量庞大、不同种类业务相互交叉依赖，需要根据需求变化快速响应调整的O2O线上线下协同的电商场景。</strong>阿里中台将技术、数据、业务能力从前台剥离，形成技术中台提供系统性的后端服务，为前台零售电商业务提供支撑，中台主要分为业务中台与数据中台两大块。</p><p>业务中台主要针对其电商交易业务，具体包括售前、售中、售后三部分，业务中台被划分为许多中心服务，即会员中心、商品中心、交易中心、评价中心、店铺中心、支付中心、营销中心、库存中心，贯穿整个电商业务流程。数据中台主要提供大数据相关的计算、存储、共享能力，将线上与线下的数据源进行连接打通，进而实现决策分析、精准营销等战略手段。</p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/1597655324153.png" alt="1597655324153"> </p><p>阿里提出中台战略之后，滴滴、京东等互联网厂商陆续推出对应的中台战略，同时数据中台、业务中台、技术中台、内容中台等多种形式中台出现。</p><h2 id="1-3-中台分类"><a href="#1-3-中台分类" class="headerlink" title="1.3. 中台分类"></a>1.3. 中台分类</h2><p>中台是企业级共享能力平台，下图展示的是中台的架构体系。</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/1597658262030.png" alt="1597658262030"> </p><ul><li>业务中台</li></ul><p>业务中台泛指代表企业核心业务特征的中台结构，更多的是对业务的支持，实现后端业务资源到前台应用能力的转化，业务中台多由不同的业务板块组成。</p><ul><li>技术中台</li></ul><p>技术中台整合和包装了云基础设施，以及在其上建设的各种技术中间件，比如微服务、分布式缓存、消息队列、搜索引擎、分布式数据库等，并在此基础上建设和封装了简单易用的能力接口。技术中台作为工具和组件，为建设前台应用和业务中台提供了基础设施重用的能力，大大缩短了它们的建设周期。</p><ul><li>研发中台</li></ul><p>研发中台是关注系统开发效率的管理平台。软件开发和系统建设是一项工程，涉及项目管理、团队协作、流程、测试、部署、运营、监控等方面。 如何将在企业应用开发过程中的最佳实践沉淀为可重用的能力，从而更好地快速迭代开发创新型的应用，也是很多企业目前的一个关注点。</p><p>研发中台为应用开发提供了流程、质量管控和持续交付的能力，包括敏捷开发管理、开发流水线、部署流水线、持续交付。</p><p>例如开发流水线则涉及源代码的版本管理、分支的创建、合并和提交，半成品的构建、存储和使用以及产成品的构建。将产品部署到指定环境并上线运行是部署流水线的职责。</p><ul><li>数据中台</li></ul><p>数据中台泛指通过数据处理、分析等技术，对企业内外部海量数据进行采集、计算、存储、加工、分析等一系列活动，凸显数据价值，加强企业对数据的利用。数据中台提供数据能力直接服务于业务。</p><h1 id="2-常用组件服务介绍"><a href="#2-常用组件服务介绍" class="headerlink" title="2. 常用组件服务介绍"></a>2. 常用组件服务介绍</h1><h2 id="2-1-通用权限系统"><a href="#2-1-通用权限系统" class="headerlink" title="2.1. 通用权限系统"></a>2.1. 通用权限系统</h2><h3 id="2-1-1-功能概述"><a href="#2-1-1-功能概述" class="headerlink" title="2.1.1. 功能概述"></a>2.1.1. 功能概述</h3><p>对于企业中的项目绝大多数都需要进行用户权限管理、认证、鉴权、加密、解密、XSS防跨站攻击等。这些功能整体实现思路基本一致，但是大部分项目都需要实现一次，这无形中就形成了巨大的资源浪费。本项目就是针对这个问题，提供了一套通用的权限解决方案—-品达通用权限系统。</p><p>品达通用权限系统基于SpringCloud(Hoxton.SR1)  +SpringBoot(2.2.2.RELEASE) 的微服务框架，具备通用的用户管理、资源权限管理、网关统一鉴权、XSS防跨站攻击等多个模块，支持多业务系统并行开发，支持多服务并行开发，可以作为后端服务的开发脚手架。核心技术采用SpringBoot、Zuul、Nacos、Fegin、Ribbon、Hystrix、JWT Token、Mybatis Plus等主要框架和中间件。</p><p>本项目具有两个主要功能特性：</p><ul><li><p>用户权限管理</p><p>具有用户、部门、岗位、角色、菜单管理，并通过网关进行统一的权限认证</p></li><li><p>微服务开发框架</p><p>本项目同时也是一个微服务开发框架，集成了基础的公共组件，包括数据库、缓存、日志、表单验证、对象转换、防注入和接口文档管理等工具。</p></li></ul><p>系统架构：</p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/image-20201207094701062.png" alt="image-20201207094701062"></p><p>技术架构：</p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/image-20201207101527251.png" alt="image-20201207101527251"></p><p>工程结构：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20201207095017082.png" alt="image-20201207095017082"></p><p>项目服务有两个：网关服务和权限服务</p><table><thead><tr><th>应用</th><th>端口</th><th>说明</th><th>启动命令</th></tr></thead><tbody><tr><td>pd-gateway</td><td>8760</td><td>网关服务</td><td>java -jar pd-gateway.jar &amp;</td></tr><tr><td>pd-auth-server</td><td>8764</td><td>权限服务</td><td>java -jar pd-auth-server.jar &amp;</td></tr></tbody></table><p>本系统是基于当前非常流行的前后端分离开发方式开发。</p><p>环境要求：</p><ul><li><p>JDK ： 1.8 + </p></li><li><p>Maven： 3.3 + </p></li><li><p>Mysql： 5.6.0 + </p></li><li><p>Redis： 4.0 + </p></li><li><p>Nacos： 1.3.0</p></li><li><p>Node： 11.3+（集成npm）</p></li></ul><h3 id="2-1-2-应用场景"><a href="#2-1-2-应用场景" class="headerlink" title="2.1.2. 应用场景"></a>2.1.2. 应用场景</h3><p>1、新项目开发</p><p>如果是新项目开发，可以在品达通用权限系统的基础上进行相关的业务开发，其实就是将通用权限系统当做开发脚手架在此基础之上快速开始业务开发。</p><p>2、已有项目集成</p><p>对于已经开发完成的项目，可以直接集成通用权限系统进行权限管理、认证鉴权。</p><h3 id="2-1-3-重点代码介绍"><a href="#2-1-3-重点代码介绍" class="headerlink" title="2.1.3. 重点代码介绍"></a>2.1.3. 重点代码介绍</h3><p>网关服务：</p><pre class="line-numbers language-none"><code class="language-none">BaseFilter：基础网关过滤器TokenContextFilter：解析token中的用户信息过滤器AccessFilter：权限验证过滤器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>权限服务：</p><pre class="line-numbers language-none"><code class="language-none">LoginController：登录控制器MenuController：菜单管理控制器ResourceController：资源管理控制器RoleController：角色管理控制器UserController：用户管理控制器OrgController：组织管理控制器StationController：岗位管理控制器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-4-使用说明"><a href="#2-1-4-使用说明" class="headerlink" title="2.1.4. 使用说明"></a>2.1.4. 使用说明</h3><h4 id="2-1-4-1-新项目开发"><a href="#2-1-4-1-新项目开发" class="headerlink" title="2.1.4.1 新项目开发"></a>2.1.4.1 新项目开发</h4><p>如果是新项目开发，可以在品达通用权限系统的基础上进行相关的业务开发，其实就是将通用权限系统当做开发脚手架在此基础之上快速开始业务开发。</p><p>本小节通过一个商品服务的案例来讲解如何基于品达通用权限系统进行新业务的开发。</p><h5 id="2-1-4-1-1-数据库环境搭建"><a href="#2-1-4-1-1-数据库环境搭建" class="headerlink" title="2.1.4.1.1 数据库环境搭建"></a>2.1.4.1.1 数据库环境搭建</h5><p>创建数据库pd_goods并创建表pd_goods_info：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415092939839.png" alt="image-20200415092939839"></p><h5 id="2-1-4-1-2-后端业务功能开发"><a href="#2-1-4-1-2-后端业务功能开发" class="headerlink" title="2.1.4.1.2 后端业务功能开发"></a>2.1.4.1.2 后端业务功能开发</h5><h6 id="2-1-4-1-2-1-创建工程"><a href="#2-1-4-1-2-1-创建工程" class="headerlink" title="2.1.4.1.2.1 创建工程"></a>2.1.4.1.2.1 创建工程</h6><p>在品达通用权限系统基础上创建商品服务相关模块，如下图：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415093512088.png" alt="image-20200415093512088"></p><pre class="line-numbers language-file" data-language="file"><code class="language-file">pd-goods              #商品服务父工程├── pd-goods-entity  #实体├── pd-goods-server  #服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="2-1-4-1-2-2-pd-goods-entity开发"><a href="#2-1-4-1-2-2-pd-goods-entity开发" class="headerlink" title="2.1.4.1.2.2 pd-goods-entity开发"></a>2.1.4.1.2.2 pd-goods-entity开发</h6><p>第一步：配置pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-goods<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-goods-entity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>接口服务实体模块<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建商品实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableName</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">Accessors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ToString</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"pd_goods_info"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfo</span> <span class="token keyword">extends</span> <span class="token class-name">Entity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 商品编码     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品名称     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token comment">/**     * 国条码     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> barCode<span class="token punctuation">;</span>    <span class="token comment">/**     * 品牌表id     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> brandId<span class="token punctuation">;</span>    <span class="token comment">/**     * 一级分类id     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> oneCategoryId<span class="token punctuation">;</span>    <span class="token comment">/**     * 二级分类id     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> twoCategoryId<span class="token punctuation">;</span>    <span class="token comment">/**     * 三级分类id     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> threeCategoryId<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品的供应商id     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> supplierId<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品售价价格     */</span>    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> price<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品加权平均成本     */</span>    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> averageCost<span class="token punctuation">;</span>    <span class="token comment">/**     * 上下架状态:0下架，1上架     */</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> publishStatus<span class="token punctuation">;</span>    <span class="token comment">/**     * 审核状态: 0未审核，1已审核     */</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> auditStatus<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品重量     */</span>    <span class="token keyword">private</span> <span class="token class-name">Float</span> weight<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品长度     */</span>    <span class="token keyword">private</span> <span class="token class-name">Float</span> length<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品重量     */</span>    <span class="token keyword">private</span> <span class="token class-name">Float</span> height<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品宽度     */</span>    <span class="token keyword">private</span> <span class="token class-name">Float</span> width<span class="token punctuation">;</span>    <span class="token comment">/**     * 颜色     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token comment">/**     * 生产日期     */</span>    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> productionDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品有效期     */</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> shelfLife<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品描述     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> descript<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建商品操作对应的多个DTO类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">Accessors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ToString</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfoPageDTO</span> <span class="token keyword">extends</span> <span class="token class-name">GoodsInfo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> startCreateTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> endCreateTime<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfoSaveDTO</span> <span class="token keyword">extends</span> <span class="token class-name">GoodsInfo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfoUpdateDTO</span> <span class="token keyword">extends</span> <span class="token class-name">GoodsInfo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-1-4-1-2-3-pd-goods-server开发"><a href="#2-1-4-1-2-3-pd-goods-server开发" class="headerlink" title="2.1.4.1.2.3 pd-goods-server开发"></a>2.1.4.1.2.3 pd-goods-server开发</h6><p>第一步：配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-goods<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-goods-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>接口服务启动模块<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-validator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-xss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.ow2.asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${asm.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-websocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-undertow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-json<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-databases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-dozer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-goods-entity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：导入资料中提供的配置文件</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415095309623.png" alt="image-20200415095309623"></p><p>第三步：在配置中心Nacos中创建pd-goods-server.yml</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415095706237.png" alt="image-20200415095706237"></p><p>配置文件内容如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 在这里配置 权限服务 所有环境都能使用的配置</span><span class="token key atrule">pinda</span><span class="token punctuation">:</span>  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> pd_goods  <span class="token key atrule">swagger</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">docket</span><span class="token punctuation">:</span>      <span class="token key atrule">core</span><span class="token punctuation">:</span>        <span class="token key atrule">title</span><span class="token punctuation">:</span> 核心模块        <span class="token key atrule">base-package</span><span class="token punctuation">:</span> com.itheima.pinda.goods.controller<span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8767</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编写启动类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>validator<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">EnableFormValidator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EnableDiscoveryClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">EnableHystrix</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">EnableFeignClients</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Environment</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">UnknownHostException</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableHystrix</span><span class="token annotation punctuation">@EnableFeignClients</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"com.itheima.pinda"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EnableTransactionManagement</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@EnableFormValidator</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsServerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>        <span class="token class-name">ConfigurableApplicationContext</span> application <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">GoodsServerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Environment</span> env <span class="token operator">=</span> application<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"\n----------------------------------------------------------\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"应用 '{}' 运行成功! 访问连接:\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"Swagger文档: \t\thttp://{}:{}/doc.html\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">,</span>                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"spring.application.name"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"server.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：导入资料中提供的配置类</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415100417595.png" alt="image-20200415100417595"></p><p>第六步：创建Mapper接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">BaseMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Repository</span><span class="token punctuation">;</span><span class="token comment">/** * Mapper 接口 */</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsInfoMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：创建Service接口和实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsInfoService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfoServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfoMapper</span><span class="token punctuation">,</span> <span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">GoodsInfoService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：创建Controller</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span></span><span class="token class-name">Page</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">SuperEntity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span></span><span class="token class-name">Wraps</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LbqWrapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>dozer<span class="token punctuation">.</span></span><span class="token class-name">DozerUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoPageDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoSaveDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoUpdateDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GoodsInfoService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>log<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SysLog</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiImplicitParam</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiImplicitParams</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Validated</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Validated</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/goodsInfo"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"GoodsInfo"</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token string">"商品信息"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsInfoController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">DozerUtils</span> dozer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">GoodsInfoService</span> goodsInfoService<span class="token punctuation">;</span>    <span class="token comment">/**     * 分页查询商品信息     *     * @param data 分页查询对象     * @return 查询结果     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分页查询商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"分页查询商品信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"current"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"当前页"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"size"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"每页显示几条"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/page"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"分页查询商品信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IPage</span><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfoPageDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LbqWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        wrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getBarCode</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getBarCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">geHeader</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getStartCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">leFooter</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getEndCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        goodsInfoService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"查询商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"查询商品信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"查询商品信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfoPageDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">LbqWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        wrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getBarCode</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getBarCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">geHeader</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getStartCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">leFooter</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getEndCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>goodsInfoService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 查询商品信息     *     * @param id 主键id     * @return 查询结果     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"查询商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"查询商品信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"查询商品信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>goodsInfoService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 新增商品信息     *     * @param data 新增对象     * @return 新增结果     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"新增商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"新增商品信息不为空的字段"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"新增商品信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">GoodsInfoSaveDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">GoodsInfo</span> <span class="token class-name">GoodsInfo</span> <span class="token operator">=</span> dozer<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token class-name">GoodsInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        goodsInfoService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 修改商品信息     *     * @param data 修改对象     * @return 修改结果     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"修改商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"修改商品信息不为空的字段"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PutMapping</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"修改商品信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span><span class="token punctuation">(</span><span class="token class-name">SuperEntity<span class="token punctuation">.</span>Update</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token class-name">GoodsInfoUpdateDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">GoodsInfo</span> <span class="token class-name">GoodsInfo</span> <span class="token operator">=</span> dozer<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token class-name">GoodsInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        goodsInfoService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">GoodsInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 删除商品信息     *     * @param ids 主键id     * @return 删除结果     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"删除商品信息"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据id物理删除商品信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@SysLog</span><span class="token punctuation">(</span><span class="token string">"删除商品信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@DeleteMapping</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"ids[]"</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>        goodsInfoService<span class="token punctuation">.</span><span class="token function">removeByIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-4-1-3-配置网关路由规则"><a href="#2-1-4-1-3-配置网关路由规则" class="headerlink" title="2.1.4.1.3 配置网关路由规则"></a>2.1.4.1.3 配置网关路由规则</h5><p>在Nacos中的pd-gateway.yml中新增商品服务相关的路由配置，内容如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">zuul</span><span class="token punctuation">:</span>  <span class="token comment">#  debug:</span>  <span class="token comment">#    request: true</span>  <span class="token comment">#  include-debug-header: true</span>  <span class="token key atrule">retryable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">servlet-path</span><span class="token punctuation">:</span> /         <span class="token comment"># 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀</span>  <span class="token key atrule">ignored-services</span><span class="token punctuation">:</span> <span class="token string">"*"</span>   <span class="token comment"># 忽略eureka上的所有服务</span>  <span class="token key atrule">sensitive-headers</span><span class="token punctuation">:</span>  <span class="token comment"># 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置</span>  <span class="token comment">#  prefix: /api #为zuul设置一个公共的前缀</span>  <span class="token comment">#  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除</span>  <span class="token key atrule">routes</span><span class="token punctuation">:</span>  <span class="token comment"># 路由配置方式</span>    <span class="token key atrule">authority</span><span class="token punctuation">:</span>  <span class="token comment"># authority是路由名称，可以随便定义，但是path和service-id需要一一对应</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> /authority/<span class="token important">**</span>      <span class="token key atrule">serviceId</span><span class="token punctuation">:</span> pd<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>server    <span class="token key atrule">goods</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> /goods/<span class="token important">**</span>      <span class="token key atrule">serviceId</span><span class="token punctuation">:</span> pd<span class="token punctuation">-</span>goods<span class="token punctuation">-</span>server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-4-1-4-前端开发"><a href="#2-1-4-1-4-前端开发" class="headerlink" title="2.1.4.1.4 前端开发"></a>2.1.4.1.4 前端开发</h5><p>可以将pinda-authority-ui作为前端开发脚手架，基于此工程开发商品服务相关页面。资料中已经提供了开发完成的前端工程，直接运行即可。</p><h5 id="2-1-4-1-5-配置菜单和资源权限"><a href="#2-1-4-1-5-配置菜单和资源权限" class="headerlink" title="2.1.4.1.5 配置菜单和资源权限"></a>2.1.4.1.5 配置菜单和资源权限</h5><p>启动网关服务、权限服务、商品服务、前端工程，使用管理员账号登录，配置商品服务相关的菜单和对应的资源权限。</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415102224580.png" alt="image-20200415102224580"></p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415102314102.png" alt="image-20200415102314102"></p><p>goodsInfo:add    新增        POST    /goodsInfo<br>goodsInfo:update    修改        PUT    /goodsInfo<br>goodsInfo:delete    删除        DELETE    /goodsInfo<br>goodsInfo:view    列表        GET    /goodsInfo/page</p><h5 id="2-1-4-1-6-配置角色"><a href="#2-1-4-1-6-配置角色" class="headerlink" title="2.1.4.1.6 配置角色"></a>2.1.4.1.6 配置角色</h5><p>启动网关服务和权限服务，使用管理员账号登录。创建新角色并进行配置(菜单权限和资源权限)和授权(为用户分配角色)。</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415105314675.png" alt="image-20200415105314675"></p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415105358366.png" alt="image-20200415105358366"></p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200415105457620.png" alt="image-20200415105457620"></p><h4 id="2-1-4-2-已有项目集成"><a href="#2-1-4-2-已有项目集成" class="headerlink" title="2.1.4.2 已有项目集成"></a>2.1.4.2 已有项目集成</h4><p>本小节通过一个已经完成开发的TMS(品达物流)项目来展示如何进行已有项目集成的过程。</p><h5 id="2-1-4-2-1-TMS调整"><a href="#2-1-4-2-1-TMS调整" class="headerlink" title="2.1.4.2.1 TMS调整"></a>2.1.4.2.1 TMS调整</h5><h6 id="2-1-4-2-1-1-页面菜单"><a href="#2-1-4-2-1-1-页面菜单" class="headerlink" title="2.1.4.2.1.1 页面菜单"></a>2.1.4.2.1.1 页面菜单</h6><p>对于已经完成相关业务开发的项目，可以将其前端系统的页面通过iframe的形式内嵌到通用权限系统的前端页面中，这就需要对其前端系统的页面进行相应的修改。因为原来的TMS系统前端页面的左侧菜单和导航菜单都在自己页面中展示，现在需要将这些菜单配置到通用权限系统中，通过权限系统的前端系统来展示。</p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/image-20200423103130632.png" alt="image-20200423103130632"></p><h6 id="2-1-4-2-1-2-请求地址"><a href="#2-1-4-2-1-2-请求地址" class="headerlink" title="2.1.4.2.1.2 请求地址"></a>2.1.4.2.1.2 请求地址</h6><p>为了能够进行鉴权相关处理，需要将TMS前端发送的请求首先经过通用权限系统的网关进行处理：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/clip_image002-1587612549680.jpg" alt="img"></p><h5 id="2-1-4-2-2-网关路由配置"><a href="#2-1-4-2-2-网关路由配置" class="headerlink" title="2.1.4.2.2 网关路由配置"></a>2.1.4.2.2 网关路由配置</h5><p>配置通用权限系统的网关路由规则，将针对TMS的请求转发到TMS相关服务：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">zuul</span><span class="token punctuation">:</span>  <span class="token key atrule">retryable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">servlet-path</span><span class="token punctuation">:</span> /  <span class="token key atrule">ignored-services</span><span class="token punctuation">:</span> <span class="token string">"*"</span>   <span class="token comment"># 忽略eureka上的所有服务</span>  <span class="token key atrule">sensitive-headers</span><span class="token punctuation">:</span>  <span class="token comment"># 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置</span>  <span class="token key atrule">routes</span><span class="token punctuation">:</span>  <span class="token comment"># 路由配置方式</span>    <span class="token key atrule">authority</span><span class="token punctuation">:</span>       <span class="token key atrule">path</span><span class="token punctuation">:</span> /authority/<span class="token important">**</span>      <span class="token key atrule">serviceId</span><span class="token punctuation">:</span> pd<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>server    <span class="token key atrule">pay</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> /pay/<span class="token important">**</span>      <span class="token key atrule">serviceId</span><span class="token punctuation">:</span> pd<span class="token punctuation">-</span>ofpay<span class="token punctuation">-</span>server    <span class="token key atrule">web-manager</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> /web<span class="token punctuation">-</span>manager/<span class="token important">**</span>      <span class="token key atrule">serviceId</span><span class="token punctuation">:</span> pd<span class="token punctuation">-</span>web<span class="token punctuation">-</span>manager    <span class="token key atrule">web-xczx</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> /xczx/api/<span class="token important">**</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//xc<span class="token punctuation">-</span>main<span class="token punctuation">-</span>java.itheima.net<span class="token punctuation">:</span>7291/api/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-4-2-3-通用权限系统配置"><a href="#2-1-4-2-3-通用权限系统配置" class="headerlink" title="2.1.4.2.3 通用权限系统配置"></a>2.1.4.2.3 通用权限系统配置</h5><h6 id="2-1-4-2-3-1-菜单配置"><a href="#2-1-4-2-3-1-菜单配置" class="headerlink" title="2.1.4.2.3.1 菜单配置"></a>2.1.4.2.3.1 菜单配置</h6><p>登录通用权限系统，配置TMS项目相应的菜单：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200423113627553.png" alt="image-20200423113627553"></p><h6 id="2-1-4-2-3-2-资源权限配置"><a href="#2-1-4-2-3-2-资源权限配置" class="headerlink" title="2.1.4.2.3.2 资源权限配置"></a>2.1.4.2.3.2 资源权限配置</h6><p>资源权限都是关联到某个菜单下的，所以要配置资源权限需要先选中某个菜单，然后就可以配置相关资源权限了：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200423114115893.png" alt="image-20200423114115893"></p><h6 id="2-1-4-2-3-3-角色配置"><a href="#2-1-4-2-3-3-角色配置" class="headerlink" title="2.1.4.2.3.3 角色配置"></a>2.1.4.2.3.3 角色配置</h6><p>登录通用权限系统，在角色管理菜单中配置TMS项目中使用到的角色：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200423114347953.png" alt="image-20200423114347953"></p><p>角色创建完成后可以为角色配置菜单权限和资源权限：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20200423114722781.png" alt="image-20200423114722781"></p><p>完成角色的菜单权限和资源权限配置后可以将角色授权给用户：</p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/image-20200423115004298.png" alt="image-20200423115004298"></p><p><img src="E:/Users/durex/Documents/%25E5%25AD%25A6%25E4%25B9%25A0%25E7%25AC%2594%25E8%25AE%25B0/Java%25E7%25AC%2594%25E8%25AE%25B0/%25E4%25B8%25AD%25E5%258F%25B0%25E7%25BB%2584%25E4%25BB%25B6%25E8%25AF%25BE%25E7%25A8%258B%25E9%2585%258D%25E5%25A5%2597%25E8%25B5%2584%25E6%2596%2599/%25E5%25B8%25B8%25E8%25A7%2581%25E7%25BB%2584%25E4%25BB%25B6%25E4%25B8%258E%25E4%25B8%25AD%25E5%258F%25B0%25E5%258C%2596/%25E8%25AE%25B2%25E4%25B9%2589/assets/image-20200423115042703.png" alt="image-20200423115042703"></p><h2 id="2-2-注册登录服务"><a href="#2-2-注册登录服务" class="headerlink" title="2.2. 注册登录服务"></a>2.2. 注册登录服务</h2><h3 id="2-2-1-功能概述"><a href="#2-2-1-功能概述" class="headerlink" title="2.2.1. 功能概述"></a>2.2.1. 功能概述</h3><p>登录认证几乎是任何一个系统的标配，web 系统、APP、PC 客户端等都需要注册、登录、认证。</p><p>以淘宝为例，如果我们想要下单，首先需要注册一个账号。拥有了账号之后，我们需要输入用户名、密码完成登录过程。之后如果你在一段时间内再次进入系统，是不需要输入用户名和密码的，只有在长时间不登录的情况下访问系统才需要再次输入用户名和密码。 </p><p>本服务提供多种登录方式：用户名密码登录、手机验证码登录、邮箱登录、微信扫码登录、微博登录、qq登录，登录成功自动完成注册。</p><p>工程结构：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20201211112954510.png" alt="image-20201211112954510"></p><p>项目服务有两个：网关服务和注册登录服务</p><table><thead><tr><th>应用</th><th>端口</th><th>说明</th><th>启动命令</th></tr></thead><tbody><tr><td>auth-gateway</td><td>8782</td><td>网关服务</td><td>java -jar auth-gateway.jar &amp;</td></tr><tr><td>auth</td><td>8783</td><td>注册登录服务</td><td>java -jar auth.jar &amp;</td></tr></tbody></table><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20201211134913609.png" alt="image-20201211134913609"></p><p>项目依赖环境：</p><ul><li>mysql</li><li>redis</li><li>nacos</li></ul><h3 id="2-2-2-应用场景"><a href="#2-2-2-应用场景" class="headerlink" title="2.2.2. 应用场景"></a>2.2.2. 应用场景</h3><p>针对互联网用户：</p><ul><li>用户名密码登录/注册</li><li>手机验证码登录/注册</li><li>电子邮箱登录/注册</li><li>微信登录/注册</li><li>微博登录/注册</li><li>qq登录/注册</li></ul><h3 id="2-2-3-使用说明"><a href="#2-2-3-使用说明" class="headerlink" title="2.2.3. 使用说明"></a>2.2.3. 使用说明</h3><p>第一步：部署网关服务和注册登录服务并成功启动</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20201211140800511.png" alt="image-20201211140800511"></p><p>第二步：开发自己的业务应用</p><p>第三步：在网关服务配置文件中配置路由规则，由网关服务进行jwt校验</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token comment"># 路由网关配置</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token comment"># 配置路由规则</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token comment"># 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> CUST<span class="token punctuation">-</span>AUTH          <span class="token comment"># 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cust<span class="token punctuation">-</span>auth          <span class="token comment"># Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/cust/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix= 1        <span class="token comment"># 配置其他业务微服务</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> CUST<span class="token punctuation">-</span>AUTH<span class="token punctuation">-</span>DEMO          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cust<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>demo          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/demo/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix= 1        <span class="token comment"># 配置其他业务微服务</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> CUST<span class="token punctuation">-</span>USER          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cust<span class="token punctuation">-</span>user          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/user/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix= 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：修改业务应用页面，请求时需要将token放在请求头中提交</p><h2 id="2-3-分布式ID"><a href="#2-3-分布式ID" class="headerlink" title="2.3. 分布式ID"></a>2.3. 分布式ID</h2><h3 id="2-3-1-功能概述"><a href="#2-3-1-功能概述" class="headerlink" title="2.3.1. 功能概述"></a>2.3.1. 功能概述</h3><p>ID，全称Identifier，中文翻译为标识符，是用来唯一标识对象或记录的符号。比如我们每个人都有自己的身份证号，这个就是我们的标识符，有了这个唯一标识，就能快速识别出每一个人。</p><p><strong>在计算机世界里，复杂的分布式系统中，经常需要对大量的数据、消息、HTTP 请求等进行唯一标识。</strong>比如对于分微服务架构的系统中，服务间相互调用需要唯一标识，幂等处理，调用链路分析，日志追踪的时候都需要使用这个唯一标识，此时我们的系统就迫切的需要一个全局唯一的ID。</p><p>另外随着社会的发展，各种金融、电商、支付、等系统中产生的数据越来越多，对数据库进行分库分表是比较常见的，而分库后则需要有一个唯一ID来标识一条数据或消息，单个数据库的自增ID显然不能满足需求，此时也会需要一个能够生成全局唯一ID的系统。</p><p>工程结构：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B8%8E%E4%B8%AD%E5%8F%B0%E5%8C%96.assets/image-20201210152930524.png" alt="image-20201210152930524"></p><h3 id="2-3-2-应用场景"><a href="#2-3-2-应用场景" class="headerlink" title="2.3.2. 应用场景"></a>2.3.2. 应用场景</h3><p><strong>1、全局唯一</strong></p><p>这个最简单，就是说不能出现重复的ID，既然是唯一标识，这是最基本的要求。</p><p><strong>2、趋势递增</strong></p><p><strong>先来了解下什么是趋势递增？</strong></p><p>简单说就是在一段时间内，生成的ID是递增的趋势，而不强求下一个ID必须大于前一ID。例如在一段时间内生成的ID在【0，1000】之间，过段时间生成的ID在【1000，2000】之间。</p><p><strong>为什么要趋势递增？</strong></p><p>目前大部分的互联网公司使用了开源的MySQL数据库，存储引擎选择InnoDB。MySQL InnoDB引擎中使用的是聚集索引，由于多数RDBMS数据库使用B-tree的数据结构来存储索引数据，在主键的选择上面我们应该尽量使用有序的主键，这样在插入新的数据时B-tree的结构不会时常被打乱重塑，能有效的提高存取效率。</p><p><strong>3、单调递增</strong></p><p>通俗的说就是下一个ID一定大于上一个ID，例如事务版本号、IM增量消息、排序等特殊需求。</p><p><strong>4、信息安全</strong></p><p>如果ID是连续递增的，那么恶意用户可以根据当前ID推测出下一个ID，爬取系统中数据的工作就非常容易实现，直接按照顺序访问指定URL即可；如果是订单号就更加危险，竞争对手可以直接知道系统一天的总订单量。所以在一些应用场景下，会需要ID无规则、不规则，切不易被破解。</p><h3 id="2-3-4-使用说明"><a href="#2-3-4-使用说明" class="headerlink" title="2.3.4. 使用说明"></a>2.3.4. 使用说明</h3><p>分布式ID生成系统部署完成后，第三方系统接入即可直接获取ID。</p><ol><li><p>引入distributedid-client依赖：在项目pom.xml添加坐标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima.distributedid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>distributedid-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">   2. 分布式ID生成系统客户端配置，在项目resources目录下编辑distributedid_client.properties   ```properties   #服务器地址   distributedid.server=211.103.136.244:7315   #部署多个的话，可自行添加   #distributedid.server=211.103.136.244:7315,ip2:port,...   #超时时间   distributedid.readTimeout=5000   distributedid.connectTimeout=5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取ID时，直接调用即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Long</span> id <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span><span class="token comment">//从服务端获取自增型ID</span>id <span class="token operator">=</span> <span class="token class-name">DistributedId</span><span class="token punctuation">.</span><span class="token function">autoincrementId</span><span class="token punctuation">(</span><span class="token string">"your service name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//本地生成雪花算法ID</span>id <span class="token operator">=</span> <span class="token class-name">DistributedId</span><span class="token punctuation">.</span><span class="token function">snowflake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//从服务端获取雪花算法ID</span>id <span class="token operator">=</span> <span class="token class-name">DistributedId</span><span class="token punctuation">.</span><span class="token function">snowflakeFromServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见组件与中台化&quot;&gt;&lt;a href=&quot;#常见组件与中台化&quot; class=&quot;headerlink&quot; title=&quot;常见组件与中台化&quot;&gt;&lt;/a&gt;常见组件与中台化&lt;/h1&gt;&lt;h1 id=&quot;1-中台概述&quot;&gt;&lt;a href=&quot;#1-中台概述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="阶段一 中台战略与组件化开发专题课程" scheme="https://chenliren9527.github.io/categories/%E9%98%B6%E6%AE%B5%E4%B8%80-%E4%B8%AD%E5%8F%B0%E6%88%98%E7%95%A5%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%93%E9%A2%98%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="中台" scheme="https://chenliren9527.github.io/tags/%E4%B8%AD%E5%8F%B0/"/>
    
    <category term="Java高手课" scheme="https://chenliren9527.github.io/tags/Java%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>阶段一 第三章 规则引擎Drools</title>
    <link href="https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-gui-ze-yin-qing-drools/"/>
    <id>https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-gui-ze-yin-qing-drools/</id>
    <published>2021-12-27T15:13:49.000Z</published>
    <updated>2022-05-17T05:35:19.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="规则引擎-Drools"><a href="#规则引擎-Drools" class="headerlink" title="规则引擎 Drools"></a>规则引擎 Drools</h1><h2 id="1-问题引出"><a href="#1-问题引出" class="headerlink" title="1. 问题引出"></a>1. 问题引出</h2><p>现有一个在线申请信用卡的业务场景，用户需要录入个人信息，如下图所示：</p><img src="Java高手班-阶段一-规则引擎Drools.assets/image-20200114163727767.png" alt="image-20200114163727767" style="float: left;"><p>通过上图可以看到，用户录入的个人信息包括姓名、性别、年龄、学历、电话、所在公司、职位、月收入、是否有房、是否有车、是否有信用卡等。录入完成后点击申请按钮提交即可。</p><p>用户提交申请后，需要在系统的服务端进行<strong>用户信息合法性检查</strong>(是否有资格申请信用卡)，只有通过合法性检查的用户才可以成功申请到信用卡(注意：不同用户有可能申请到的信用卡额度不同)。</p><p>检查用户信息合法性的规则如下：</p><table><thead><tr><th>规则编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>检查学历与薪水1</td><td>如果申请人既没房也没车，同时学历为大专以下，并且月薪少于5000，那么不通过</td></tr><tr><td>2</td><td>检查学历与薪水2</td><td>如果申请人既没房也没车，同时学历为大专或本科，并且月薪少于3000，那么不通过</td></tr><tr><td>3</td><td>检查学历与薪水3</td><td>如果申请人既没房也没车，同时学历为本科以上，并且月薪少于2000，同时之前没有信用卡的，那么不通过</td></tr><tr><td>4</td><td>检查申请人已有的信用卡数量</td><td>如果申请人现有的信用卡数量大于10，那么不通过</td></tr></tbody></table><p>用户信息合法性检查通过后，还需要根据如下<strong>信用卡发放规则</strong>确定用户所办信用卡的额度：</p><table><thead><tr><th>规则编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>规则1</td><td>如果申请人有房有车，或者月收入在20000以上，那么发放的信用卡额度为15000</td></tr><tr><td>2</td><td>规则2</td><td>如果申请人没房没车，但月收入在10000~20000之间，那么发放的信用卡额度为6000</td></tr><tr><td>3</td><td>规则3</td><td>如果申请人没房没车，月收入在10000以下，那么发放的信用卡额度为3000</td></tr><tr><td>4</td><td>规则4</td><td>如果申请人有房没车或者没房但有车，月收入在10000以下，那么发放的信用卡额度为5000</td></tr><tr><td>5</td><td>规则5</td><td>如果申请人有房没车或者是没房但有车，月收入在10000~20000之间，那么发放的信用卡额度为8000</td></tr></tbody></table><p>思考：如何实现上面的业务逻辑呢？</p><p>我们最容易想到的就是使用分支判断(if else)来实现，例如通过如下代码来检查用户信息合法性:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//此处为伪代码</span><span class="token comment">//检查用户信息合法性，返回true表示检查通过，返回false表示检查不通过</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">checkUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//如果申请人既没房也没车，同时学历为大专以下，并且月薪少于5000，那么不通过</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"大专以下"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>getSalary <span class="token operator">&lt;</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人既没房也没车，同时学历为大专或本科，并且月薪少于3000，那么不通过</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"大专或本科"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>getSalary <span class="token operator">&lt;</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人既没房也没车，同时学历为本科以上，并且月薪少于2000，同时之前没有信用卡的，那么不通过</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"本科以上"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>getSalary <span class="token operator">&lt;</span> <span class="token number">2000</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getHasCreditCard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人现有的信用卡数量大于10，那么不通过</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getCreditCardCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果用户信息合法性检查通过后，还需要通过如下代码确定用户所办信用卡的额度：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//此处为伪代码</span><span class="token comment">//根据用户输入信息确定信用卡额度</span><span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">determineCreditCardLimit</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//如果申请人有房有车，或者月收入在20000以上，那么发放的信用卡额度为15000</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>        <span class="token operator">||</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">15000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人没房没车，并且月收入在10000到20000之间，那么发放的信用卡额度为6000</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>       <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10000</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">6000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人没房没车，并且月收入在10000以下，那么发放的信用卡额度为3000</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>       <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">3000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人有房没车或者没房但有车，并且月收入在10000以下，那么发放的信用卡额度为5000</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">5000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果申请人有房没车或者没房但有车，并且月收入在10000到20000之间，那么发放的信用卡额度为8000</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getcar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10000</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">8000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的伪代码我们可以看到，我们的业务规则是通过Java代码的方式实现的。这种实现方式存在如下问题：</p><p>1、硬编码实现业务规则难以维护</p><p>2、硬编码实现业务规则难以应对变化</p><p>3、业务规则发生变化需要修改代码，重启服务后才能生效</p><p>那么面对上面的业务场景，还有什么好的实现方式吗？</p><p>答案是<strong>规则引擎</strong>。</p><h2 id="2-规则引擎概述"><a href="#2-规则引擎概述" class="headerlink" title="2. 规则引擎概述"></a>2. 规则引擎概述</h2><h3 id="2-1-什么是规则引擎"><a href="#2-1-什么是规则引擎" class="headerlink" title="2.1 什么是规则引擎"></a>2.1 什么是规则引擎</h3><p><strong>规则引擎</strong>，全称为<strong>业务规则管理系统</strong>，英文名为BRMS(即Business Rule Management System)。规则引擎的主要思想是将应用程序中的业务决策部分分离出来，并使用预定义的语义模块编写业务决策（业务规则），由用户或开发者在需要时进行配置、管理。</p><p>需要注意的是规则引擎并不是一个具体的技术框架，而是指的一类系统，即业务规则管理系统。目前市面上具体的规则引擎产品有：drools、VisualRules、iLog等。</p><p>规则引擎实现了将业务决策从应用程序代码中分离出来，接收数据输入，解释业务规则，并根据业务规则做出业务决策。规则引擎其实就是一个输入输出平台。</p><p>上面的申请信用卡业务场景使用规则引擎后效果如下：</p><img src="Java高手班-阶段一-规则引擎Drools.assets/4.png" alt="4" style="float: left; zoom: 80%;"><p>系统中引入规则引擎后，业务规则不再以程序代码的形式驻留在系统中，取而代之的是处理规则的规则引擎，业务规则存储在规则库中，完全独立于程序。业务人员可以像管理数据一样对业务规则进行管理，比如查询、添加、更新、统计、提交业务规则等。业务规则被加载到规则引擎中供应用系统调用。</p><h3 id="2-2-使用规则引擎的优势"><a href="#2-2-使用规则引擎的优势" class="headerlink" title="2.2 使用规则引擎的优势"></a>2.2 使用规则引擎的优势</h3><p>使用规则引擎的优势如下：</p><p>1、业务规则与系统代码分离，实现业务规则的集中管理</p><p>2、在不重启服务的情况下可随时对业务规则进行扩展和维护</p><p>3、可以动态修改业务规则，从而快速响应需求变更</p><p>4、规则引擎是相对独立的，只关心业务规则，使得业务分析人员也可以参与编辑、维护系统的业务规则</p><p>5、减少了硬编码业务规则的成本和风险</p><p>6、使用规则引擎提供的规则编辑工具，使复杂的业务规则实现变得的简单</p><h3 id="2-3-规则引擎应用场景"><a href="#2-3-规则引擎应用场景" class="headerlink" title="2.3 规则引擎应用场景"></a>2.3 规则引擎应用场景</h3><p>对于一些存在比较复杂的业务规则并且业务规则会频繁变动的系统比较适合使用规则引擎，如下：</p><p>1、风险控制系统—-风险贷款、风险评估</p><p>2、反欺诈项目—-银行贷款、征信验证</p><p>3、决策平台系统—-财务计算</p><p>4、促销平台系统—-满减、打折、加价购</p><h3 id="2-4-Drools介绍"><a href="#2-4-Drools介绍" class="headerlink" title="2.4 Drools介绍"></a>2.4 Drools介绍</h3><p>drools是一款由JBoss组织提供的基于Java语言开发的开源规则引擎，可以将复杂且多变的业务规则从硬编码中解放出来，以规则脚本的形式存放在文件或特定的存储介质中(例如存放在数据库中)，使得业务规则的变更不需要修改项目代码、重启服务器就可以在线上环境立即生效。</p><p>drools官网地址：<a href="https://drools.org/">https://drools.org/</a></p><p>drools源码下载地址：<a href="https://github.com/kiegroup/drools">https://github.com/kiegroup/drools</a></p><p>在项目中使用drools时，即可以单独使用也可以整合spring使用。如果单独使用只需要导入如下maven坐标即可：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果我们使用IDEA开发drools应用，IDEA中已经集成了drools插件。如果使用eclipse开发drools应用还需要单独安装drools插件。</p><p>drools API开发步骤如下：<img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/5.png" alt="5"></p><h2 id="3-Drools入门案例"><a href="#3-Drools入门案例" class="headerlink" title="3. Drools入门案例"></a>3. Drools入门案例</h2><p>本小节通过一个Drools入门案例来让大家初步了解Drools的使用方式、对Drools有一个整体概念。</p><h3 id="3-1-业务场景说明"><a href="#3-1-业务场景说明" class="headerlink" title="3.1 业务场景说明"></a>3.1 业务场景说明</h3><p>业务场景：消费者在图书商城购买图书，下单后需要在支付页面显示订单优惠后的价格。具体优惠规则如下：</p><table><thead><tr><th>规则编号</th><th>规则名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>规则一</td><td>所购图书总价在100元以下的没有优惠</td></tr><tr><td>2</td><td>规则二</td><td>所购图书总价在100到200元的优惠20元</td></tr><tr><td>3</td><td>规则三</td><td>所购图书总价在200到300元的优惠50元</td></tr><tr><td>4</td><td>规则四</td><td>所购图书总价在300元以上的优惠100元</td></tr></tbody></table><p>现在需要根据上面的规则计算优惠后的价格。</p><h3 id="3-2-开发实现"><a href="#3-2-开发实现" class="headerlink" title="3.2 开发实现"></a>3.2 开发实现</h3><p>第一步：创建maven工程drools_quickstart并导入drools相关maven坐标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：根据drools要求创建resources/META-INF/kmodule.xml配置文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kmodule</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.drools.org/xsd/kmodule<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--        name:指定kbase的名称，可以任意，但是需要唯一        packages:指定规则文件的目录，需要根据实际情况填写，否则无法加载到规则文件        default:指定当前kbase是否为默认    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbase</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myKbase1<span class="token punctuation">"</span></span> <span class="token attr-name">packages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--            name:指定ksession名称，可以任意，但是需要唯一            default:指定当前session是否为默认        --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ksession</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ksession-rule<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbase</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kmodule</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：上面配置文件的名称和位置都是固定写法，不能更改</p><p>第三步：创建实体类Order</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token comment">/** * 订单 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Double</span> originalPrice<span class="token punctuation">;</span><span class="token comment">//订单原始价格，即优惠前价格</span>    <span class="token keyword">private</span> <span class="token class-name">Double</span> realPrice<span class="token punctuation">;</span><span class="token comment">//订单真实价格，即优惠后价格</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Order{"</span> <span class="token operator">+</span>                <span class="token string">"originalPrice="</span> <span class="token operator">+</span> originalPrice <span class="token operator">+</span>                <span class="token string">", realPrice="</span> <span class="token operator">+</span> realPrice <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> originalPrice<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOriginalPrice</span><span class="token punctuation">(</span><span class="token class-name">Double</span> originalPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>originalPrice <span class="token operator">=</span> originalPrice<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">getRealPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> realPrice<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRealPrice</span><span class="token punctuation">(</span><span class="token class-name">Double</span> realPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>realPrice <span class="token operator">=</span> realPrice<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：创建规则文件resources/rules/bookDiscount.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//图书优惠规则</span><span class="token keyword">package</span> <span class="token namespace">book<span class="token punctuation">.</span>discount</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Order</span><span class="token comment">//规则一：所购图书总价在100元以下的没有优惠</span>rule <span class="token string">"book_discount_1"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span>    then        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则一：所购图书总价在100元以下的没有优惠"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//规则二：所购图书总价在100到200元的优惠20元</span>rule <span class="token string">"book_discount_2"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token generics"><span class="token punctuation">&lt;</span> 200 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> originalPrice <span class="token punctuation">&gt;</span></span><span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    then        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则二：所购图书总价在100到200元的优惠20元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//规则三：所购图书总价在200到300元的优惠50元</span>rule <span class="token string">"book_discount_3"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&lt;=</span> <span class="token number">300</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&gt;=</span> <span class="token number">200</span><span class="token punctuation">)</span>    then        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则三：所购图书总价在200到300元的优惠50元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//规则四：所购图书总价在300元以上的优惠100元</span>rule <span class="token string">"book_discount_4"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">300</span><span class="token punctuation">)</span>    then        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则四：所购图书总价在300元以上的优惠100元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//会话对象，用于和规则引擎交互</span>    <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//构造订单对象，设置原始价格，由规则引擎根据优惠规则计算优惠后的价格</span>    <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    order<span class="token punctuation">.</span><span class="token function">setOriginalPrice</span><span class="token punctuation">(</span><span class="token number">210D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配</span>    kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//激活规则引擎，如果规则匹配成功则执行规则</span>    kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//关闭会话</span>    kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"优惠前原始价格："</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>                       <span class="token string">"，优惠后价格："</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getRealPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的入门案例我们可以发现，使用drools规则引擎主要工作就是编写规则文件，在规则文件中定义跟业务相关的业务规则，例如本案例定义的就是图书优惠规则。规则定义好后就需要调用drools提供的API将数据提供给规则引擎进行规则模式匹配，规则引擎会执行匹配成功的规则并将计算的结果返回给我们。</p><p>可能大家会有疑问，就是我们虽然没有在代码中编写规则的判断逻辑，但是我们还是在规则文件中编写了业务规则，这跟在代码中编写规则有什么本质的区别呢？</p><p>我们前面其实已经提到，使用规则引擎时业务规则可以做到动态管理。业务人员可以像管理数据一样对业务规则进行管理，比如查询、添加、更新、统计、提交业务规则等。这样就可以做到在不重启服务的情况下调整业务规则。</p><h3 id="3-3-小结"><a href="#3-3-小结" class="headerlink" title="3.3 小结"></a>3.3 小结</h3><h4 id="3-3-1-规则引擎构成"><a href="#3-3-1-规则引擎构成" class="headerlink" title="3.3.1 规则引擎构成"></a>3.3.1 规则引擎构成</h4><p>drools规则引擎由以下三部分构成：</p><ul><li>Working Memory（工作内存）</li><li>Rule Base（规则库）</li><li>Inference Engine（推理引擎）</li></ul><p>其中Inference Engine（推理引擎）又包括：</p><ul><li>Pattern Matcher（匹配器）</li><li>Agenda(议程)</li><li>Execution Engine（执行引擎）</li></ul><p>如下图所示：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/8.png" alt="8"></p><h4 id="3-3-2-相关概念说明"><a href="#3-3-2-相关概念说明" class="headerlink" title="3.3.2 相关概念说明"></a>3.3.2 相关概念说明</h4><p><strong>Working Memory</strong>：工作内存，drools规则引擎会从Working Memory中获取数据并和规则文件中定义的规则进行模式匹配，所以我们开发的应用程序只需要将我们的数据插入到Working Memory中即可，例如本案例中我们调用kieSession.insert(order)就是将order对象插入到了工作内存中。</p><p><strong>Fact</strong>：事实，是指在drools 规则应用当中，将一个普通的JavaBean插入到Working Memory后的对象就是Fact对象，例如本案例中的Order对象就属于Fact对象。Fact对象是我们的应用和规则引擎进行数据交互的桥梁或通道。</p><p><strong>Rule Base</strong>：规则库，我们在规则文件中定义的规则都会被加载到规则库中。</p><p><strong>Pattern Matcher</strong>：匹配器，将Rule Base中的所有规则与Working Memory中的Fact对象进行模式匹配，匹配成功的规则将被激活并放入Agenda中。</p><p><strong>Agenda</strong>：议程，用于存放通过匹配器进行模式匹配后被激活的规则。</p><p><strong>Execution Engine</strong>：执行引擎，执行Agenda中被激活的规则。</p><h4 id="3-3-3-规则引擎执行过程"><a href="#3-3-3-规则引擎执行过程" class="headerlink" title="3.3.3 规则引擎执行过程"></a>3.3.3 规则引擎执行过程</h4><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/10.png" alt="10"></p><h4 id="3-3-4-KIE介绍"><a href="#3-3-4-KIE介绍" class="headerlink" title="3.3.4 KIE介绍"></a>3.3.4 KIE介绍</h4><p>我们在操作Drools时经常使用的API以及它们之间的关系如下图：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/9.png" alt="9"></p><p>通过上面的核心API可以发现，大部分类名都是以Kie开头。Kie全称为Knowledge Is Everything，即”知识就是一切”的缩写，是Jboss一系列项目的总称。如下图所示，Kie的主要模块有OptaPlanner、Drools、UberFire、jBPM。</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/11.png" alt="11"></p><p>通过上图可以看到，Drools是整个KIE项目中的一个组件，Drools中还包括一个Drools-WB的模块，它是一个可视化的规则编辑器。</p><h2 id="4-Drools基础语法"><a href="#4-Drools基础语法" class="headerlink" title="4. Drools基础语法"></a>4. Drools基础语法</h2><h3 id="4-1-规则文件构成"><a href="#4-1-规则文件构成" class="headerlink" title="4.1 规则文件构成"></a>4.1 规则文件构成</h3><p>在使用Drools时非常重要的一个工作就是编写规则文件，通常规则文件的后缀为.drl。</p><p>drl是Drools Rule Language的缩写。在规则文件中编写具体的规则内容。</p><p>一套完整的规则文件内容构成如下：</p><table><thead><tr><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>package</td><td>包名，只限于逻辑上的管理，同一个包名下的查询或者函数可以直接调用</td></tr><tr><td>import</td><td>用于导入类或者静态方法</td></tr><tr><td>global</td><td>全局变量</td></tr><tr><td>function</td><td>自定义函数</td></tr><tr><td>query</td><td>查询</td></tr><tr><td>rule end</td><td>规则体</td></tr></tbody></table><p>Drools支持的规则文件，除了drl形式，还有Excel文件类型的。</p><h3 id="4-2-规则体语法结构"><a href="#4-2-规则体语法结构" class="headerlink" title="4.2 规则体语法结构"></a>4.2 规则体语法结构</h3><p>规则体是规则文件内容中的重要组成部分，是进行业务规则判断、处理业务结果的部分。</p><p>规则体语法结构如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">rule <span class="token string">"ruleName"</span>    attributes    when        LHS    then        RHSend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>rule</strong>：关键字，表示规则开始，参数为规则的唯一名称。</p><p><strong>attributes</strong>：规则属性，是rule与when之间的参数，为可选项。</p><p><strong>when</strong>：关键字，后面跟规则的条件部分。</p><p><strong>LHS</strong>(Left Hand Side)：是规则的条件部分的通用名称。它由零个或多个条件元素组成。如果LHS为空，则它将被视为始终为true的条件元素。</p><p><strong>then</strong>：关键字，后面跟规则的结果部分。</p><p><strong>RHS</strong>(Right Hand Side)：是规则的后果或行动部分的通用名称。</p><p><strong>end</strong>：关键字，表示一个规则结束。</p><h3 id="4-3-注释"><a href="#4-3-注释" class="headerlink" title="4.3 注释"></a>4.3 注释</h3><p>在drl形式的规则文件中使用注释和Java类中使用注释一致，分为单行注释和多行注释。</p><p>单行注释用”//“进行标记，多行注释以”/<em>“开始，以”\</em>/“结束。如下示例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//规则rule1的注释，这是一个单行注释</span>rule <span class="token string">"rule1"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"rule1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">/*规则rule2的注释，这是一个多行注释*/</span>rule <span class="token string">"rule2"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"rule2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-4-Pattern模式匹配"><a href="#4-4-Pattern模式匹配" class="headerlink" title="4.4 Pattern模式匹配"></a>4.4 Pattern模式匹配</h3><p>前面我们已经知道了Drools中的匹配器可以将Rule Base中的所有规则与Working Memory中的Fact对象进行模式匹配，那么我们就需要在规则体的LHS部分定义规则并进行模式匹配。LHS部分由一个或者多个条件组成，条件又称为pattern。</p><p>pattern的语法结构为：绑定变量名:Object(Field约束)</p><p>其中绑定变量名可以省略，通常绑定变量名的命名一般建议以$开始。如果定义了绑定变量名，就可以在规则体的RHS部分使用此绑定变量名来操作相应的Fact对象。Field约束部分是需要返回true或者false的0个或多个表达式。</p><p>例如我们的入门案例中：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//规则二：所购图书总价在100到200元的优惠20元</span>rule <span class="token string">"book_discount_2"</span>    when    <span class="token comment">//Order为类型约束，originalPrice为属性约束</span>        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token generics"><span class="token punctuation">&lt;</span> 200 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> originalPrice <span class="token punctuation">&gt;</span></span><span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    then        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则二：所购图书总价在100到200元的优惠20元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的例子我们可以知道，匹配的条件为：</p><p>1、工作内存中必须存在Order这种类型的Fact对象—–类型约束</p><p>2、Fact对象的originalPrice属性值必须小于200——属性约束</p><p>3、Fact对象的originalPrice属性值必须大于等于100——属性约束</p><p>以上条件必须同时满足当前规则才有可能被激活。</p><p>绑定变量既可以用在对象上，也可以用在对象的属性上。例如上面的例子可以改为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//规则二：所购图书总价在100到200元的优惠20元</span>rule <span class="token string">"book_discount_2"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>$op<span class="token operator">:</span>originalPrice <span class="token generics"><span class="token punctuation">&lt;</span> 200 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> originalPrice <span class="token punctuation">&gt;</span></span><span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"$op="</span> <span class="token operator">+</span> $op<span class="token punctuation">)</span><span class="token punctuation">;</span>        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则二：所购图书总价在100到200元的优惠20元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>LHS部分还可以定义多个pattern，多个pattern之间可以使用and或者or进行连接，也可以不写，默认连接为and。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//规则二：所购图书总价在100到200元的优惠20元</span>rule <span class="token string">"book_discount_2"</span>    when        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>$op<span class="token operator">:</span>originalPrice <span class="token generics"><span class="token punctuation">&lt;</span> 200 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> originalPrice <span class="token punctuation">&gt;</span></span><span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> and        $customer<span class="token operator">:</span><span class="token class-name">Customer</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> gender<span class="token operator">==</span><span class="token string">'male'</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"$op="</span> <span class="token operator">+</span> $op<span class="token punctuation">)</span><span class="token punctuation">;</span>        $order<span class="token punctuation">.</span><span class="token function">setRealPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功匹配到规则二：所购图书总价在100到200元的优惠20元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-5-比较操作符"><a href="#4-5-比较操作符" class="headerlink" title="4.5 比较操作符"></a>4.5 比较操作符</h3><p>Drools提供的比较操作符，如下表：</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>contains</td><td>检查一个Fact对象的某个属性值是否包含一个指定的对象值</td></tr><tr><td>not contains</td><td>检查一个Fact对象的某个属性值是否不包含一个指定的对象值</td></tr><tr><td>memberOf</td><td>判断一个Fact对象的某个属性是否在一个或多个集合中</td></tr><tr><td>not memberOf</td><td>判断一个Fact对象的某个属性是否不在一个或多个集合中</td></tr><tr><td>matches</td><td>判断一个Fact对象的属性是否与提供的标准的Java正则表达式进行匹配</td></tr><tr><td>not matches</td><td>判断一个Fact对象的属性是否不与提供的标准的Java正则表达式进行匹配</td></tr></tbody></table><p>前6个比较操作符和Java中的完全相同，下面我们重点学习后6个比较操作符。</p><h4 id="4-5-1-语法"><a href="#4-5-1-语法" class="headerlink" title="4.5.1 语法"></a>4.5.1 语法</h4><ul><li><p><strong>contains | not contains语法结构</strong></p><p>Object(Field[Collection/Array] contains value)</p><p>Object(Field[Collection/Array] not contains value)</p></li><li><p><strong>memberOf | not memberOf语法结构</strong></p><p>Object(field memberOf value[Collection/Array])</p><p>Object(field not memberOf value[Collection/Array])</p></li><li><p><strong>matches | not matches语法结构</strong></p><p>Object(field matches “正则表达式”)</p><p>Object(field not matches “正则表达式”)</p></li></ul><h4 id="4-5-2-操作步骤"><a href="#4-5-2-操作步骤" class="headerlink" title="4.5.2 操作步骤"></a>4.5.2 操作步骤</h4><p>第一步：创建实体类，用于测试比较操作符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 实体类 * 用于测试比较操作符 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComparisonOperatorEntity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> names<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> names<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNames</span><span class="token punctuation">(</span><span class="token class-name">String</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>names <span class="token operator">=</span> names<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在/resources/rules下创建规则文件comparisonOperator.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">comparisonOperator</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">ComparisonOperatorEntity</span><span class="token comment">/* 当前规则文件用于测试Drools提供的比较操作符*/</span><span class="token comment">//测试比较操作符contains</span>rule <span class="token string">"rule_comparison_contains"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names contains <span class="token string">"张三"</span><span class="token punctuation">)</span>        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>list contains names<span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_contains触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//测试比较操作符not contains</span>rule <span class="token string">"rule_comparison_notContains"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names not contains <span class="token string">"张三"</span><span class="token punctuation">)</span>        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>list not contains names<span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_notContains触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//测试比较操作符memberOf</span>rule <span class="token string">"rule_comparison_memberOf"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names memberOf list<span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_memberOf触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//测试比较操作符not memberOf</span>rule <span class="token string">"rule_comparison_notMemberOf"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names not memberOf list<span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_notMemberOf触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//测试比较操作符matches</span>rule <span class="token string">"rule_comparison_matches"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names matches <span class="token string">"张.*"</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_matches触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//测试比较操作符not matches</span>rule <span class="token string">"rule_comparison_notMatches"</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names not matches <span class="token string">"张.*"</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_notMatches触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//测试比较操作符</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ComparisonOperatorEntity</span> comparisonOperatorEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    comparisonOperatorEntity<span class="token punctuation">.</span><span class="token function">setNames</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    comparisonOperatorEntity<span class="token punctuation">.</span><span class="token function">setList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配，如果规则匹配成功则执行规则</span>    kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>comparisonOperatorEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>    kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-6-执行指定规则"><a href="#4-6-执行指定规则" class="headerlink" title="4.6 执行指定规则"></a>4.6 执行指定规则</h3><p>通过前面的案例可以看到，我们在调用规则代码时，满足条件的规则都会被执行。那么如果我们只想执行其中的某个规则如何实现呢？</p><p>Drools给我们提供的方式是通过规则过滤器来实现执行指定规则。对于规则文件不用做任何修改，只需要修改Java代码即可，如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ComparisonOperatorEntity</span> comparisonOperatorEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comparisonOperatorEntity<span class="token punctuation">.</span><span class="token function">setNames</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comparisonOperatorEntity<span class="token punctuation">.</span><span class="token function">setList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>comparisonOperatorEntity<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过规则过滤器实现只执行指定规则</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuleNameEqualsAgendaFilter</span><span class="token punctuation">(</span><span class="token string">"rule_comparison_memberOf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-7-关键字"><a href="#4-7-关键字" class="headerlink" title="4.7 关键字"></a>4.7 关键字</h3><p>Drools的关键字分为：硬关键字(Hard keywords)和软关键字(Soft keywords)。</p><p>硬关键字是我们在规则文件中定义包名或者规则名时明确不能使用的，否则程序会报错。软关键字虽然可以使用，但是不建议使用。</p><p>硬关键字包括：true false null</p><p>软关键字包括：lock-on-active date-effective date-expires no-loop auto-focus activation-group agenda-group ruleflow-group entry-point duration package import dialect salience enabled attributes rule extend when then template query declare function global eval not in or and exists forall accumulate collect from action reverse result end over init</p><h3 id="4-8-Drools内置方法"><a href="#4-8-Drools内置方法" class="headerlink" title="4.8 Drools内置方法"></a>4.8 Drools内置方法</h3><p>规则文件的<code>RHS</code>部分的主要作用是通过插入，删除或修改工作内存中的Fact数据，来达到控制规则引擎执行的目的。Drools提供了一些方法可以用来操作工作内存中的数据，操作完成后规则引擎会重新进行相关规则的匹配，原来没有匹配成功的规则在我们修改数据完成后有可能就会匹配成功了。</p><p>创建如下实体类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 学生 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-8-1-update方法"><a href="#4-8-1-update方法" class="headerlink" title="4.8.1 update方法"></a>4.8.1 update方法</h4><p>update方法的作用是更新工作内存中的数据，并让相关的规则重新匹配。</p><p>第一步：编写规则文件/resources/rules/student.drl，文件内容如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">student</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/* 当前规则文件用于测试Drools提供的内置方法*/</span>rule <span class="token string">"rule_student_age小于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//更新数据，导致相关的规则会重新匹配</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age小于20岁同时大于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token generics"><span class="token punctuation">&lt;</span> 20 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> age <span class="token punctuation">&gt;</span></span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//更新数据，导致相关的规则会重新匹配</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于20岁同时大于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age大于20岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age大于20岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配，如果规则匹配成功则执行规则</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台的输出可以看到规则文件中定义的三个规则都触发了。</p><p>在更新数据时需要注意防止发生死循环。</p><h4 id="4-8-2-insert方法"><a href="#4-8-2-insert方法" class="headerlink" title="4.8.2 insert方法"></a>4.8.2 insert方法</h4><p>insert方法的作用是向工作内存中插入数据，并让相关的规则重新匹配。</p><p>第一步：修改student.drl文件内容如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">student</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/* 当前规则文件用于测试Drools提供的内置方法*/</span>rule <span class="token string">"rule_student_age等于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//插入数据，导致相关的规则会重新匹配</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age等于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age小于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age小于20岁同时大于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token generics"><span class="token punctuation">&lt;</span> 20 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> age <span class="token punctuation">&gt;</span></span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于20岁同时大于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age大于20岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age大于20岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配，如果规则匹配成功则执行规则</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台输出可以发现，四个规则都触发了，这是因为首先进行规则匹配时只有第一个规则可以匹配成功，但是在第一个规则中向工作内存中插入了一个数据导致重新进行规则匹配，此时第二个规则可以匹配成功。在第二个规则中进行了数据修改导致第三个规则也可以匹配成功，以此类推最终四个规则都匹配成功并执行了。</p><h4 id="4-8-3-retract方法"><a href="#4-8-3-retract方法" class="headerlink" title="4.8.3 retract方法"></a>4.8.3 retract方法</h4><p>retract方法的作用是删除工作内存中的数据，并让相关的规则重新匹配。</p><p>第一步：修改student.drl文件内容如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">student</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/* 当前规则文件用于测试Drools提供的内置方法*/</span>rule <span class="token string">"rule_student_age等于10岁时删除数据"</span>    <span class="token comment">/*    salience：设置当前规则的执行优先级，数值越大越优先执行，默认值为0.    因为当前规则的匹配条件和下面规则的匹配条件相同，为了保证先执行当前规则，需要设置优先级    */</span>    salience <span class="token number">100</span>     when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        <span class="token function">retract</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//retract方法的作用是删除工作内存中的数据，并让相关的规则重新匹配。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age等于10岁时删除数据触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age等于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age等于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age小于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age小于20岁同时大于10岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token generics"><span class="token punctuation">&lt;</span> 20 <span class="token operator">&amp;</span><span class="token operator">&amp;</span> age <span class="token punctuation">&gt;</span></span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age小于20岁同时大于10岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_student_age大于20岁"</span>    when        $s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_student_age大于20岁触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配，如果规则匹配成功则执行规则</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台输出可以发现，只有第一个规则触发了，因为在第一个规则中将工作内存中的数据删除了导致第二个规则并没有匹配成功。</p><h2 id="5-规则属性"><a href="#5-规则属性" class="headerlink" title="5. 规则属性"></a>5. 规则属性</h2><p>前面我们已经知道了规则体的构成如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">rule <span class="token string">"ruleName"</span>    attributes    when        LHS    then        RHSend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本章节就是针对规则体的<strong>attributes</strong>属性部分进行讲解。Drools中提供的属性如下表(部分属性)：</p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>salience</td><td>指定规则执行优先级</td></tr><tr><td>dialect</td><td>指定规则使用的语言类型，取值为java和mvel</td></tr><tr><td>enabled</td><td>指定规则是否启用</td></tr><tr><td>date-effective</td><td>指定规则生效时间</td></tr><tr><td>date-expires</td><td>指定规则失效时间</td></tr><tr><td>activation-group</td><td>激活分组，具有相同分组名称的规则只能有一个规则触发</td></tr><tr><td>agenda-group</td><td>议程分组，只有获取焦点的组中的规则才有可能触发</td></tr><tr><td>timer</td><td>定时器，指定规则触发的时间</td></tr><tr><td>auto-focus</td><td>自动获取焦点，一般结合agenda-group一起使用</td></tr><tr><td>no-loop</td><td>防止死循环</td></tr></tbody></table><h3 id="5-1-enabled属性"><a href="#5-1-enabled属性" class="headerlink" title="5.1 enabled属性"></a>5.1 enabled属性</h3><p>enabled属性对应的取值为true和false，默认值为true。</p><p>用于指定当前规则是否启用，如果设置的值为false则当前规则无论是否匹配成功都不会触发。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">rule <span class="token string">"rule_comparison_notMemberOf"</span>    <span class="token comment">//指定当前规则不可用，当前规则无论是否匹配成功都不会执行</span>    enabled <span class="token boolean">false</span>    when        <span class="token class-name">ComparisonOperatorEntity</span><span class="token punctuation">(</span>names not memberOf list<span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_comparison_notMemberOf触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-dialect属性"><a href="#5-2-dialect属性" class="headerlink" title="5.2 dialect属性"></a>5.2 dialect属性</h3><p>dialect属性用于指定当前规则使用的语言类型，取值为java和mvel，默认值为java。</p><p>注：mvel是一种基于java语法的表达式语言。</p><p>mvel像正则表达式一样，有直接支持集合、数组和字符串匹配的操作符。</p><p>mvel还提供了用来配置和构造字符串的模板语言。</p><p>mvel表达式内容包括属性表达式，布尔表达式，方法调用，变量赋值，函数定义等。</p><h3 id="5-3-salience属性"><a href="#5-3-salience属性" class="headerlink" title="5.3 salience属性"></a>5.3 salience属性</h3><p>salience属性用于指定规则的执行优先级，取值类型为Integer。数值越大越优先执行。每个规则都有一个默认的执行顺序，如果不设置salience属性，规则体的执行顺序为由上到下。</p><p>可以通过创建规则文件salience.drl来测试salience属性，内容如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">test<span class="token punctuation">.</span>salience</span>rule <span class="token string">"rule_1"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end    rule <span class="token string">"rule_2"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_3"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_3触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以看到，由于以上三个规则没有设置salience属性，所以执行的顺序是按照规则文件中规则的顺序由上到下执行的。接下来我们修改一下文件内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testsalience</span>rule <span class="token string">"rule_1"</span>    salience <span class="token number">9</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_2"</span>    salience <span class="token number">10</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_3"</span>    salience <span class="token number">8</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_3触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以看到，规则文件执行的顺序是按照我们设置的salience值由大到小顺序执行的。</p><p>建议在编写规则时使用salience属性明确指定执行优先级。</p><h3 id="5-4-no-loop属性"><a href="#5-4-no-loop属性" class="headerlink" title="5.4 no-loop属性"></a>5.4 no-loop属性</h3><p>no-loop属性用于防止死循环，当规则通过update之类的函数修改了Fact对象时，可能使当前规则再次被激活从而导致死循环。取值类型为Boolean，默认值为false。测试步骤如下：</p><p>第一步：编写规则文件/resource/rules/noloop.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testnoloop</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/*    此规则文件用于测试no-loop属性*/</span>rule <span class="token string">"rule_noloop"</span>    when    <span class="token comment">// no-loop true</span>        $student<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">==</span> <span class="token number">25</span><span class="token punctuation">)</span>    then        <span class="token function">update</span><span class="token punctuation">(</span>$student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注意此处执行update会导致当前规则重新被激活</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_noloop触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将数据提供给规则引擎，规则引擎会根据提供的数据进行规则匹配，如果规则匹配成功则执行规则</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以看到，由于我们没有设置no-loop属性的值，所以发生了死循环。接下来设置no-loop的值为true再次测试则不会发生死循环。</p><h3 id="5-5-activation-group属性"><a href="#5-5-activation-group属性" class="headerlink" title="5.5 activation-group属性"></a>5.5 activation-group属性</h3><p>activation-group属性是指激活分组，取值为String类型。具有相同分组名称的规则只能有一个规则被触发。</p><p>第一步：编写规则文件/resources/rules/activationgroup.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testactivationgroup</span><span class="token comment">/*    此规则文件用于测试activation-group属性*/</span>    rule <span class="token string">"rule_activationgroup_1"</span>    activation<span class="token operator">-</span>group <span class="token string">"mygroup"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_activationgroup_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_activationgroup_2"</span>    activation<span class="token operator">-</span>group <span class="token string">"mygroup"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_activationgroup_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以发现，上面的两个规则因为属于同一个分组，所以只有一个触发了。同一个分组中的多个规则如果都能够匹配成功，具体哪一个最终能够被触发可以通过salience属性确定。</p><h3 id="5-6-agenda-group属性"><a href="#5-6-agenda-group属性" class="headerlink" title="5.6 agenda-group属性"></a>5.6 agenda-group属性</h3><p>agenda-group属性为议程分组，属于另一种可控的规则执行方式。用户可以通过设置agenda-group来控制规则的执行，只有获取焦点的组中的规则才会被触发。</p><p>第一步：创建规则文件/resources/rules/agendagroup.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testagendagroup</span><span class="token comment">/*此规则文件用于测试agenda-group属性*/</span>rule <span class="token string">"rule_agendagroup_1"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_1"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_agendagroup_2"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_1"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//========================================================</span>rule <span class="token string">"rule_agendagroup_3"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_2"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_3触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_agendagroup_4"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_2"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_4触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置焦点，对应agenda-group分组中的规则才可能被触发</span>kieSession<span class="token punctuation">.</span><span class="token function">getAgenda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAgendaGroup</span><span class="token punctuation">(</span><span class="token string">"myagendagroup_1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以看到，只有获取焦点的分组中的规则才会触发。与activation-group不同的是，activation-group定义的分组中只能够有一个规则可以被触发，而agenda-group分组中的多个规则都可以被触发。</p><h3 id="5-7-auto-focus属性"><a href="#5-7-auto-focus属性" class="headerlink" title="5.7 auto-focus属性"></a>5.7 auto-focus属性</h3><p>auto-focus属性为自动获取焦点，取值类型为Boolean，默认值为false。一般结合agenda-group属性使用，当一个议程分组未获取焦点时，可以设置auto-focus属性来控制。</p><p>第一步：修改/resources/rules/agendagroup.drl文件内容如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testagendagroup</span>rule <span class="token string">"rule_agendagroup_1"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_1"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_agendagroup_2"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_1"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//========================================================</span>rule <span class="token string">"rule_agendagroup_3"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_2"</span>    auto<span class="token operator">-</span>focus <span class="token boolean">true</span> <span class="token comment">//自动获取焦点</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_3触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_agendagroup_4"</span>    agenda<span class="token operator">-</span>group <span class="token string">"myagendagroup_2"</span>    auto<span class="token operator">-</span>focus <span class="token boolean">true</span> <span class="token comment">//自动获取焦点</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_agendagroup_4触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过控制台可以看到，设置auto-focus属性为true的规则都触发了。</p><h3 id="5-8-timer属性"><a href="#5-8-timer属性" class="headerlink" title="5.8 timer属性"></a>5.8 timer属性</h3><p>timer属性可以通过定时器的方式指定规则执行的时间，使用方式有两种：</p><p><strong>方式一</strong>：timer (int: &lt;initial delay&gt; &lt;repeat interval&gt;?)</p><p>此种方式遵循java.util.Timer对象的使用方式，第一个参数表示几秒后执行，第二个参数表示每隔几秒执行一次，第二个参数为可选。</p><p><strong>方式二</strong>：timer(cron: &lt;cron expression&gt;)</p><p>此种方式使用标准的unix cron表达式的使用方式来定义规则执行的时间。</p><p>第一步：创建规则文件/resources/rules/timer.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testtimer</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token comment">/*    此规则文件用于测试timer属性*/</span>rule <span class="token string">"rule_timer_1"</span>    timer <span class="token punctuation">(</span><span class="token number">5</span>s <span class="token number">2</span>s<span class="token punctuation">)</span> <span class="token comment">//含义：5秒后触发，然后每隔2秒触发一次</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_timer_1触发，触发时间为："</span> <span class="token operator">+</span>                          <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_timer_2"</span>    timer <span class="token punctuation">(</span>cron<span class="token operator">:</span><span class="token number">0</span><span class="token operator">/</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">?</span><span class="token punctuation">)</span> <span class="token comment">//含义：每隔1秒触发一次</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_timer_2触发，触发时间为："</span> <span class="token operator">+</span>                          <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//启动规则引擎进行规则匹配，直到调用halt方法才结束规则引擎</span>        kieSession<span class="token punctuation">.</span><span class="token function">fireUntilHalt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结束规则引擎</span>kieSession<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：单元测试的代码和以前的有所不同，因为我们规则文件中使用到了timer进行定时执行，需要程序能够持续一段时间才能够看到定时器触发的效果。</p><h3 id="5-9-date-effective属性"><a href="#5-9-date-effective属性" class="headerlink" title="5.9 date-effective属性"></a>5.9 date-effective属性</h3><p>date-effective属性用于指定规则的生效时间，即只有当前系统时间大于等于设置的时间或者日期规则才有可能触发。默认日期格式为：dd-MMM-yyyy。用户也可以自定义日期格式。</p><p>第一步：编写规则文件/resources/rules/dateeffective.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testdateeffective</span><span class="token comment">/*    此规则文件用于测试date-effective属性*/</span>rule <span class="token string">"rule_dateeffective_1"</span>    date<span class="token operator">-</span>effective <span class="token string">"2020-10-01 10:00"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_dateeffective_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//设置日期格式</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"drools.dateformat"</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd HH:mm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：上面的代码需要设置日期格式，否则我们在规则文件中写的日期格式和默认的日期格式不匹配程序会报错。</p><h3 id="5-10-date-expires属性"><a href="#5-10-date-expires属性" class="headerlink" title="5.10 date-expires属性"></a>5.10 date-expires属性</h3><p>date-expires属性用于指定规则的失效时间，即只有当前系统时间小于设置的时间或者日期规则才有可能触发。默认日期格式为：dd-MMM-yyyy。用户也可以自定义日期格式。</p><p>第一步：编写规则文件/resource/rules/dateexpires.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testdateexpires</span><span class="token comment">/*    此规则文件用于测试date-expires属性*/</span>rule <span class="token string">"rule_dateexpires_1"</span>    date<span class="token operator">-</span>expires <span class="token string">"2019-10-01 10:00"</span>    when    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则rule_dateexpires_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//设置日期格式</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"drools.dateformat"</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd HH:mm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：上面的代码需要设置日期格式，否则我们在规则文件中写的日期格式和默认的日期格式不匹配程序会报错。</p><h2 id="6-Drools高级语法"><a href="#6-Drools高级语法" class="headerlink" title="6. Drools高级语法"></a>6. Drools高级语法</h2><p>前面章节我们已经知道了一套完整的规则文件内容构成如下：</p><table><thead><tr><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>package</td><td>包名，只限于逻辑上的管理，同一个包名下的查询或者函数可以直接调用</td></tr><tr><td>import</td><td>用于导入类或者静态方法</td></tr><tr><td>global</td><td>全局变量</td></tr><tr><td>function</td><td>自定义函数</td></tr><tr><td>query</td><td>查询</td></tr><tr><td>rule end</td><td>规则体</td></tr></tbody></table><p>本章节我们就来学习其中的几个关键字。</p><h3 id="6-1-global全局变量"><a href="#6-1-global全局变量" class="headerlink" title="6.1 global全局变量"></a>6.1 global全局变量</h3><p>global关键字用于在规则文件中定义全局变量，它可以让应用程序的对象在规则文件中能够被访问。可以用来为规则文件提供数据或服务。</p><p>语法结构为：<strong>global 对象类型 对象名称</strong></p><p>在使用global定义的全局变量时有两点需要注意：</p><p>1、如果对象类型为包装类型时，在一个规则中改变了global的值，那么只针对当前规则有效，对其他规则中的global不会有影响。可以理解为它是当前规则代码中的global副本，规则内部修改不会影响全局的使用。</p><p>2、如果对象类型为集合类型或JavaBean时，在一个规则中改变了global的值，对java代码和所有规则都有效。</p><p>下面我们通过代码进行验证：</p><p>第一步：创建UserService类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserService.save()..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写规则文件/resources/rules/global.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testglobal</span><span class="token comment">/*    此规则文件用于测试global全局变量*/</span>global <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Integer</span> count <span class="token comment">//定义一个包装类型的全局变量</span>global <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span>UserService</span> userService <span class="token comment">//定义一个JavaBean类型的全局变量</span>global <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span> gList <span class="token comment">//定义一个集合类型的全局变量</span>rule <span class="token string">"rule_global_1"</span>    when    then        count <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//全局变量计算，只对当前规则有效，其他规则不受影响</span>        userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用全局变量的方法</span>        gList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"itcast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//向集合类型的全局变量中添加元素，Java代码和所有规则都受影响</span>        gList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"itheima"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"count="</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"gList.size="</span> <span class="token operator">+</span> gList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_global_2"</span>    when    then        userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"count="</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"gList.size="</span> <span class="token operator">+</span> gList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置全局变量，名称和类型必须和规则文件中定义的全局变量名称对应</span>kieSession<span class="token punctuation">.</span><span class="token function">setGlobal</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">setGlobal</span><span class="token punctuation">(</span><span class="token string">"count"</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//size为0</span>kieSession<span class="token punctuation">.</span><span class="token function">setGlobal</span><span class="token punctuation">(</span><span class="token string">"gList"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//因为在规则中为全局变量添加了两个元素，所以现在的size为2</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-query查询"><a href="#6-2-query查询" class="headerlink" title="6.2 query查询"></a>6.2 query查询</h3><p>query查询提供了一种<strong>查询working memory中符合约束条件的Fact对象</strong>的简单方法。它仅包含规则文件中的LHS部分，不用指定“when”和“then”部分并且以end结束。具体语法结构如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">query 查询的名称<span class="token punctuation">(</span>可选参数<span class="token punctuation">)</span>LHSend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>具体操作步骤：</p><p>第一步：编写规则文件/resources/rules/query.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testquery</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/*    此规则文件用于测试query查询*/</span><span class="token comment">//不带参数的查询</span><span class="token comment">//当前query用于查询Working Memory中age&gt;10的Student对象</span>query <span class="token string">"query_1"</span>    $student<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span>end<span class="token comment">//带有参数的查询</span><span class="token comment">//当前query用于查询Working Memory中age&gt;10同时name需要和传递的参数name相同的Student对象</span>query <span class="token string">"query_2"</span><span class="token punctuation">(</span><span class="token class-name">String</span> sname<span class="token punctuation">)</span>    $student<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> name <span class="token operator">==</span> sname<span class="token punctuation">)</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student1<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student2<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student3<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将对象插入Working Memory中</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student1<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student2<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用规则文件中的查询</span><span class="token class-name">QueryResults</span> results1 <span class="token operator">=</span> kieSession<span class="token punctuation">.</span><span class="token function">getQueryResults</span><span class="token punctuation">(</span><span class="token string">"query_1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> size <span class="token operator">=</span> results1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"size="</span> <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">QueryResultsRow</span> row <span class="token operator">:</span> results1<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"$student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//调用规则文件中的查询</span><span class="token class-name">QueryResults</span> results2 <span class="token operator">=</span> kieSession<span class="token punctuation">.</span><span class="token function">getQueryResults</span><span class="token punctuation">(</span><span class="token string">"query_2"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>size <span class="token operator">=</span> results2<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"size="</span> <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">QueryResultsRow</span> row <span class="token operator">:</span> results2<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"$student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//kieSession.fireAllRules();</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-3-function函数"><a href="#6-3-function函数" class="headerlink" title="6.3 function函数"></a>6.3 function函数</h3><p>function关键字用于在规则文件中定义函数，就相当于java类中的方法一样。可以在规则体中调用定义的函数。使用函数的好处是可以将业务逻辑集中放置在一个地方，根据需要可以对函数进行修改。</p><p>函数定义的语法结构如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">function 返回值类型 函数名<span class="token punctuation">(</span>可选参数<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//逻辑代码</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>具体操作步骤：</p><p>第一步：编写规则文件/resources/rules/function.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testfunction</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token comment">/*    此规则文件用于测试function函数*/</span><span class="token comment">//定义一个函数</span>function <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"hello "</span> <span class="token operator">+</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span>rule <span class="token string">"rule_function_1"</span>    when        $student<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    then        <span class="token comment">//调用上面定义的函数</span>        <span class="token class-name">String</span> ret <span class="token operator">=</span> <span class="token function">sayHello</span><span class="token punctuation">(</span>$student<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieContainer</span> kieClasspathContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieClasspathContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-4-LHS加强"><a href="#6-4-LHS加强" class="headerlink" title="6.4 LHS加强"></a>6.4 LHS加强</h3><p>前面我们已经知道了在规则体中的LHS部分是介于when和then之间的部分，主要用于模式匹配，只有匹配结果为true时，才会触发RHS部分的执行。本章节我们会针对LHS部分学习几个新的用法。</p><h4 id="6-4-1-复合值限制in-not-in"><a href="#6-4-1-复合值限制in-not-in" class="headerlink" title="6.4.1 复合值限制in/not in"></a>6.4.1 复合值限制in/not in</h4><p>复合值限制是指超过一种匹配值的限制条件，类似于SQL语句中的in关键字。Drools规则体中的LHS部分可以使用in或者not in进行复合值的匹配。具体语法结构如下：</p><p><strong>Object(field in (比较值1,比较值2…))</strong></p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">$s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>name in <span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$s<span class="token operator">:</span><span class="token class-name">Student</span><span class="token punctuation">(</span>name not in <span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="6-4-2-条件元素eval"><a href="#6-4-2-条件元素eval" class="headerlink" title="6.4.2 条件元素eval"></a>6.4.2 条件元素eval</h4><p>eval用于规则体的LHS部分，并返回一个Boolean类型的值。语法结构如下：</p><p><strong>eval(表达式)</strong></p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="6-4-3-条件元素not"><a href="#6-4-3-条件元素not" class="headerlink" title="6.4.3 条件元素not"></a>6.4.3 条件元素not</h4><p>not用于判断Working Memory中是否存在某个Fact对象，如果不存在则返回true，如果存在则返回false。语法结构如下：</p><p><strong>not Object(可选属性约束)</strong></p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">not <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span>not <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="6-4-4-条件元素exists"><a href="#6-4-4-条件元素exists" class="headerlink" title="6.4.4 条件元素exists"></a>6.4.4 条件元素exists</h4><p>exists的作用与not相反，用于判断Working Memory中是否存在某个Fact对象，如果存在则返回true，不存在则返回false。语法结构如下：</p><p><strong>exists Object(可选属性约束)</strong></p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">exists <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span>exists <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> name <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可能有人会有疑问，我们前面在LHS部分进行条件编写时并没有使用exists也可以达到判断Working Memory中是否存在某个符合条件的Fact元素的目的，那么我们使用exists还有什么意义？</p><p>两者的区别：当向Working Memory中加入多个满足条件的Fact对象时，使用了exists的规则执行一次，不使用exists的规则会执行多次。</p><p>例如：</p><p>规则文件(只有规则体)：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">rule <span class="token string">"使用exists的规则"</span>    when    exists <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：使用exists的规则触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"没有使用exists的规则"</span>    when    <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：没有使用exists的规则触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面第一个规则只会执行一次，因为Working Memory中存在两个满足条件的Fact对象，第二个规则会执行两次。</p><h4 id="6-4-5-规则继承"><a href="#6-4-5-规则继承" class="headerlink" title="6.4.5 规则继承"></a>6.4.5 规则继承</h4><p>规则之间可以使用extends关键字进行规则条件部分的继承，类似于java类之间的继承。</p><p>例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">rule <span class="token string">"rule_1"</span>    when    <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span>    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"rule_2"</span> <span class="token keyword">extends</span> <span class="token string">"rule_1"</span> <span class="token comment">//继承上面的规则</span>    when    <span class="token comment">/*    此处的条件虽然只写了一个，但是从上面的规则继承了一个条件，    所以当前规则存在两个条件，即Student(age &lt; 20)和Student(age &gt; 10)    */</span>    <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>     then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-5-RHS加强"><a href="#6-5-RHS加强" class="headerlink" title="6.5 RHS加强"></a>6.5 RHS加强</h3><p>RHS部分是规则体的重要组成部分，当LHS部分的条件匹配成功后，对应的RHS部分就会触发执行。一般在RHS部分中需要进行业务处理。</p><p>在RHS部分Drools为我们提供了一个内置对象，名称就是drools。本小节我们来介绍几个drools对象提供的方法。</p><h4 id="6-5-1-halt"><a href="#6-5-1-halt" class="headerlink" title="6.5.1 halt"></a>6.5.1 halt</h4><p>halt方法的作用是立即终止后面所有规则的执行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testhalt</span>rule <span class="token string">"rule_halt_1"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_halt_1触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>drools<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//立即终止后面所有规则执行</span>end<span class="token comment">//当前规则并不会触发，因为上面的规则调用了halt方法导致后面所有规则都不会执行</span>rule <span class="token string">"rule_halt_2"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_halt_2触发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-5-2-getWorkingMemory"><a href="#6-5-2-getWorkingMemory" class="headerlink" title="6.5.2 getWorkingMemory"></a>6.5.2 getWorkingMemory</h4><p>getWorkingMemory方法的作用是返回工作内存对象。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testgetWorkingMemory</span>rule <span class="token string">"rule_getWorkingMemory"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>drools<span class="token punctuation">.</span><span class="token function">getWorkingMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-5-3-getRule"><a href="#6-5-3-getRule" class="headerlink" title="6.5.3 getRule"></a>6.5.3 getRule</h4><p>getRule方法的作用是返回规则对象。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">testgetRule</span>rule <span class="token string">"rule_getRule"</span>    when    then    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>drools<span class="token punctuation">.</span><span class="token function">getRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-6-规则文件编码规范"><a href="#6-6-规则文件编码规范" class="headerlink" title="6.6 规则文件编码规范"></a>6.6 规则文件编码规范</h3><p>我们在进行drl类型的规则文件编写时尽量遵循如下规范：</p><ul><li>所有的规则文件(.drl)应统一放在一个规定的文件夹中，如：/rules文件夹</li><li>书写的每个规则应尽量加上注释。注释要清晰明了，言简意赅</li><li>同一类型的对象尽量放在一个规则文件中，如所有Student类型的对象尽量放在一个规则文件中</li><li>规则结果部分(RHS)尽量不要有条件语句，如if(…)，尽量不要有复杂的逻辑和深层次的嵌套语句</li><li>每个规则最好都加上salience属性，明确执行顺序</li><li>Drools默认dialect为”Java”，尽量避免使用dialect “mvel”</li></ul><h2 id="7-Spring整合Drools"><a href="#7-Spring整合Drools" class="headerlink" title="7. Spring整合Drools"></a>7. Spring整合Drools</h2><h3 id="7-1-Spring简单整合Drools"><a href="#7-1-Spring简单整合Drools" class="headerlink" title="7.1 Spring简单整合Drools"></a>7.1 Spring简单整合Drools</h3><p>在项目中使用Drools时往往会跟Spring整合来使用。具体整合步骤如下：</p><p>第一步：创建maven工程drools_spring并配置pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools_spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>drools.version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>drools.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">&gt;</span></span>5.0.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${drools.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${drools.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--注意：此处必须排除传递过来的依赖，否则会跟我们自己导入的Spring jar包产生冲突--&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建规则目录/resources/rules，中rules目录中创建规则文件helloworld.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">helloworld</span>rule <span class="token string">"rule_helloworld"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_helloworld触发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建Spring配置文件/resources/spring.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>kie</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://drools.org/schema/kie-spring<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                            http://www.springframework.org/schema/beans/spring-beans.xsd                            http://drools.org/schema/kie-spring                            http://drools.org/schema/kie-spring.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>kmodule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kmodule<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>kbase</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kbase<span class="token punctuation">"</span></span> <span class="token attr-name">packages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>ksession</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ksession<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>ksession</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>kbase</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>kmodule</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.kie.spring.annotations.KModuleAnnotationPostProcessor<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编写单元测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>cdi<span class="token punctuation">.</span></span><span class="token class-name">KBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ContextConfiguration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringJUnit4ClassRunner</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringJUnit4ClassRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>locations <span class="token operator">=</span> <span class="token string">"classpath:spring.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsSpringTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@KBase</span><span class="token punctuation">(</span><span class="token string">"kbase"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">KieBase</span> kieBase<span class="token punctuation">;</span><span class="token comment">//注入KieBase对象</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieBase<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2-Spring整合Drools-web"><a href="#7-2-Spring整合Drools-web" class="headerlink" title="7.2 Spring整合Drools+web"></a>7.2 Spring整合Drools+web</h3><p>本小节我们来进行Drools和Spring Web的整合。具体操作步骤如下：</p><p>第一步：创建maven的war工程drools_springweb并在pom.xml文件中导入相关maven坐标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools_springweb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>drools.version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>drools.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">&gt;</span></span>5.0.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${drools.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${drools.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>      <span class="token comment">&lt;!--注意：此处必须排除传递过来的依赖，否则会跟我们自己导入的Spring jar包产生冲突--&gt;</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat7-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>          <span class="token comment">&lt;!-- 指定端口 --&gt;</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>          <span class="token comment">&lt;!-- 请求路径 --&gt;</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：配置web.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">web-app</span> <span class="token name">PUBLIC</span> <span class="token string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span> <span class="token string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>Archetype Created Web Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定加载的配置文件 ，通过参数contextConfigLocation加载 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建/resources/springmvc.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>kie</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://drools.org/schema/kie-spring<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://drools.org/schema/kie-spring       http://drools.org/schema/kie-spring.xsd       http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd   http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>kmodule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kmodule<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>kbase</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kbase<span class="token punctuation">"</span></span> <span class="token attr-name">packages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">kie:</span>ksession</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ksession<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>ksession</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>kbase</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">kie:</span>kmodule</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.kie.spring.annotations.KModuleAnnotationPostProcessor<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--spring批量扫描--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.itheima<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>annotation-config</span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--springMVC注解驱动--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：创建规则文件/resources/rules/helloworld.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">helloworld</span>rule <span class="token string">"rule_helloworld"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_helloworld触发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：创建RuleService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>cdi<span class="token punctuation">.</span></span><span class="token class-name">KBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@KBase</span><span class="token punctuation">(</span><span class="token string">"kbase"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">KieBase</span> kieBase<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieBase<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建HelloController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RuleService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RuleService</span> ruleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/rule"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ruleService<span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"OK"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-3-Spring-Boot整合Drools"><a href="#7-3-Spring-Boot整合Drools" class="headerlink" title="7.3 Spring Boot整合Drools"></a>7.3 Spring Boot整合Drools</h3><p>目前在企业开发中Spring Boot已经成为主流，本小节我们来进行Spring Boot整合Drools。具体操作步骤：</p><p>第一步：创建maven工程drools_springboot并配置pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools_springboot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--drools规则引擎--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-templates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建/resources/application.yml文件</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">server</span><span class="token punctuation">:</span><span class="token attr-name">  port</span><span class="token punctuation">:</span> <span class="token attr-value">8080</span><span class="token attr-name">spring</span><span class="token punctuation">:</span><span class="token attr-name">  application</span><span class="token punctuation">:</span><span class="token attr-name">    name</span><span class="token punctuation">:</span> <span class="token attr-value">drools_springboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建规则文件/resources/rules/helloworld.drl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">helloworld</span>rule <span class="token string">"rule_helloworld"</span>    when        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    then        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"规则：rule_helloworld触发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编写配置类DroolsConfig</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieServices</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieFileSystem</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieContainer</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ResourceFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span><span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnMissingBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token comment">/** * 规则引擎配置类 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsConfig</span> <span class="token punctuation">{</span>    <span class="token comment">//指定规则文件存放的目录</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> RULES_PATH <span class="token operator">=</span> <span class="token string">"rules/"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieFileSystem</span> <span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">KieFileSystem</span> kieFileSystem <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResourcePatternResolver</span> resourcePatternResolver <span class="token operator">=</span>             <span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span>             resourcePatternResolver<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath*:"</span> <span class="token operator">+</span> RULES_PATH <span class="token operator">+</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>            path <span class="token operator">=</span> RULES_PATH <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            kieFileSystem<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ResourceFactory</span><span class="token punctuation">.</span><span class="token function">newClassPathResource</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> kieFileSystem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieContainer</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">KieRepository</span> kieRepository <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieRepository<span class="token punctuation">.</span><span class="token function">addKieModule</span><span class="token punctuation">(</span>kieRepository<span class="token operator">::</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KieBuilder</span> kieBuilder <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieBuilder</span><span class="token punctuation">(</span><span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieBuilder<span class="token punctuation">.</span><span class="token function">buildAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieContainer</span><span class="token punctuation">(</span>kieRepository<span class="token punctuation">.</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieBase</span> <span class="token function">kieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span> <span class="token function">kiePostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：创建RuleService类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">KieBase</span> kieBase<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieBase<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建HelloController类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RuleService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RuleService</span> ruleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/rule"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ruleService<span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"OK"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：创建启动类DroolsApplication</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DroolsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：启动服务，访问<a href="http://localhost:8080/hello/rule">http://localhost:8080/hello/rule</a></p><h2 id="8-WorkBench"><a href="#8-WorkBench" class="headerlink" title="8. WorkBench"></a>8. WorkBench</h2><h3 id="8-1-WorkBench简介"><a href="#8-1-WorkBench简介" class="headerlink" title="8.1 WorkBench简介"></a>8.1 WorkBench简介</h3><p>WorkBench是KIE组件中的元素，也称为KIE-WB，是Drools-WB与JBPM-WB的结合体。它是一个可视化的规则编辑器。WorkBench其实就是一个war包，安装到tomcat中就可以运行。使用WorkBench可以在浏览器中创建数据对象、创建规则文件、创建测试场景并将规则部署到maven仓库供其他应用使用。</p><p>下载地址：<a href="https://download.jboss.org/drools/release/7.6.0.Final/kie-drools-wb-7.6.0.Final-tomcat8.war">https://download.jboss.org/drools/release/7.6.0.Final/kie-drools-wb-7.6.0.Final-tomcat8.war</a></p><p>注意：下载的war包需要安装到tomcat8中。</p><h3 id="8-2-安装方式"><a href="#8-2-安装方式" class="headerlink" title="8.2 安装方式"></a>8.2 安装方式</h3><p>软件安装时经常会涉及到软件版本兼容性的问题，所以需要明确各个软件的使用版本。</p><p>本课程使用的软件环境如下：</p><ul><li>操作系统：Windows 10 64位</li><li>JDK版本：1.8</li><li>maven版本：3.5.4</li><li>Tomcat版本：8.5</li></ul><p>具体安装步骤：</p><p>第一步：配置Tomcat的环境变量CATALINA_HOME，对应的值为Tomcat安装目录</p><p>第二步：在Tomcat的bin目录下创建setenv.bat文件，内容如下：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">CATALINA_OPTS</span><span class="token punctuation">=</span><span class="token attr-value">"-Xmx512M \    -Djava.security.auth.login.config=$CATALINA_HOME/webapps/kie-drools-wb/WEB-INF/classes/login.config \    -Dorg.jboss.logging.provider=jdk"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第三步：将下载的WorkBench的war包改名为kie-drools-wb.war并复制到Tomcat的webapps目录下</p><p>第四步：修改Tomcat下conf/tomcat-users.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tomcat-users</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tomcat.apache.org/xml<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>              <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tomcat.apache.org/xml tomcat-users.xsd<span class="token punctuation">"</span></span>              <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--定义admin角色--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--定义一个用户，用户名为kie，密码为kie，对应的角色为admin角色--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kie<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kie<span class="token punctuation">"</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tomcat-users</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：下载以下三个jar包并复制到Tomcat的lib目录下</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties">kie-tomcat-integration-7.10.0.Final.jarjavax.security.jacc-api-1.5.jarslf4j-api-1.7.25.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第六步：修改Tomcat的conf/server.xml文件，添加Valve标签，内容为：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Valve</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.kie.integration.tomcat.JACCValve<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第七步：启动Tomcat并访问<a href="http://localhost:8080/kie-drools-wb%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0WorkBench%E7%9A%84%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E3%80%82%E4%BD%BF%E7%94%A8%E5%89%8D%E9%9D%A2%E5%9C%A8tomcat-users.xml%E6%96%87%E4%BB%B6%E4%B8%AD%E5%AE%9A%E4%B9%89%E7%9A%84%E7%94%A8%E6%88%B7%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95%E5%8D%B3%E5%8F%AF">http://localhost:8080/kie-drools-wb，可以看到WorkBench的登录页面。使用前面在tomcat-users.xml文件中定义的用户进行登录即可</a></p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/12.png" alt="12"></p><p>登录成功后进入系统首页：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/13.png" alt="13"></p><h3 id="8-3-使用方式"><a href="#8-3-使用方式" class="headerlink" title="8.3 使用方式"></a>8.3 使用方式</h3><h4 id="8-3-1-创建空间、项目"><a href="#8-3-1-创建空间、项目" class="headerlink" title="8.3.1 创建空间、项目"></a>8.3.1 创建空间、项目</h4><p>WorkBench中存在空间和项目的概念。我们在使用WorkBench时首先需要创建空间（Space），在空间中创建项目，在项目中创建数据对象、规则文件等。</p><ul><li><p>创建空间</p><p>第一步：登录WorkBench后进行系统首页，点击首页中的Design区域进入项目列表页面：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/14.png" alt="14"></p><p>如果是第一次登录还没有创建项目则无法看到项目</p><p>第二步：点击左上角Spaces导航链接进入空间列表页面</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/15.png" alt="15"></p><p>第三步：点击右上角Add Space按钮弹出创建添加空间窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/16.png" alt="16"></p><p>录入空间名称，点击Save按钮则完成空间的创建，如下图：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/17.png" alt="17"></p></li><li><p>创建项目</p><p>前面已经提到，我们在WorkBench中需要先创建空间，在空间中才能创建项目。上面我们已经创建了一个空间itheima，现在需要住此空间中创建项目。</p><p>第一步：点击itheima空间，进入此空间</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/18.png" alt="18"></p><p>可以看到当前空间中还没有项目</p><p>第二步：点击Add Project按钮弹出添加项目窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/19.png" alt="19"></p><p>第三步：在添加项目窗口中录入项目名称（例如项目名称为pro1），点击Add按钮完成操作</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/20.png" alt="20"></p><p>可以看到在完成项目创建后，系统直接跳转到了项目页面。要查看当前itheima空间中的所有项目，可以点击左上角itheima链接：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/21.png" alt="21"></p></li></ul><h4 id="8-3-2-创建数据对象"><a href="#8-3-2-创建数据对象" class="headerlink" title="8.3.2 创建数据对象"></a>8.3.2 创建数据对象</h4><p>数据对象其实就是JavaBean，一般都是在drl规则文件中使用进行规则匹配。</p><p>第一步：在itheima空间中点击pro1项目，进入此项目页面</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/22.png" alt="22"></p><p>第二步：点击Create New Asset按钮选择“数据对象”</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/23.png" alt="23"></p><p>第三步：在弹出的创建数据对象窗口中输入数据对象的名称，点击确定按钮完成操作</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/24.png" alt="24"></p><p>操作完成后可以看到如下：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/25.png" alt="25"></p><p>第四步：点击“添加字段”按钮弹出新建字段窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/26.png" alt="26"></p><p>第五步：在新建字段窗口中录入字段Id（其实就是属性名），选择类型，点击创建按钮完成操作</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/27.png" alt="27"></p><p>完成操作后可以看到刚才创建的字段：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/28.png" alt="28"></p><p>可以点击添加字段按钮继续创建其他字段：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/29.png" alt="29"></p><p>注意添加完字段后需要点击右上角保存按钮完成保存操作：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/32.png" alt="32"></p><p>点击源代码按钮可以查看刚才创建的Person对象源码：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/30.png" alt="30"></p><p>点击左上角pro1项目链接，可以看到当前pro1项目中已经创建的各种类型的对象：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/31.png" alt="31"></p><h4 id="8-3-3-创建DRL规则文件"><a href="#8-3-3-创建DRL规则文件" class="headerlink" title="8.3.3 创建DRL规则文件"></a>8.3.3 创建DRL规则文件</h4><p>第一步：在pro1项目页面点击右上角Create New Asset按钮，选择“DRL文件”，弹出创建DRL文件窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/33.png" alt="33"></p><p>第二步：在添加DRL文件窗口录入DRL文件名称，点击确定按钮完成操作</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/34.png" alt="34"></p><p>第三步：上面点击确定按钮完成创建DRL文件后，页面会跳转到编辑DRL文件页面</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/35.png" alt="35"></p><p>可以看到DRL规则文件页面分为两个部分：左侧为项目浏览视图、右侧为编辑区域，需要注意的是左侧默认展示的不是项目浏览视图，需要点击上面设置按钮，选择“资料库视图”和“显示为文件夹”，如下图所示：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/36.png" alt="36"></p><p>第四步：在编辑DRL文件页面右侧区域进行DRL文件的编写，点击右上角保存按钮完成保存操作，点击检验按钮进行规则文件语法检查</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/37.png" alt="37"></p><p>点击左上角pro1项目回到项目页面，可以看到此项目下已经存在两个对象，即person.drl规则文件和Person类：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/38.png" alt="38"></p><h4 id="8-3-4-创建测试场景"><a href="#8-3-4-创建测试场景" class="headerlink" title="8.3.4 创建测试场景"></a>8.3.4 创建测试场景</h4><p>前面我们已经创建了Person数据对象和person规则文件，现在我们需要测试一下规则文件中的规则，可以通过创建测试场景来进行测试。</p><p>第一步：在项目页面点击Create New Asset按钮选择“测试场景”，弹出创建测试场景窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/39.png" alt="39"></p><p>第二步：在弹出的创建测试场景窗口中录入测试场景的名称，点击确定完成操作</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/40.png" alt="40"></p><p>完成测试场景的创建后，页面会跳转到测试场景编辑页面，如下图：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/41.png" alt="41"></p><p>第三步：因为我们编写的规则文件中需要从工作内存中获取Person对象进行规则匹配，所以在测试场景中需要准备Person对象给工作内存，点击“GIVEN”按钮弹出新建数据录入窗口，选择Person类，输入框中输入事实名称（名称任意），如下图</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/42.png" alt="42"></p><p>第四步：录入事实名称后点击后面的添加按钮，可以看到Person对象已经添加成功</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/43.png" alt="43"></p><p>第五步：我们给工作内存提供的Person对象还需要设置age属性的值，点击“添加字段”按钮弹出窗口，选择age属性</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/44.png" alt="44"></p><p>点击确定按钮后可以看到字段已经添加成功：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/45.png" alt="45"></p><p>第六步：点击age属性后面的编辑按钮，弹出字段值窗口</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113154817582.png" alt="image-20200113154817582"></p><p>第七步：在弹出的窗口中点击字面值按钮，重新回到测试场景页面，可以看到age后面出现输入框，可以为age属性设置值</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113155136957.png" alt="image-20200113155136957"></p><p>设置好age属性的值后点击保存按钮保存测试场景</p><p>第八步：点击右上角“运行测试场景”按钮进行测试</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113155332666.png" alt="image-20200113155332666"></p><p>测试成功后可以查看WorkBench部署的Tomcat控制台：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113155819517.png" alt="image-20200113155819517"></p><h4 id="8-3-5-设置KieBase和KieSession"><a href="#8-3-5-设置KieBase和KieSession" class="headerlink" title="8.3.5 设置KieBase和KieSession"></a>8.3.5 设置KieBase和KieSession</h4><p>第一步：在pro1项目页面点击右上角Settings按钮进入设置页面</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113162923877.png" alt="image-20200113162923877"></p><p>第二步：在设置页面选择“知识库和会话”选项</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113163005061.png" alt="image-20200113163005061"></p><p>第三步：在弹出的知识库和会话页面点击“添加”按钮进行设置</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113163313305.png" alt="image-20200113163313305"></p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113163344174.png" alt="image-20200113163344174"></p><p>第四步：设置完成后点击右上角保存按钮完成设置操作，可以通过左侧浏览视图点击kmodule.xml，查看文件内容</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113163539676.png" alt="image-20200113163539676"></p><h4 id="8-3-6-编译、构建、部署"><a href="#8-3-6-编译、构建、部署" class="headerlink" title="8.3.6 编译、构建、部署"></a>8.3.6 编译、构建、部署</h4><p>前面我们已经在WorkBench中创建了一个空间itheima，并且在此空间中创建了一个项目pro1，在此项目中创建了数据文件、规则文件和测试场景，如下图：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200113160102668.png" alt="image-20200113160102668"></p><p>点击右上角“Compile”按钮可以对项目进行编译，点击“Bulid&amp;Deploy”按钮进行构建和部署。</p><p>部署成功后可以在本地maven仓库中看到当前项目已经被打成jar包：</p><img src="Java高手班-阶段一-规则引擎Drools.assets/image-20200113160728259.png" alt="image-20200113160728259" style="float: left;"><p>将上面的jar包进行解压，可以看到我们创建的数据对象Person和规则文件person以及kmodule.xml都已经打到jar包中了。</p><h4 id="8-3-7-在项目中使用部署的规则"><a href="#8-3-7-在项目中使用部署的规则" class="headerlink" title="8.3.7 在项目中使用部署的规则"></a>8.3.7 在项目中使用部署的规则</h4><p>前面我们已经在WorkBench中创建了pro1项目，并且在pro1项目中创建了数据文件、规则文件等。最后我们将此项目打成jar包部署到了maven仓库中。本小节就需要在外部项目中使用我们定义的规则。</p><p>第一步：在IDEA中创建一个maven项目并在pom.xml文件中导入相关坐标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在项目中创建一个数据对象Person，需要和WorkBench中创建的Person包名、类名完全相同，属性也需要对应</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pro1</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> id<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：编写单元测试，远程加载maven仓库中的jar包最终完成规则调用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>    <span class="token comment">//通过此URL可以访问到maven仓库中的jar包</span>    <span class="token comment">//URL地址构成：http://ip地址:Tomcat端口号/WorkBench工程名/maven2/坐标/版本号/xxx.jar</span>    <span class="token class-name">String</span> url <span class="token operator">=</span>     <span class="token string">"http://localhost:8080/kie-drools-wb/maven2/com/itheima/pro1/1.0.0/pro1-1.0.0.jar"</span><span class="token punctuation">;</span>        <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过Resource资源对象加载jar包</span>    <span class="token class-name">UrlResource</span> resource <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UrlResource</span><span class="token punctuation">)</span> kieServices<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newUrlResource</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//通过Workbench提供的服务来访问maven仓库中的jar包资源，需要先进行Workbench的认证</span>    resource<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"kie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    resource<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"kie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    resource<span class="token punctuation">.</span><span class="token function">setBasicAuthentication</span><span class="token punctuation">(</span><span class="token string">"enabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将资源转换为输入流，通过此输入流可以读取jar包数据</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//创建仓库对象，仓库对象中保存Drools的规则信息</span>    <span class="token class-name">KieRepository</span> repository <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过输入流读取maven仓库中的jar包数据，包装成KieModule模块添加到仓库中</span>    <span class="token class-name">KieModule</span> kieModule <span class="token operator">=</span>   repository<span class="token punctuation">.</span>        <span class="token function">addKieModule</span><span class="token punctuation">(</span>kieServices<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInputStreamResource</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//基于KieModule模块创建容器对象，从容器中可以获取session会话</span>    <span class="token class-name">KieContainer</span> kieContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieContainer</span><span class="token punctuation">(</span>kieModule<span class="token punctuation">.</span><span class="token function">getReleaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieSession</span> session <span class="token operator">=</span> kieContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    person<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行单元测试可以发现控制台已经输出了相关内容。通过WorkBench修改规则输出内容并发布，再次执行单元测试可以发现控制台输出的内容也发生了变化。</p><p><strong>通过上面的案例可以发现，我们在IEDA中开发的项目中并没有编写规则文件，规则文件是我们通过WorkBench开发并安装部署到maven仓库中，我们自己开发的项目只需要远程加载maven仓库中的jar包就可以完成规则的调用。这种开发方式的好处是我们的应用可以和业务规则完全分离，同时通过WorkBench修改规则后我们的应用不需要任何修改就可以加载到最新的规则从而实现规则的动态变更。</strong></p><h2 id="9-Drools实战"><a href="#9-Drools实战" class="headerlink" title="9. Drools实战"></a>9. Drools实战</h2><h3 id="9-1-个人所得税计算器"><a href="#9-1-个人所得税计算器" class="headerlink" title="9.1 个人所得税计算器"></a>9.1 个人所得税计算器</h3><p>本小节我们需要通过Drools规则引擎来根据规则计算个人所得税，最终页面效果如下：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200214132448956.png" alt="image-20200214132448956"></p><h4 id="9-1-1-名词解释"><a href="#9-1-1-名词解释" class="headerlink" title="9.1.1 名词解释"></a>9.1.1 名词解释</h4><p>税前月收入：即税前工资，指交纳个人所得税之前的总工资</p><p>应纳税所得额：指按照税法规定确定纳税人在一定期间所获得的所有应税收入减除在该纳税期间依法允许减除的各种支出后的余额</p><p>税率：是对征税对象的征收比例或征收额度</p><p>速算扣除数：指为解决超额累进税率分级计算税额的复杂技术问题，而预先计算出的一个数据，可以简化计算过程</p><p>扣税额：是指实际缴纳的税额</p><p>税后工资：是指扣完税后实际到手的工资收入</p><h4 id="9-1-2-计算规则"><a href="#9-1-2-计算规则" class="headerlink" title="9.1.2 计算规则"></a>9.1.2 计算规则</h4><p>要实现个人所得税计算器，需要了解如下计算规则：</p><table><thead><tr><th>规则编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>计算应纳税所得额</td><td>应纳税所得额为税前工资减去3500</td></tr><tr><td>2</td><td>设置税率，应纳税所得额&lt;=1500</td><td>税率为0.03，速算扣除数为0</td></tr><tr><td>3</td><td>设置税率，应纳税所得额在1500至4500之间</td><td>税率为0.1，速算扣除数为105</td></tr><tr><td>4</td><td>设置税率，应纳税所得额在4500志9000之间</td><td>税率为0.2，速算扣除数为555</td></tr><tr><td>5</td><td>设置税率，应纳税所得额在9000志35000之间</td><td>税率为0.25，速算扣除数为1005</td></tr><tr><td>6</td><td>设置税率，应纳税所得额在35000至55000之间</td><td>税率为0.3，速算扣除数为2755</td></tr><tr><td>7</td><td>设置税率，应纳税所得额在55000至80000之间</td><td>税率为0.35，速算扣除数为5505</td></tr><tr><td>8</td><td>设置税率，应纳税所得额在80000以上</td><td>税率为0.45，速算扣除数为13505</td></tr><tr><td>9</td><td>计算税后工资</td><td>扣税额=应纳税所得额*税率-速算扣除数                                        税后工资=税前工资-扣税额</td></tr></tbody></table><h4 id="9-1-3-实现步骤"><a href="#9-1-3-实现步骤" class="headerlink" title="9.1.3 实现步骤"></a>9.1.3 实现步骤</h4><p>本实战案例我们基于Spring Boot整合Drools的方式来实现。</p><p>第一步：创建maven工程calculation并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.itcast<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>calculation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--drools规则引擎--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-templates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建/resources/application.yml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">server:  port: 8080spring:  application:    name: calculation<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：编写配置类DroolsConfig</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieServices</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieFileSystem</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieContainer</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ResourceFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span><span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnMissingBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token comment">/** * 规则引擎配置类 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsConfig</span> <span class="token punctuation">{</span>    <span class="token comment">//指定规则文件存放的目录</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> RULES_PATH <span class="token operator">=</span> <span class="token string">"rules/"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieFileSystem</span> <span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"drools.dateformat"</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KieFileSystem</span> kieFileSystem <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResourcePatternResolver</span> resourcePatternResolver <span class="token operator">=</span>             <span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span>             resourcePatternResolver<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath*:"</span> <span class="token operator">+</span> RULES_PATH <span class="token operator">+</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>            path <span class="token operator">=</span> RULES_PATH <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            kieFileSystem<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ResourceFactory</span><span class="token punctuation">.</span><span class="token function">newClassPathResource</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> kieFileSystem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieContainer</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">KieRepository</span> kieRepository <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieRepository<span class="token punctuation">.</span><span class="token function">addKieModule</span><span class="token punctuation">(</span>kieRepository<span class="token operator">::</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KieBuilder</span> kieBuilder <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieBuilder</span><span class="token punctuation">(</span><span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieBuilder<span class="token punctuation">.</span><span class="token function">buildAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieContainer</span><span class="token punctuation">(</span>kieRepository<span class="token punctuation">.</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieBase</span> <span class="token function">kieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span> <span class="token function">kiePostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编写实体类Calculation</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Calculation</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> wage<span class="token punctuation">;</span><span class="token comment">//税前工资</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> wagemore<span class="token punctuation">;</span><span class="token comment">//应纳税所得额</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> cess<span class="token punctuation">;</span><span class="token comment">//税率</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> preminus<span class="token punctuation">;</span><span class="token comment">//速算扣除数</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> wageminus<span class="token punctuation">;</span><span class="token comment">//扣税额</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> actualwage<span class="token punctuation">;</span><span class="token comment">//税后工资</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getWage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> wage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWage</span><span class="token punctuation">(</span><span class="token keyword">double</span> wage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>wage <span class="token operator">=</span> wage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getActualwage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> actualwage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActualwage</span><span class="token punctuation">(</span><span class="token keyword">double</span> actualwage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actualwage <span class="token operator">=</span> actualwage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getWagemore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> wagemore<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWagemore</span><span class="token punctuation">(</span><span class="token keyword">double</span> wagemore<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>wagemore <span class="token operator">=</span> wagemore<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getCess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cess<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCess</span><span class="token punctuation">(</span><span class="token keyword">double</span> cess<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cess <span class="token operator">=</span> cess<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPreminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> preminus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token keyword">double</span> preminus<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>preminus <span class="token operator">=</span> preminus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getWageminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> wageminus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWageminus</span><span class="token punctuation">(</span><span class="token keyword">double</span> wageminus<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>wageminus <span class="token operator">=</span> wageminus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Calculation{"</span> <span class="token operator">+</span>                <span class="token string">"wage="</span> <span class="token operator">+</span> wage <span class="token operator">+</span>                <span class="token string">", actualwage="</span> <span class="token operator">+</span> actualwage <span class="token operator">+</span>                <span class="token string">", wagemore="</span> <span class="token operator">+</span> wagemore <span class="token operator">+</span>                <span class="token string">", cess="</span> <span class="token operator">+</span> cess <span class="token operator">+</span>                <span class="token string">", preminus="</span> <span class="token operator">+</span> preminus <span class="token operator">+</span>                <span class="token string">", wageminus="</span> <span class="token operator">+</span> wageminus <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：在resources/rules下创建规则文件calculation.drl文件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">calculation</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Calculation</span>rule <span class="token string">"个人所得税：计算应纳税所得额"</span>    enabled <span class="token boolean">true</span>    salience <span class="token number">3</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    date<span class="token operator">-</span>effective <span class="token string">"2011-09-01"</span> <span class="token comment">//生效日期</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wage<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setWagemore</span><span class="token punctuation">(</span>$cal<span class="token punctuation">.</span><span class="token function">getWage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额&lt;=1500"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&lt;=</span> <span class="token number">1500</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.03</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在1500至4500之间"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">1500</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&lt;=</span> <span class="token number">4500</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在4500志9000之间"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">4500</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&lt;=</span> <span class="token number">9000</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在9000志35000之间"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">9000</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&lt;=</span> <span class="token number">35000</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">1005</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在35000至55000之间"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">35000</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&lt;=</span> <span class="token number">55000</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">2755</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在55000至80000之间"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">55000</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&lt;=</span> <span class="token number">80000</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">5505</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：设置税率--&gt;&gt;应纳税所得额在80000以上"</span>    salience <span class="token number">2</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"SETCess_Group"</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wagemore <span class="token operator">&gt;</span> <span class="token number">80000</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setCess</span><span class="token punctuation">(</span><span class="token number">0.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setPreminus</span><span class="token punctuation">(</span><span class="token number">13505</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>$cal<span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"个人所得税：计算税后工资"</span>    salience <span class="token number">1</span>    when        $cal <span class="token operator">:</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span>wage <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> wagemore <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> cess <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>    then        $cal<span class="token punctuation">.</span><span class="token function">setWageminus</span><span class="token punctuation">(</span>$cal<span class="token punctuation">.</span><span class="token function">getWagemore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>$cal<span class="token punctuation">.</span><span class="token function">getCess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>$cal<span class="token punctuation">.</span><span class="token function">getPreminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $cal<span class="token punctuation">.</span><span class="token function">setActualwage</span><span class="token punctuation">(</span>$cal<span class="token punctuation">.</span><span class="token function">getWage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>$cal<span class="token punctuation">.</span><span class="token function">getWageminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----税前工资："</span><span class="token operator">+</span>$cal<span class="token punctuation">.</span><span class="token function">getWage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----应纳税所得额："</span><span class="token operator">+</span>$cal<span class="token punctuation">.</span><span class="token function">getWagemore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----税率："</span> <span class="token operator">+</span> $cal<span class="token punctuation">.</span><span class="token function">getCess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----速算扣除数："</span> <span class="token operator">+</span> $cal<span class="token punctuation">.</span><span class="token function">getPreminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----扣税额："</span> <span class="token operator">+</span> $cal<span class="token punctuation">.</span><span class="token function">getWageminus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----税后工资："</span> <span class="token operator">+</span> $cal<span class="token punctuation">.</span><span class="token function">getActualwage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建RuleService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Calculation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token comment">/** * 调用规则引擎，执行规则 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">KieBase</span> kieBase<span class="token punctuation">;</span>    <span class="token comment">//个人所得税计算</span>    <span class="token keyword">public</span> <span class="token class-name">Calculation</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token class-name">Calculation</span> calculation<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> kieSession <span class="token operator">=</span> kieBase<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>calculation<span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieSession<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> calculation<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：创建RuleController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Calculation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RuleService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/rule"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RuleService</span> ruleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/calculate"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Calculation</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">double</span> wage<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Calculation</span> calculation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calculation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        calculation<span class="token punctuation">.</span><span class="token function">setWage</span><span class="token punctuation">(</span>wage<span class="token punctuation">)</span><span class="token punctuation">;</span>        calculation <span class="token operator">=</span> ruleService<span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span>calculation<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calculation<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> calculation<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：创建启动类DroolsApplication</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DroolsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第九步：导入静态资源文件到resources/static目录下</p><h3 id="9-2-信用卡申请"><a href="#9-2-信用卡申请" class="headerlink" title="9.2 信用卡申请"></a>9.2 信用卡申请</h3><p>本小节我们需要通过Drools规则引擎来根据规则进行申请人的合法性检查，检查通过后再根据规则确定信用卡额度，最终页面效果如下：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200214202525859.png" alt="image-20200214202525859"></p><h4 id="9-2-1-计算规则"><a href="#9-2-1-计算规则" class="headerlink" title="9.2.1 计算规则"></a>9.2.1 计算规则</h4><p>合法性检查规则如下：</p><table><thead><tr><th>规则编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>检查学历与薪水1</td><td>如果申请人既没房也没车，同时学历为大专以下，并且月薪少于5000，那么不通过</td></tr><tr><td>2</td><td>检查学历与薪水2</td><td>如果申请人既没房也没车，同时学历为大专或本科，并且月薪少于3000，那么不通过</td></tr><tr><td>3</td><td>检查学历与薪水3</td><td>如果申请人既没房也没车，同时学历为本科以上，并且月薪少于2000，同时之前没有信用卡的，那么不通过</td></tr><tr><td>4</td><td>检查申请人已有的信用卡数量</td><td>如果申请人现有的信用卡数量大于10，那么不通过</td></tr></tbody></table><p>信用卡额度确定规则：</p><table><thead><tr><th>规则编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>规则1</td><td>如果申请人有房有车，或者月收入在20000以上，那么发放的信用卡额度为15000</td></tr><tr><td>2</td><td>规则2</td><td>如果申请人没房没车，但月收入在10000~20000之间，那么发放的信用卡额度为6000</td></tr><tr><td>3</td><td>规则3</td><td>如果申请人没房没车，月收入在10000以下，那么发放的信用卡额度为3000</td></tr><tr><td>4</td><td>规则4</td><td>如果申请人有房没车或者没房但有车，月收入在10000以下，那么发放的信用卡额度为5000</td></tr><tr><td>5</td><td>规则5</td><td>如果申请人有房没车或者是没房但有车，月收入在10000~20000之间，那么发放的信用卡额度为8000</td></tr></tbody></table><h4 id="9-2-2-实现步骤"><a href="#9-2-2-实现步骤" class="headerlink" title="9.2.2 实现步骤"></a>9.2.2 实现步骤</h4><p>第一步：创建maven工程creditCardApply并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>creditCardApply<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--drools规则引擎--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-templates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建/resources/application.yml文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> creditCardApply<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：编写配置类DroolsConfig</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieServices</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieFileSystem</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">KieRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieContainer</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ResourceFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span><span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnMissingBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token comment">/** * 规则引擎配置类 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsConfig</span> <span class="token punctuation">{</span>    <span class="token comment">//指定规则文件存放的目录</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> RULES_PATH <span class="token operator">=</span> <span class="token string">"rules/"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieFileSystem</span> <span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">KieFileSystem</span> kieFileSystem <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResourcePatternResolver</span> resourcePatternResolver <span class="token operator">=</span>                <span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span>                resourcePatternResolver<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath*:"</span> <span class="token operator">+</span> RULES_PATH <span class="token operator">+</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>            path <span class="token operator">=</span> RULES_PATH <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            kieFileSystem<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ResourceFactory</span><span class="token punctuation">.</span><span class="token function">newClassPathResource</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> kieFileSystem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieContainer</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">KieRepository</span> kieRepository <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieRepository<span class="token punctuation">.</span><span class="token function">addKieModule</span><span class="token punctuation">(</span>kieRepository<span class="token operator">::</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KieBuilder</span> kieBuilder <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieBuilder</span><span class="token punctuation">(</span><span class="token function">kieFileSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieBuilder<span class="token punctuation">.</span><span class="token function">buildAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieContainer</span><span class="token punctuation">(</span>kieRepository<span class="token punctuation">.</span><span class="token function">getDefaultReleaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KieBase</span> <span class="token function">kieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">kieContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKieBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span> <span class="token function">kiePostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KModuleBeanFactoryPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编写实体类CreditCardApplyInfo</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token comment">/** * 信用卡申请信息 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreditCardApplyInfo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> EDUCATION_1 <span class="token operator">=</span> <span class="token string">"专科以下"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> EDUCATION_2 <span class="token operator">=</span> <span class="token string">"专科"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> EDUCATION_3 <span class="token operator">=</span> <span class="token string">"本科"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> EDUCATION_4 <span class="token operator">=</span> <span class="token string">"本科以上"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> education<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> telephone<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> monthlyIncome <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//月收入</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> hasHouse <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//是否有房</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> hasCar <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//是否有车</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> hasCreditCardCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//现持有信用卡数量</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> checkResult <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//审核是否通过</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> quota <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//额度</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEducation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> education<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEducation</span><span class="token punctuation">(</span><span class="token class-name">String</span> education<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>education <span class="token operator">=</span> education<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTelephone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> telephone<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTelephone</span><span class="token punctuation">(</span><span class="token class-name">String</span> telephone<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>telephone <span class="token operator">=</span> telephone<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getMonthlyIncome</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> monthlyIncome<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMonthlyIncome</span><span class="token punctuation">(</span><span class="token keyword">double</span> monthlyIncome<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>monthlyIncome <span class="token operator">=</span> monthlyIncome<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHasHouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hasHouse<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHasHouse</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasHouse<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hasHouse <span class="token operator">=</span> hasHouse<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHasCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hasCar<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHasCar</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasCar<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hasCar <span class="token operator">=</span> hasCar<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getHasCreditCardCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hasCreditCardCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHasCreditCardCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> hasCreditCardCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hasCreditCardCount <span class="token operator">=</span> hasCreditCardCount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCheckResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> checkResult<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCheckResult</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> checkResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>checkResult <span class="token operator">=</span> checkResult<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getQuota</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> quota<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token keyword">double</span> quota<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>quota <span class="token operator">=</span> quota<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>checkResult<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"审核通过，信用卡额度为："</span> <span class="token operator">+</span> quota<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"审核不通过"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：在resources/rules下创建规则文件creditCardApply.drl文件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>creditCardApply</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CreditCardApplyInfo</span><span class="token comment">//合法性检查</span>rule <span class="token string">"如果申请人既没房也没车，同时学历为大专以下，并且月薪少于5000，那么不通过"</span>    salience <span class="token number">10</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>hasCar <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                education <span class="token operator">==</span> <span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">.</span>EDUCATION_1 <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;</span> <span class="token number">5000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setCheckResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        drools<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人既没房也没车，同时学历为大专或本科，并且月薪少于3000，那么不通过"</span>    salience <span class="token number">10</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>hasCar <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                <span class="token punctuation">(</span>education <span class="token operator">==</span> <span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">.</span>EDUCATION_2  <span class="token operator">||</span>                                education <span class="token operator">==</span> <span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">.</span>EDUCATION_3<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;</span> <span class="token number">3000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setCheckResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        drools<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人既没房也没车，同时学历为本科以上，并且月薪少于2000，同时之前没有信用卡的，那么不通过"</span>    salience <span class="token number">10</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>hasCar <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                education <span class="token operator">==</span> <span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">.</span>EDUCATION_4 <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;</span> <span class="token number">2000</span> <span class="token operator">&amp;&amp;</span>                                hasCreditCardCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setCheckResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        drools<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人现有的信用卡数量大于10，那么不通过"</span>    salience <span class="token number">10</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>hasCreditCardCount <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setCheckResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        drools<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token comment">//--------------------------------------------------------------------------</span><span class="token comment">//确定额度</span>rule <span class="token string">"如果申请人有房有车，或者月收入在20000以上，那么发放的信用卡额度为15000"</span>    salience <span class="token number">1</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"quota_group"</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>checkResult <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span>                                <span class="token punctuation">(</span><span class="token punctuation">(</span>hasHouse <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> hasCar <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">||</span>                                <span class="token punctuation">(</span>monthlyIncome <span class="token operator">&gt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人没房没车，但月收入在10000~20000之间，那么发放的信用卡额度为6000"</span>    salience <span class="token number">1</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"quota_group"</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>checkResult <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span>                                hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                hasCar <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&gt;=</span> <span class="token number">10000</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;=</span> <span class="token number">20000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人没房没车，月收入在10000以下，那么发放的信用卡额度为3000"</span>    salience <span class="token number">1</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"quota_group"</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>checkResult <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span>                                        hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                        hasCar <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>                                        monthlyIncome <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人有房没车或者没房但有车，月收入在10000以下，那么发放的信用卡额度为5000"</span>    salience <span class="token number">1</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"quota_group"</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>checkResult <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span>                                <span class="token punctuation">(</span><span class="token punctuation">(</span>hasHouse <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> hasCar <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">||</span>                                <span class="token punctuation">(</span>hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> hasCar <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"如果申请人有房没车或者是没房但有车，月收入在10000~20000之间，那么发放的信用卡额度为8000"</span>    salience <span class="token number">1</span>    no<span class="token operator">-</span>loop <span class="token boolean">true</span>    activation<span class="token operator">-</span>group <span class="token string">"quota_group"</span>    when        $c<span class="token operator">:</span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">(</span>checkResult <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span>                                <span class="token punctuation">(</span><span class="token punctuation">(</span>hasHouse <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> hasCar <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">||</span>                                <span class="token punctuation">(</span>hasHouse <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> hasCar <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&gt;=</span> <span class="token number">10000</span> <span class="token operator">&amp;&amp;</span>                                monthlyIncome <span class="token operator">&lt;=</span> <span class="token number">20000</span><span class="token punctuation">)</span>    then        $c<span class="token punctuation">.</span><span class="token function">setQuota</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建RuleService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieBase</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">KieBase</span> kieBase<span class="token punctuation">;</span>    <span class="token comment">//调用Drools规则引擎实现信用卡申请</span>    <span class="token keyword">public</span> <span class="token class-name">CreditCardApplyInfo</span> <span class="token function">creditCardApply</span><span class="token punctuation">(</span><span class="token class-name">CreditCardApplyInfo</span> creditCardApplyInfo<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> session <span class="token operator">=</span> kieBase<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>creditCardApplyInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> creditCardApplyInfo<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：创建RuleController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CreditCardApplyInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RuleService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestBody</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/rule"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RuleService</span> ruleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/creditCardApply"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">CreditCardApplyInfo</span> <span class="token function">creditCardApply</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span>         <span class="token class-name">CreditCardApplyInfo</span> creditCardApplyInfo<span class="token punctuation">)</span><span class="token punctuation">{</span>        creditCardApplyInfo <span class="token operator">=</span> ruleService<span class="token punctuation">.</span><span class="token function">creditCardApply</span><span class="token punctuation">(</span>creditCardApplyInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> creditCardApplyInfo<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：创建启动类DroolsApplication</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DroolsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第九步：导入静态资源文件到resources/static目录下</p><h3 id="9-3-保险产品准入规则"><a href="#9-3-保险产品准入规则" class="headerlink" title="9.3 保险产品准入规则"></a>9.3 保险产品准入规则</h3><h4 id="9-3-1-决策表"><a href="#9-3-1-决策表" class="headerlink" title="9.3.1 决策表"></a>9.3.1 决策表</h4><p>前面的课程中我们编写的规则文件都是drl形式的文件，Drools除了支持drl形式的文件外还支持xls格式的文件（即Excel文件）。这种xls格式的文件通常称为决策表（decision table）。</p><p>决策表（decision table）是一个“精确而紧凑的”表示条件逻辑的方式，非常适合商业级别的规则。决策表与现有的drl文件可以无缝替换。Drools提供了相应的API可以将xls文件编译为drl格式的字符串。</p><p>一个决策表的例子如下：</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200217160930138.png" alt="image-20200217160930138"></p><p>决策表语法：</p><table><thead><tr><th>关键字</th><th>说明</th><th>是否必须</th></tr></thead><tbody><tr><td>RuleSet</td><td>相当于drl文件中的package</td><td>必须，只能有一个。如果没有设置RuleSet对应的值则使用默认值rule_table</td></tr><tr><td>Sequential</td><td>取值为Boolean类型。true表示规则按照表格自上到下的顺序执行，false表示乱序</td><td>可选</td></tr><tr><td>Import</td><td>相当于drl文件中的import，如果引入多个类则类之间用逗号分隔</td><td>可选</td></tr><tr><td>Variables</td><td>相当于drl文件中的global，用于定义全局变量，如果有多个全局变量则中间用逗号分隔</td><td>可选</td></tr><tr><td>RuleTable</td><td>它指示了后面将会有一批rule，RuleTable的名称将会作为以后生成rule的前缀</td><td>必须</td></tr><tr><td>CONDITION</td><td>规则条件关键字，相当于drl文件中的when。下面两行则表示 LHS 部分，第三行则为注释行，不计为规则部分，从第四行开始，每一行表示一条规则</td><td>每个规则表至少有一个</td></tr><tr><td>ACTION</td><td>规则结果关键字，相当于drl文件中的then</td><td>每个规则表至少有一个</td></tr><tr><td>NO-LOOP</td><td>相当于drl文件中的no-loop</td><td>可选</td></tr><tr><td>AGENDA-GROUP</td><td>相当于drl文件中的agenda-group</td><td>可选</td></tr></tbody></table><p>在决策表中还经常使用到占位符，语法为$后面加数字，用于替换每条规则中设置的具体值。</p><p>上面的决策表例子转换为drl格式的规则文件内容如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">PersonInfoEntity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span>global <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span> listRules<span class="token punctuation">;</span>rule <span class="token string">"personCheck_10"</span>salience <span class="token number">65535</span>agenda<span class="token operator">-</span>group <span class="token string">"sign"</span>when$person <span class="token operator">:</span> <span class="token class-name">PersonInfoEntity</span><span class="token punctuation">(</span>sex <span class="token operator">!=</span> <span class="token string">"男"</span><span class="token punctuation">)</span>thenlistRules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"性别不对"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"personCheck_11"</span>salience <span class="token number">65534</span>agenda<span class="token operator">-</span>group <span class="token string">"sign"</span>when$person <span class="token operator">:</span> <span class="token class-name">PersonInfoEntity</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">22</span> <span class="token operator">||</span> age <span class="token operator">&gt;</span> <span class="token number">25</span><span class="token punctuation">)</span>thenlistRules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"年龄不合适"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>endrule <span class="token string">"personCheck_12"</span>salience <span class="token number">65533</span>agenda<span class="token operator">-</span>group <span class="token string">"sign"</span>when$person <span class="token operator">:</span> <span class="token class-name">PersonInfoEntity</span><span class="token punctuation">(</span>salary <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">)</span>thenlistRules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"工资太低了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要进行决策表相关操作，需要导入如下maven坐标：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-decisiontables<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过下图可以发现，由于maven的依赖传递特性在导入drools-decisiontables坐标后，drools-core和drools-compiler等坐标也被传递了过来</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200218105819932.png" alt="image-20200218105819932"></p><p>Drools提供的将xls文件编译为drl格式字符串的API如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> realPath <span class="token operator">=</span> <span class="token string">"C:\\testRule.xls"</span><span class="token punctuation">;</span><span class="token comment">//指定决策表xls文件的磁盘路径</span><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SpreadsheetCompiler</span> compiler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpreadsheetCompiler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> drl <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> <span class="token class-name">InputType</span><span class="token punctuation">.</span>XLS<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Drools还提供了基于drl格式字符串创建KieSession的API：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">KieHelper</span> kieHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KieHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kieHelper<span class="token punctuation">.</span><span class="token function">addContent</span><span class="token punctuation">(</span>drl<span class="token punctuation">,</span> <span class="token class-name">ResourceType</span><span class="token punctuation">.</span>DRL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KieSession</span> session <span class="token operator">=</span> kieHelper<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>基于决策表的入门案例：</p><p>第一步：创建maven工程drools_decisiontable_demo并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-decisiontables<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.10.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建实体类PersonInfoEntity</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonInfoEntity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> salary<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> salary<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token keyword">double</span> salary<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建xls规则文件（可以直接使用资料中提供的testRule.xls文件）</p><p>第四步：创建单元测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>    <span class="token class-name">String</span> realPath <span class="token operator">=</span> <span class="token string">"d:\\testRule.xls"</span><span class="token punctuation">;</span><span class="token comment">//指定决策表xls文件的磁盘路径</span>    <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SpreadsheetCompiler</span> compiler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpreadsheetCompiler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> drl <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> <span class="token class-name">InputType</span><span class="token punctuation">.</span>XLS<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>drl<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieHelper</span> kieHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KieHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    kieHelper<span class="token punctuation">.</span><span class="token function">addContent</span><span class="token punctuation">(</span>drl<span class="token punctuation">,</span> <span class="token class-name">ResourceType</span><span class="token punctuation">.</span>DRL<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">KieSession</span> session <span class="token operator">=</span> kieHelper<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">PersonInfoEntity</span> personInfoEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonInfoEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    personInfoEntity<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    personInfoEntity<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    personInfoEntity<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">setGlobal</span><span class="token punctuation">(</span><span class="token string">"listRules"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>personInfoEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">getAgenda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAgendaGroup</span><span class="token punctuation">(</span><span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    session<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-3-2-规则介绍"><a href="#9-3-2-规则介绍" class="headerlink" title="9.3.2 规则介绍"></a>9.3.2 规则介绍</h4><p>各保险公司针对人身、财产推出了不同的保险产品，作为商业保险公司，筛选出符合公司利益最大化的客户是非常重要的，即各保险产品的准入人群是不同的，也就是说保险公司会针对不同的人群特征，制定不同的产品缴费和赔付规则。</p><p>我们来看一下某保险产品准入规则的简化版，当不满足以下规则时，系统模块需要返回准入失败标识和失败原因</p><pre class="line-numbers language-file" data-language="file"><code class="language-file">规则1：  保险公司是：PICC规则2：  销售区域是：北京、天津规则3：  投保人年龄：0 ~ 17岁规则4：  保险期间是：20年、25年、30年规则5：  缴费方式是：趸交（一次性交清）或年交规则6：  保险期与交费期规则一：保险期间为20年期交费期间最长10年交且不能选择[趸交]规则7：  保险期与交费期规则二：保险期间为25年期交费期间最长15年交且不能选择[趸交]规则8：  保险期与交费期规则三：保险期间为30年期交费期间最长20年交且不能选择[趸交]规则9：  被保人要求：（投保年龄+保险期间）不得大于40周岁规则10： 保险金额规则：投保时约定，最低为5万元，超过部分必须为1000元的整数倍规则11： 出单基本保额限额规则：线上出单基本保额限额62.5万元，超62.5万元需配合契调转线下出单<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在本案例中规则文件是一个Excel文件，业务人员可以直接更改这个文件中指标的值，系统不需要做任何变更。</p><h4 id="9-3-3-实现步骤"><a href="#9-3-3-实现步骤" class="headerlink" title="9.3.3 实现步骤"></a>9.3.3 实现步骤</h4><p>本案例还是基于Spring Boot整合Drools的架构来实现。</p><p>第一步：创建maven工程insuranceInfoCheck并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>insuranceInfoCheck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-lang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--drools规则引擎--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-templates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.kie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kie-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.6.0.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建/resources/application.yml文件</p><pre class="line-numbers language-file" data-language="file"><code class="language-file">server:  port: 8080spring:  application:    name: insuranceInfoCheck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建实体类InsuranceInfo</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token comment">/** * 保险信息 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InsuranceInfo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param1<span class="token punctuation">;</span><span class="token comment">//保险公司</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param2<span class="token punctuation">;</span><span class="token comment">//方案代码</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param3<span class="token punctuation">;</span><span class="token comment">//渠道号</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param4<span class="token punctuation">;</span><span class="token comment">//销售区域</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param5<span class="token punctuation">;</span><span class="token comment">//投保年龄</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param6<span class="token punctuation">;</span><span class="token comment">//保险期间</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param7<span class="token punctuation">;</span><span class="token comment">//缴费期间</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param8<span class="token punctuation">;</span><span class="token comment">//缴费方式</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param9<span class="token punctuation">;</span><span class="token comment">//保障类型</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param10<span class="token punctuation">;</span><span class="token comment">//等待期</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param11<span class="token punctuation">;</span><span class="token comment">//犹豫期</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param12<span class="token punctuation">;</span><span class="token comment">//职业类型</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param13<span class="token punctuation">;</span><span class="token comment">//保额限制</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param14<span class="token punctuation">;</span><span class="token comment">//免赔额</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param15<span class="token punctuation">;</span><span class="token comment">//主险保额</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param16<span class="token punctuation">;</span><span class="token comment">//主险保费</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param17<span class="token punctuation">;</span><span class="token comment">//附加险保额</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param18<span class="token punctuation">;</span><span class="token comment">//附加险保费</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param19<span class="token punctuation">;</span><span class="token comment">//与投保人关系</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param20<span class="token punctuation">;</span><span class="token comment">//与被保人关系</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param21<span class="token punctuation">;</span><span class="token comment">//性别</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param22<span class="token punctuation">;</span><span class="token comment">//证件</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param23<span class="token punctuation">;</span><span class="token comment">//保费</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> param24<span class="token punctuation">;</span><span class="token comment">//保额</span>    <span class="token comment">//getter setter省略</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：创建决策表文件（也可以直接使用实战资料中提供的insuranceInfoCheck.xls文件）</p><p><img src="Java%E9%AB%98%E6%89%8B%E7%8F%AD-%E9%98%B6%E6%AE%B5%E4%B8%80-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8EDrools.assets/image-20200218120618384.png" alt="image-20200218120618384"></p><p>第五步：封装工具类KieSessionUtils</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">InsuranceInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">PersonInfoEntity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>decisiontable<span class="token punctuation">.</span></span><span class="token class-name">InputType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>decisiontable<span class="token punctuation">.</span></span><span class="token class-name">SpreadsheetCompiler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">Results</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ResourceType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">KieHelper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KieSessionUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">KieSessionUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token comment">// 把xls文件解析为String</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> getDRL <span class="token punctuation">(</span><span class="token class-name">String</span> realPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">{</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 例如：C:\\abc.xls</span>        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SpreadsheetCompiler</span> compiler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpreadsheetCompiler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> drl <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> <span class="token class-name">InputType</span><span class="token punctuation">.</span>XLS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>drl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> drl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// drl为含有内容的字符串</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">KieSession</span> <span class="token function">createKieSessionFromDRL</span><span class="token punctuation">(</span><span class="token class-name">String</span> drl<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        <span class="token class-name">KieHelper</span> kieHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KieHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        kieHelper<span class="token punctuation">.</span><span class="token function">addContent</span><span class="token punctuation">(</span>drl<span class="token punctuation">,</span> <span class="token class-name">ResourceType</span><span class="token punctuation">.</span>DRL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Results</span> results <span class="token operator">=</span> kieHelper<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span><span class="token function">hasMessages</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span>WARNING<span class="token punctuation">,</span> <span class="token class-name">Message<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Message</span><span class="token punctuation">&gt;</span></span> messages <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">getMessages</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span>WARNING<span class="token punctuation">,</span> <span class="token class-name">Message<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Message</span> message <span class="token operator">:</span> messages<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Error: "</span><span class="token operator">+</span>message<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">// throw new IllegalStateException("Compilation errors were found. Check the logs.");</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> kieHelper<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// realPath为Excel文件绝对路径</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">KieSession</span> <span class="token function">getKieSessionFromXLS</span><span class="token punctuation">(</span><span class="token class-name">String</span> realPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">createKieSessionFromDRL</span><span class="token punctuation">(</span><span class="token function">getDRL</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建RuleService类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">InsuranceInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">KieSessionUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">insuranceInfoCheck</span><span class="token punctuation">(</span><span class="token class-name">InsuranceInfo</span> insuranceInfo<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        <span class="token class-name">KieSession</span> session <span class="token operator">=</span> <span class="token class-name">KieSessionUtils</span><span class="token punctuation">.</span><span class="token function">getKieSessionFromXLS</span><span class="token punctuation">(</span><span class="token string">"D:\\rules.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">getAgenda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAgendaGroup</span><span class="token punctuation">(</span><span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>insuranceInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listRules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">setGlobal</span><span class="token punctuation">(</span><span class="token string">"listRules"</span><span class="token punctuation">,</span> listRules<span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> listRules<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：创建RuleController类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">InsuranceInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RuleService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/rule"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RuleService</span> ruleService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/insuranceInfoCheck"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">insuranceInfoCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Map</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//模拟数据，实际应为页面传递过来</span>        <span class="token class-name">InsuranceInfo</span> insuranceInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InsuranceInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam1</span><span class="token punctuation">(</span><span class="token string">"picc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam4</span><span class="token punctuation">(</span><span class="token string">"上海"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam5</span><span class="token punctuation">(</span><span class="token string">"101"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam6</span><span class="token punctuation">(</span><span class="token string">"12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam7</span><span class="token punctuation">(</span><span class="token string">"222"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam8</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        insuranceInfo<span class="token punctuation">.</span><span class="token function">setParam13</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> ruleService<span class="token punctuation">.</span><span class="token function">insuranceInfoCheck</span><span class="token punctuation">(</span>insuranceInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>list <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"checkResult"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"准入失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"detail"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"checkResult"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"准入成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> map<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"checkResult"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"未知错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> map<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：创建启动类DroolsApplication</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DroolsApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DroolsApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;规则引擎-Drools&quot;&gt;&lt;a href=&quot;#规则引擎-Drools&quot; class=&quot;headerlink&quot; title=&quot;规则引擎 Drools&quot;&gt;&lt;/a&gt;规则引擎 Drools&lt;/h1&gt;&lt;h2 id=&quot;1-问题引出&quot;&gt;&lt;a href=&quot;#1-问题引出&quot; cla</summary>
      
    
    
    
    <category term="阶段一 中台战略与组件化开发专题课程" scheme="https://chenliren9527.github.io/categories/%E9%98%B6%E6%AE%B5%E4%B8%80-%E4%B8%AD%E5%8F%B0%E6%88%98%E7%95%A5%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%93%E9%A2%98%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="Java高手课" scheme="https://chenliren9527.github.io/tags/Java%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="规则引擎" scheme="https://chenliren9527.github.io/tags/%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/"/>
    
    <category term="Drools" scheme="https://chenliren9527.github.io/tags/Drools/"/>
    
    <category term="WorkBench" scheme="https://chenliren9527.github.io/tags/WorkBench/"/>
    
  </entry>
  
  <entry>
    <title>阶段一 第二章 文件服务</title>
    <link href="https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-wen-jian-fu-wu/"/>
    <id>https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-wen-jian-fu-wu/</id>
    <published>2021-12-27T15:08:41.000Z</published>
    <updated>2022-05-17T05:35:19.413Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件服务"><a href="#文件服务" class="headerlink" title="文件服务"></a><strong>文件服务</strong></h1><h2 id="1-需求背景"><a href="#1-需求背景" class="headerlink" title="1. 需求背景"></a>1. 需求背景</h2><p>文件的上传、下载功能是软件系统常见的功能，包括上传文件、下载文件、查看文件等。例如：电商系统中需要上传商品的图片、广告视频，办公系统中上传附件，社交类系统中上传用户头像等等。</p><p>文件上传下载大致流程为：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/1585711616132.png" alt="1585711616132">  </p><p>这种方式开发起来简单、直接，但是有一些问题：</p><ul><li>重复开发： 比如对接某个OSS(Object Storage Service,简称OSS)服务商， 每个应用都需要对接该服务商，重复工作</li><li>扩展性差： 当需要切换服务商时，所有涉及到的应用都需要修改、测试、上线</li></ul><p>基于以上原因，微服务体系下的应用系统一般都有一个文件服务，用于统一管理文件上传下载等功能，大型电商系统甚至有独立的文件、图片、视频服务。此时架构体系变为：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/1585712078385.png" alt="1585712078385"> </p><p>这种方式提供一个独立的文件微服务，该微服务向应用系统提供统一的上传、下载、查看接口，应用系统调用方式相同，并且屏蔽了底层对外调用OSS服务的接口，即使以后迁移OSS服务商，应用层面的系统也不需要变动。</p><p>这种模式也有一个小问题，比如我们调用了阿里云的OSS服务，如果所有的下载、查看功能都调用文件服务，那么文件服务的网络流量将会有非常大的压力。所以常用的做法是这样的：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/1585712407005.png" alt="1585712407005"> </p><h2 id="2-核心功能"><a href="#2-核心功能" class="headerlink" title="2. 核心功能"></a>2. 核心功能</h2><p>文件服务的核心功能是： <strong>上传</strong>和<strong>下载</strong>， 另一方面，除了这两个核心功能，还需要其他非功能性要求：</p><ul><li>可用性：作为基础性服务，可用性要求非常高</li><li>配置性：OSS服务商配置、上传下载方式等内容</li><li>扩展性：能方便的进行扩展，如添加新的OSS服务商等</li></ul><p>本课程的文件服务提供两种类型的服务：</p><p>​    1、面对应用系统的通用附件服务</p><p>​            提供统一的上传接口，屏蔽底层的存储方案（本地存储、FastDFS、阿里云存储、七牛云存储等），可独立运行服务</p><p>​    2、面对用户的网盘服务</p><p>​            有文件夹和文件的概念，支持大文件分片上传、合并</p><h2 id="3-存储策略"><a href="#3-存储策略" class="headerlink" title="3. 存储策略"></a>3. 存储策略</h2><h3 id="3-1-本地存储"><a href="#3-1-本地存储" class="headerlink" title="3.1 本地存储"></a>3.1 本地存储</h3><p>本地存储，即将上传的文件存储在本地磁盘，并通过本地提供的Nginx服务来对外提供文件的下载和查看等功能。</p><h3 id="3-2-FastDFS存储"><a href="#3-2-FastDFS存储" class="headerlink" title="3.2 FastDFS存储"></a>3.2 FastDFS存储</h3><p>FastDFS存储，即将上传的文件存储在FastDFS分布式文件存储系统中，并通过FastDFS结合Nginx提供的服务来对外提供文件的下载和查看等功能。</p><h3 id="3-3-云存储"><a href="#3-3-云存储" class="headerlink" title="3.3 云存储"></a>3.3 云存储</h3><p>云存储，即将上传的文件存储在第三方云平台上，例如阿里云OSS、七牛云OSS服务等，并通过这些第三方提供的OSS服务来对外提供文件的下载和查看等功能。</p><h2 id="4-技术设计"><a href="#4-技术设计" class="headerlink" title="4. 技术设计"></a>4. 技术设计</h2><p>本课程的文件服务以品达通用权限系统为脚手架，在此基础之上进行开发。为了能够提供统一的上传接口从而屏蔽底层的存储方案，需要进行相应的接口设计：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424152528386.png" alt="image-20200424152528386"></p><p>FileStrategy：文件策略顶层接口</p><p>AbstractFileStrategy：抽象文件策略处理类，实现FileStrategy接口。实现主要的文件上传处理流程，但是真正上传的过程需要其子类来完成。</p><p>LocalServiceImpl：具体的文件策略处理类，是AbstractFileStrategy的子类，负责将上传的文件保存在本地磁盘。</p><p>FastDfsServiceImpl：具体的文件策略处理类，是AbstractFileStrategy的子类，负责将上传的文件保存到FastDFS上。</p><p>AliServiceImpl：具体的文件策略处理类，是AbstractFileStrategy的子类，负责将上传的文件保存到阿里云OSS上。</p><p><code>注意：本课程提供的存储策略有以上三种方式（即本地存储、FastDFS存储、阿里云OSS存储），后期也可以根据需要扩展其他的存储策略。这种设计方式其实就是策略模式的一个具体应用。</code></p><h2 id="5-文件服务开发"><a href="#5-文件服务开发" class="headerlink" title="5. 文件服务开发"></a>5. 文件服务开发</h2><h3 id="5-1-环境搭建"><a href="#5-1-环境搭建" class="headerlink" title="5.1 环境搭建"></a>5.1 环境搭建</h3><h4 id="5-1-1-数据库环境搭建"><a href="#5-1-1-数据库环境搭建" class="headerlink" title="5.1.1 数据库环境搭建"></a>5.1.1 数据库环境搭建</h4><p>第一步：创建pd_files数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> pd_files <span class="token keyword">character</span> <span class="token keyword">set</span> utf8mb4<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：在pd_files数据库中创建pd_attachment和pd_file数据表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>pd_attachment<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'ID'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>biz_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'业务ID'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>biz_type<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'业务类型\n#AttachmentType'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>data_type<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'IMAGE'</span> <span class="token keyword">COMMENT</span> <span class="token string">'数据类型\n#DataType{DIR:目录;IMAGE:图片;VIDEO:视频;AUDIO:音频;DOC:文档;OTHER:其他}'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>submitted_file_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'原始文件名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>group_<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'FastDFS返回的组\n用于FastDFS'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>path<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'FastDFS的远程文件名\n用于FastDFS'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>relative_path<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件相对路径'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>url<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件访问链接\n需要通过nginx配置路由，才能访问'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>file_md5<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件md5值'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>context_type<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件上传类型\n取上传文件的值'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>filename<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'唯一文件名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>ext<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'后缀\n (没有.)'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>size<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'大小'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>org_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'组织ID\n#c_core_org'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>icon<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'图标'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_month<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建年月\n格式：yyyy-MM 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_week<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时处于当年的第几周\nyyyy-ww 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_day<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建年月日\n格式： yyyy-MM-dd 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_user<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建人'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'最后修改时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_user<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'最后修改人'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 ROW_FORMAT<span class="token operator">=</span>COMPACT <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'附件'</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>pd_file<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>data_type<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'IMAGE'</span> <span class="token keyword">COMMENT</span> <span class="token string">'数据类型\n#DataType{DIR:目录;IMAGE:图片;VIDEO:视频;AUDIO:音频;DOC:文档;OTHER:其他}'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>submitted_file_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'原始文件名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>tree_path<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">','</span> <span class="token keyword">COMMENT</span> <span class="token string">'父目录层级关系'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>grade<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1'</span> <span class="token keyword">COMMENT</span> <span class="token string">'层级等级\n从1开始计算'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span> <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> b<span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否删除\n#BooleanStatus{TRUE:1,已删除;FALSE:0,未删除}'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>folder_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'父文件夹ID'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>url<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件访问链接\n需要通过nginx配置路由，才能访问'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>size<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件大小\n单位字节'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>folder_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'父文件夹名称'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>group_<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'FastDFS组\n用于FastDFS'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>path<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'FastDFS远程文件名\n用于FastDFS'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>relative_path<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件的相对路径 '</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>file_md5<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'md5值'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>context_type<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件类型\n取上传文件的值'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>filename<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'唯一文件名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>ext<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件名后缀 \n(没有.)'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>icon<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件图标\n用于云盘显示'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_month<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时年月\n格式：yyyy-MM 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_week<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时年周\nyyyy-ww 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_day<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时年月日\n格式： yyyy-MM-dd 用于统计'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_user<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建人'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'最后修改时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_user<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'最后修改人'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>source<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'inner'</span> <span class="token keyword">COMMENT</span> <span class="token string">'文件来源：inner, outer'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">,</span>  FULLTEXT <span class="token keyword">KEY</span> <span class="token punctuation">`</span>FU_TREE_PATH<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>tree_path<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 ROW_FORMAT<span class="token operator">=</span>COMPACT <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'文件表'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：SQL脚本位置为 <code>文件服务/资料/数据库/pd_files.sql</code></p><pre class="line-numbers language-none"><code class="language-none">前面课程已经提到，本课程的文件服务提供两种类型的服务：1、面对应用系统的通用附件服务提供统一的上传接口，屏蔽底层的存储方案（本地存储、FastDFS、阿里云存储、七牛云存储等），可独立运行服务。上传的文件相关信息保存在pd_attachment表中。2、面对用户的网盘服务提供统一的上传接口，屏蔽底层的存储方案，有文件夹和文件的概念，支持大文件分片上传、断点续传。上传的文件相关信息保存在pd_file表中。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pd_attachment表为附件表，具体表结构如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200430104238608.png" alt="image-20200430104238608"></p><p>pd_file表为文件/文件夹信息表，具体表结构如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200430114544818.png" alt="image-20200430114544818"></p><h4 id="5-1-2-Nacos环境搭建"><a href="#5-1-2-Nacos环境搭建" class="headerlink" title="5.1.2 Nacos环境搭建"></a>5.1.2 Nacos环境搭建</h4><p>第一步：安装Nacos并进行配置(略)</p><p>第二步：在Nacos中创建命名空间file-server</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200429165919785.png" alt="image-20200429165919785"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200429170033028.png" alt="image-20200429170033028"></p><p>第三步：在Nacos中将配置文件导入到file-server命名空间</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200429170157579.png" alt="image-20200429170157579"></p><p>注：yml配置文件位置为 <code>文件服务/资料/Nacos/nacos_config_export_2020-04-30 11_47_56.zip</code></p><h4 id="5-1-3-Nginx环境搭建"><a href="#5-1-3-Nginx环境搭建" class="headerlink" title="5.1.3 Nginx环境搭建"></a>5.1.3 Nginx环境搭建</h4><p>当文件存储策略为本地存储或者FastDFS存储时，需要使用Nginx服务来对外提供文件的下载和查看等功能。</p><p>第一步：安装Nginx(略)</p><p>第二步：配置Nginx_HOME/conf/nginx.conf</p><p>注：可参照 <code>文件服务/资料/Nginx/nginx.conf</code> 进行配置</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200429173715882.png" alt="image-20200429173715882"></p><h4 id="5-1-4-maven工程环境搭建"><a href="#5-1-4-maven工程环境搭建" class="headerlink" title="5.1.4 maven工程环境搭建"></a>5.1.4 maven工程环境搭建</h4><p>说明：本项目的开发并不是从零开始搭建开发环境，而是在一个名为品达通用权限系统的基础上进行文件服务的开发。<code>品达通用权限系统是传智播客提供的一个开发平台（脚手架），其中提供了一系列的基础组件并且已经实现了权限管理、认证、鉴权、JWT解析等功能。用户可以在此平台基础上开发自己的业务功能。</code></p><p>品达通用权限系统位置: <code>文件服务/资料/初始工程（脚手架）/pinda-authority</code></p><p>具体搭建过程：</p><p>第一步：导入品达通用权限系统到IDEA并修改pd-apps模块中的pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 开发环境 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--默认激活配置--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--当前环境--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pom.profile.name</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pom.profile.name</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--Nacos配置中心地址--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pom.nacos.ip</span><span class="token punctuation">&gt;</span></span>127.0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pom.nacos.ip</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pom.nacos.port</span><span class="token punctuation">&gt;</span></span>8848<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pom.nacos.port</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--Nacos配置中心命名空间ID--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pom.nacos.namespace</span><span class="token punctuation">&gt;</span></span>            53c655b3-babd-4402-82f1-33b7e4c90111        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pom.nacos.namespace</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在品达通用权限系统平台基础之上创建文件服务对应的maven工程pd-file</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424171904437.png" alt="image-20200424171904437"></p><p>第三步：在pd-file下创建pd-file-entity子模块并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-file-entity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>文件服务实体模块<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：将文件服务相关的实体类、DTO、domain等导入pd-file-entity中</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424172324728.png" alt="image-20200424172324728"></p><p>注：文件服务相关实体类位置 <code>文件服务/资料/文件服务相关实体类</code></p><p>第五步：在pd-file下创建pd-file-server子模块并配置pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-file-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>文件服务启动模块<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-auth-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-validator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-xss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.ow2.asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${asm.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-websocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-undertow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-json<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 测试 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-file-entity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-databases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pd-tools-dozer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- @RefreshScope 需要使用 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 阿里云oss --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 七牛oss --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qiniu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>qiniu-java-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--  FastDFS --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.tobato<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastdfs-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：导入配置文件到pd-file-server中</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424172708976.png" alt="image-20200424172708976"></p><p>注：文件服务相关配置文件位置: <code>文件服务/资料/文件服务相关配置文件</code></p><p>第七步：在pd-file-server中创建启动类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>validator<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">EnableFormValidator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EnableDiscoveryClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">EnableHystrix</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">EnableFeignClients</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Environment</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">UnknownHostException</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableHystrix</span><span class="token annotation punctuation">@EnableFeignClients</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"com.itheima.pinda"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EnableTransactionManagement</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@EnableFormValidator</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileServerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>        <span class="token class-name">ConfigurableApplicationContext</span> application <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">FileServerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Environment</span> env <span class="token operator">=</span> application<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"\n----------------------------------------------------------\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"应用 '{}' 运行成功! 访问连接:\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"Swagger文档: \t\thttp://{}:{}/doc.html\n\t"</span> <span class="token operator">+</span>                        <span class="token string">"数据库监控: \t\thttp://{}:{}/druid\n"</span> <span class="token operator">+</span>                        <span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">,</span>                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"spring.application.name"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"server.port"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"server.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第八步：将配置类导入pd-file-server中</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424181720459.png" alt="image-20200424181720459"></p><p>注：文件服务相关配置类位置: <code>文件服务/资料/文件服务配置类</code></p><p>第九步：在pd-file-server中导入工具类</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424181910324.png" alt="image-20200424181910324"></p><p>注：文件服务相关工具类位置: <code>文件服务/资料/文件服务工具类</code></p><p>第十步：在pd-file-server中导入配置属性类</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424182009395.png" alt="image-20200424182009395"></p><p>注：文件服务相关配置属性类位置: <code>文件服务/资料/文件服务配置属性类</code></p><p>第十一步：在pd-file-server中导入Mapper接口</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200501001642286.png" alt="image-20200501001642286"></p><p>注：文件服务相关Mapper接口位置: 文件服务/资料/文件服务相关Mapper接口</p><h3 id="5-2-文件处理策略"><a href="#5-2-文件处理策略" class="headerlink" title="5.2 文件处理策略"></a>5.2 文件处理策略</h3><p>由于我们当前的文件服务需要给客户端提供统一的服务接口，这就需要文件服务屏蔽底层的具体文件存储方式，所以对文件处理策略进行如下类和接口的设计：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200424152528386.png" alt="image-20200424152528386"></p><h4 id="5-2-1-FileStrategy"><a href="#5-2-1-FileStrategy" class="headerlink" title="5.2.1 FileStrategy"></a>5.2.1 FileStrategy</h4><p>FileStrategy是文件处理策略顶层接口，是对文件处理的顶层抽象，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 文件策略接口 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FileStrategy</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 文件上传     *     * @param file 文件     * @return 文件对象     */</span>    <span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 删除文件     *     * @param list 列表     */</span>    <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-2-AbstractFileStrategy"><a href="#5-2-2-AbstractFileStrategy" class="headerlink" title="5.2.2 AbstractFileStrategy"></a>5.2.2 AbstractFileStrategy</h4><p>AbstractFileStrategy是抽象文件策略处理类，实现了FileStrategy接口。</p><p>AbstractFileStrategy实现主要的文件上传、删除的处理流程，例如异常情况的判断，文件对象的封装等，但是真正上传的处理过程需要其子类来完成，因为不同的存储方案处理方式是不同的。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">BizException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">IconType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FilenameUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>exception<span class="token punctuation">.</span>code<span class="token punctuation">.</span></span><span class="token class-name">ExceptionCode</span><span class="token punctuation">.</span>BASE_VALID_PARAM<span class="token punctuation">;</span><span class="token comment">/** * 文件抽象策略处理类 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractFileStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">FileStrategy</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> FILE_SPLIT <span class="token operator">=</span> <span class="token string">"."</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">protected</span> <span class="token class-name">FileServerProperties</span> fileProperties<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">FileServerProperties<span class="token punctuation">.</span>Properties</span> properties<span class="token punctuation">;</span>    <span class="token comment">/**     * 上传文件     *     * @param multipartFile     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>FILE_SPLIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token class-name">BizException</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"缺少后缀名"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">isDelete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">submittedFileName</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">contextType</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">dataType</span><span class="token punctuation">(</span><span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">ext</span><span class="token punctuation">(</span><span class="token class-name">FilenameUtils</span><span class="token punctuation">.</span><span class="token function">getExtension</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token class-name">IconType</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setDate</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">uploadFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> multipartFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> file<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"e={}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token class-name">BizException</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"文件上传失败"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取下载地址前缀     */</span>    <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 具体类型执行上传操作     *     * @param file     * @param multipartFile     * @throws Exception     */</span>    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setDate</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setCreateMonth</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearMonthEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setCreateWeek</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearWeekEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setCreateDay</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsDateEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileDeleteDO</span> file <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token function">delete</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"删除文件失败"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 具体执行删除方法， 无需处理异常     */</span>    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">FileDeleteDO</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-3-LocalServiceImpl"><a href="#5-2-3-LocalServiceImpl" class="headerlink" title="5.2.3 LocalServiceImpl"></a>5.2.3 LocalServiceImpl</h4><p>LocalServiceImpl是AbstractFileStrategy的子类，负责处理存储策略为本地时的文件上传和删除操作。为了使程序能够动态选择具体的策略处理类，可以提供一个配置类，在配置类中定义LocalServiceImpl，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>storage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">AbstractFileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnProperty</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">EnableConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>UUID<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">;</span><span class="token comment">/** * 本地上传配置 */</span><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">FileServerProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"pinda.file.type"</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">"LOCAL"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocalAutoConfigure</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 本地文件策略处理类     */</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocalServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileStrategy</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            properties <span class="token operator">=</span> fileProperties<span class="token punctuation">.</span><span class="token function">getLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 上传文件         * @param file         * @param multipartFile         * @throws Exception         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>            <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//生成文件名</span>            <span class="token class-name">String</span> fileName <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>DOT <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//日期文件夹，例如：2020\04</span>            <span class="token class-name">String</span> relativePath <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// web服务器存放的绝对路径，例如：D:\\uploadFiles\\oss-file-service\\2020\\04</span>            <span class="token class-name">String</span> absolutePath <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> relativePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//目标输出文件</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> outFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>absolutePath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//向目标文件写入数据</span>            <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>FileUtils</span><span class="token punctuation">.</span><span class="token function">writeByteArrayToFile</span><span class="token punctuation">(</span>outFile<span class="token punctuation">,</span> multipartFile<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//替换掉windows环境的\路径</span>            url <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            url <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setFilename</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setRelativePath</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 文件删除         * @param file         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">FileDeleteDO</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> ioFile <span class="token operator">=</span>                 <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            file<span class="token punctuation">.</span><span class="token function">getRelativePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            file<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>FileUtils</span><span class="token punctuation">.</span><span class="token function">deleteQuietly</span><span class="token punctuation">(</span>ioFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的代码可以看到，在进行文件上传和文件删除时都会使用到配置文件中的配置项，关于本地文件处理策略的配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pinda</span><span class="token punctuation">:</span>  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> pd_files  <span class="token key atrule">nginx</span><span class="token punctuation">:</span>    <span class="token key atrule">ip</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span> <span class="token comment">#正式环境要将该ip设置成nginx对应的公网ip</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10000</span>   <span class="token comment">#正式环境需要将该ip设置成nginx对应的公网端口</span>  <span class="token key atrule">file</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> LOCAL    <span class="token key atrule">local</span><span class="token punctuation">:</span>      <span class="token key atrule">uriPrefix</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//$<span class="token punctuation">{</span>pinda.nginx.ip<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>pinda.nginx.port<span class="token punctuation">}</span>      <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> oss<span class="token punctuation">-</span>file<span class="token punctuation">-</span>service      <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> D<span class="token punctuation">:</span>\uploadFiles<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-4-FastDfsServiceImpl"><a href="#5-2-4-FastDfsServiceImpl" class="headerlink" title="5.2.4 FastDfsServiceImpl"></a>5.2.4 FastDfsServiceImpl</h4><p>FastDfsServiceImpl是AbstractFileStrategy的子类，负责处理存储策略为FastDFS时的文件上传和删除操作。为了使程序能够动态选择具体的策略处理类，可以提供一个配置类，在配置类中定义FastDfsServiceImpl，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>storage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tobato<span class="token punctuation">.</span>fastdfs<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>fdfs<span class="token punctuation">.</span></span><span class="token class-name">StorePath</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tobato<span class="token punctuation">.</span>fastdfs<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FastFileStorageClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">AbstractFileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnProperty</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">EnableConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token comment">/** * FastDFS配置 */</span><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">FileServerProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"pinda.file.type"</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">"FAST_DFS"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FastDfsAutoConfigure</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * FastDFS文件策略处理类     */</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FastDfsServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileStrategy</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Autowired</span>        <span class="token keyword">private</span> <span class="token class-name">FastFileStorageClient</span> storageClient<span class="token punctuation">;</span> <span class="token comment">//操作FastDFS的客户端</span>        <span class="token comment">/**         * 上传文件         * @param file         * @param multipartFile         * @throws Exception         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span>             <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>            <span class="token comment">//调用FastDFS客户端将文件上传到FastDFS</span>            <span class="token class-name">StorePath</span> storePath <span class="token operator">=</span>                 storageClient<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          multipartFile<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          file<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        file<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>fileProperties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>                         storePath<span class="token punctuation">.</span><span class="token function">getFullPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setGroup</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 文件删除         * @param file         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">FileDeleteDO</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//调用FastDFS客户端删除文件</span>            storageClient<span class="token punctuation">.</span><span class="token function">deleteFile</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面代码可以看到要使用FastDFS提供的客户端FastFileStorageClient来实现文件的上传和删除，这就需要在文件服务对应的配置文件中进行如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pinda</span><span class="token punctuation">:</span>  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> pd_files  <span class="token key atrule">nginx</span><span class="token punctuation">:</span>    <span class="token key atrule">ip</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span> <span class="token comment">#正式环境要将该ip设置成nginx对应的公网ip</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10000</span>  <span class="token comment">#正式环境需要将该ip设置成nginx对应的公网端口</span>  <span class="token key atrule">file</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> FAST_DFS      <span class="token key atrule">uriPrefix</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//172.17.0.115<span class="token punctuation">:</span>8188/ <span class="token comment">#存储类型为FAST_DFS时使用</span><span class="token comment">#FAST_DFS配置</span><span class="token key atrule">fdfs</span><span class="token punctuation">:</span>  <span class="token key atrule">soTimeout</span><span class="token punctuation">:</span> <span class="token number">1500</span>  <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">600</span>  <span class="token key atrule">thumb-image</span><span class="token punctuation">:</span>    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">150</span>  <span class="token key atrule">tracker-list</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 172.17.0.115<span class="token punctuation">:</span><span class="token number">22122</span>  <span class="token key atrule">pool</span><span class="token punctuation">:</span>    <span class="token comment">#从池中借出的对象的最大数目</span>    <span class="token key atrule">max-total</span><span class="token punctuation">:</span> <span class="token number">153</span>    <span class="token key atrule">max-wait-millis</span><span class="token punctuation">:</span> <span class="token number">102</span>    <span class="token key atrule">jmx-name-base</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">jmx-name-prefix</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-5-AliServiceImpl"><a href="#5-2-5-AliServiceImpl" class="headerlink" title="5.2.5 AliServiceImpl"></a>5.2.5 AliServiceImpl</h4><p>AliServiceImpl是AbstractFileStrategy的子类，负责处理存储策略为阿里云OSS时的文件上传和删除操作。为了使程序能够动态选择具体的策略处理类，可以提供一个配置类，在配置类中定义AliServiceImpl，可以参照阿里云OSS官方提供的示例代码(<a href="https://help.aliyun.com/document_detail/32011.html?spm=a2c4g.11186623.6.769.652763282djHGw)%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0%E5%92%8C%E5%88%A0%E9%99%A4%E3%80%82">https://help.aliyun.com/document_detail/32011.html?spm=a2c4g.11186623.6.769.652763282djHGw)进行文件的上传和删除。</a></p><p>具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>storage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span></span>OSS<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span></span><span class="token class-name">OSSClientBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">AbstractFileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnProperty</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">EnableConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>UUID<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">;</span><span class="token comment">/** * 阿里云OSS配置 */</span><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">FileServerProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"pinda.file.type"</span><span class="token punctuation">,</span> havingValue <span class="token operator">=</span> <span class="token string">"ALI"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliOssAutoConfigure</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 阿里云OSS文件策略处理类     */</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileStrategy</span> <span class="token punctuation">{</span>        <span class="token comment">/**         * 构建阿里云OSS客户端         * @return         */</span>        <span class="token keyword">private</span> <span class="token class-name">OSS</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            properties <span class="token operator">=</span> fileProperties<span class="token punctuation">.</span><span class="token function">getAli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                                    <span class="token function">build</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            properties<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            properties<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> prefix <span class="token operator">=</span> properties<span class="token punctuation">.</span>                    <span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                    <span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"https://"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"https://"</span> <span class="token operator">:</span> <span class="token string">"http://"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> prefix <span class="token operator">+</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span>                     properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceFirst</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 上传文件         * @param file         * @param multipartFile         * @throws Exception         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span>             <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>            <span class="token class-name">OSS</span> client <span class="token operator">=</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获得OSS空间名称</span>            <span class="token class-name">String</span> bucketName <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>client<span class="token punctuation">.</span><span class="token function">doesBucketExist</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//创建存储空间</span>                client<span class="token punctuation">.</span><span class="token function">createBucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//生成文件名</span>            <span class="token class-name">String</span> fileName <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>                 <span class="token class-name">StrPool</span><span class="token punctuation">.</span>DOT <span class="token operator">+</span>                 file<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//日期文件夹，例如：2020\04</span>            <span class="token class-name">String</span> relativePath <span class="token operator">=</span>                 <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                          <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>                 <span class="token function">ofPattern</span><span class="token punctuation">(</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// web服务器存放的相对路径</span>            <span class="token class-name">String</span> relativeFileName <span class="token operator">=</span> relativePath <span class="token operator">+</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH <span class="token operator">+</span> fileName<span class="token punctuation">;</span>            relativeFileName <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>relativeFileName<span class="token punctuation">,</span> <span class="token string">"\\\\"</span><span class="token punctuation">,</span>                                                <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            relativeFileName <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>relativeFileName<span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span>                                                <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//对象元数据</span>            <span class="token class-name">ObjectMetadata</span> metadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            metadata<span class="token punctuation">.</span><span class="token function">setContentDisposition</span><span class="token punctuation">(</span><span class="token string">"attachment;fileName="</span> <span class="token operator">+</span>                                            file<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            metadata<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getContextType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//上传请求对象</span>            <span class="token class-name">PutObjectRequest</span> request <span class="token operator">=</span>                 <span class="token keyword">new</span> <span class="token class-name">PutObjectRequest</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> relativeFileName<span class="token punctuation">,</span>                                      multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                      metadata<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//上传文件到阿里云OSS空间</span>            <span class="token class-name">PutObjectResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"result={}"</span><span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH <span class="token operator">+</span> relativeFileName<span class="token punctuation">;</span>            url <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            url <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 写入文件表</span>            file<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setFilename</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setRelativePath</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setGroup</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getETag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//关闭阿里云OSS客户端</span>            client<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/**         * 文件删除         * @param file         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">FileDeleteDO</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">OSS</span> client <span class="token operator">=</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获得OSS空间名称</span>            <span class="token class-name">String</span> bucketName <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 删除文件</span>            client<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getRelativePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>                                 <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//关闭阿里云OSS客户端</span>            client<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面代码可以看到要使用阿里云OSS提供的客户端OSS来实现文件的上传和删除，这就需要在文件服务对应的配置文件中进行如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pinda</span><span class="token punctuation">:</span>  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> pd_files  <span class="token key atrule">nginx</span><span class="token punctuation">:</span>    <span class="token key atrule">ip</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span> <span class="token comment">#正式环境要将该ip设置成nginx对应的公网ip</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10000</span>  <span class="token comment">#正式环境需要将该ip设置成nginx对应的公网端口</span>  <span class="token key atrule">file</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> ALI    <span class="token key atrule">ali</span><span class="token punctuation">:</span>      <span class="token comment"># 请填写自己的阿里云存储配置</span>      <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> bladex<span class="token punctuation">-</span>loan      <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//oss<span class="token punctuation">-</span>cn<span class="token punctuation">-</span>qingdao.aliyuncs.com      <span class="token key atrule">access-key-id</span><span class="token punctuation">:</span> LTAI4FhtimFAiz6iLGJSiJui        <span class="token key atrule">access-key-secret</span><span class="token punctuation">:</span> SsU15qaPwpF1x5xMqwc0XzGuY92fnc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-接口开发-上传附件"><a href="#5-3-接口开发-上传附件" class="headerlink" title="5.3 接口开发-上传附件"></a>5.3 接口开发-上传附件</h3><h4 id="5-3-1-接口文档"><a href="#5-3-1-接口文档" class="headerlink" title="5.3.1 接口文档"></a>5.3.1 接口文档</h4><p>上传附件接口要完成的操作主要有两个：</p><ul><li>将客户端提交的文件上传到指定存储位置（具体存储位置由配置文件配置的存储策略确定）</li><li>将上传的文件信息保存到数据库的pd_attachment表中</li></ul><p>接口文档如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200427211221746.png" alt="image-20200427211221746"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428121728825.png" alt="image-20200428121728825"></p><h4 id="5-3-2-代码实现"><a href="#5-3-2-代码实现" class="headerlink" title="5.3.2 代码实现"></a>5.3.2 代码实现</h4><p>第一步：创建AttachmentController并提供文件上传方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span></span><span class="token class-name">Wrappers</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">SFunction</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span></span><span class="token class-name">Page</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentRemoveDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FilePageReqDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Attachment</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">AttachmentService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">BizAssert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span></span><span class="token class-name">MapUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">ArrayUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>exception<span class="token punctuation">.</span>code<span class="token punctuation">.</span></span><span class="token class-name">ExceptionCode</span><span class="token punctuation">.</span>BASE_VALID_PARAM<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">.</span>groupingBy<span class="token punctuation">;</span><span class="token comment">/** * 附件处理控制器 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/attachment"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"附件"</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token string">"附件"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AttachmentController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">AttachmentService</span> attachmentService<span class="token punctuation">;</span>    <span class="token comment">/**     * 上传附件     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"附件上传"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"附件上传"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"isSingle"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"是否单文件"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"boolean"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件id"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bizId"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"业务id"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bizType"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"业务类型"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"附件"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"MultipartFile"</span><span class="token punctuation">,</span> allowMultiple <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AttachmentDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">upload</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"isSingle"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"false"</span><span class="token punctuation">)</span> <span class="token class-name">Boolean</span> isSingle<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizId"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizType"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> bizType<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 忽略路径字段,只处理文件类型</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span>BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"请求中必须至少包含一个有效文件"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">AttachmentDTO</span> attachment <span class="token operator">=</span> attachmentService<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>                                                             id<span class="token punctuation">,</span>                                                             bizType<span class="token punctuation">,</span>                                                             bizId<span class="token punctuation">,</span>                                                             isSingle<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>attachment<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建AttachmentService接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span></span><span class="token class-name">Page</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FilePageReqDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Attachment</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 附件业务接口 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AttachmentService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 上传附件     *     * @param file 文件     * @param id 附件id     * @param bizType 业务类型     * @param bizId 业务id     * @param isSingle 是否单个文件     * @return     */</span>    <span class="token class-name">AttachmentDTO</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span> <span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> bizType<span class="token punctuation">,</span>                          <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> isSingle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建AttachmentServiceImpl实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span></span><span class="token class-name">Wrappers</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span>id<span class="token punctuation">.</span></span><span class="token class-name">IdGenerate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span></span><span class="token class-name">Wraps</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LbqWrapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>dozer<span class="token punctuation">.</span></span><span class="token class-name">DozerUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">BizException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">AttachmentMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FilePageReqDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Attachment</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">DataType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">AttachmentService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">ArrayUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">;</span><span class="token comment">/** * 附件业务实现类 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AttachmentServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AttachmentMapper</span><span class="token punctuation">,</span> <span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">AttachmentService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">IdGenerate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> idGenerate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">DozerUtils</span> dozer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileStrategy</span> fileStrategy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileServerProperties</span> fileProperties<span class="token punctuation">;</span>    <span class="token comment">/**     * 上传附件     *     * @param multipartFile 文件     * @param id 附件id     * @param bizType 业务类型     * @param bizId 业务id     * @param isSingle 是否单个文件     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">AttachmentDTO</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">,</span> <span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> bizType<span class="token punctuation">,</span> <span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> isSingle<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//根据业务类型来判断是否生成业务id</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>bizType<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bizId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            bizId <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>idGenerate<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> fileStrategy<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Attachment</span> attachment <span class="token operator">=</span> dozer<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token class-name">Attachment</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        attachment<span class="token punctuation">.</span><span class="token function">setBizId</span><span class="token punctuation">(</span>bizId<span class="token punctuation">)</span><span class="token punctuation">;</span>        attachment<span class="token punctuation">.</span><span class="token function">setBizType</span><span class="token punctuation">(</span>bizType<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setDate</span><span class="token punctuation">(</span>attachment<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isSingle<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizId</span><span class="token punctuation">,</span> bizId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizType</span><span class="token punctuation">,</span> bizType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//当前端传递了文件id时，修改这条记录</span>            attachment<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>attachment<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            attachment<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>idGenerate<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>attachment<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">AttachmentDTO</span> dto <span class="token operator">=</span> dozer<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>attachment<span class="token punctuation">,</span> <span class="token class-name">AttachmentDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setDate</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setCreateMonth</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearMonthEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setCreateWeek</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearWeekEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setCreateDay</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsDateEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-3-3-接口测试"><a href="#5-3-3-接口测试" class="headerlink" title="5.3.3 接口测试"></a>5.3.3 接口测试</h4><p>第一步：启动Nacos配置中心，pd-file-server.yml配置内容如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pinda</span><span class="token punctuation">:</span>  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> pd_files  <span class="token key atrule">nginx</span><span class="token punctuation">:</span>    <span class="token key atrule">ip</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span> <span class="token comment">#正式环境要将该ip设置成nginx对应的公网ip</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10000</span>  <span class="token comment">#正式环境需要将该ip设置成nginx对应的公网端口</span>  <span class="token key atrule">swagger</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">docket</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>        <span class="token key atrule">title</span><span class="token punctuation">:</span> 文件服务        <span class="token key atrule">base-package</span><span class="token punctuation">:</span> com.itheima.pinda.file.controller  <span class="token key atrule">file</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> LOCAL <span class="token comment"># LOCAL ALI MINIO FAST_DFS  </span>    <span class="token key atrule">local</span><span class="token punctuation">:</span>      <span class="token key atrule">uriPrefix</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//$<span class="token punctuation">{</span>pinda.nginx.ip<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>pinda.nginx.port<span class="token punctuation">}</span>      <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> oss<span class="token punctuation">-</span>file<span class="token punctuation">-</span>service      <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> D<span class="token punctuation">:</span>\uploadFiles    <span class="token key atrule">ali</span><span class="token punctuation">:</span>      <span class="token comment"># 请填写自己的阿里云存储配置</span>      <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> bladex<span class="token punctuation">-</span>loan      <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//oss<span class="token punctuation">-</span>cn<span class="token punctuation">-</span>qingdao.aliyuncs.com      <span class="token key atrule">access-key-id</span><span class="token punctuation">:</span> LTAI4FhtimFAiz6iLGJSiJui        <span class="token key atrule">access-key-secret</span><span class="token punctuation">:</span> SsU15qaPwpF1x5xMqwc0XzGuY92fnc<span class="token comment">#FAST_DFS配置</span><span class="token key atrule">fdfs</span><span class="token punctuation">:</span>  <span class="token key atrule">soTimeout</span><span class="token punctuation">:</span> <span class="token number">1500</span>  <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">600</span>  <span class="token key atrule">thumb-image</span><span class="token punctuation">:</span>    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">150</span>  <span class="token key atrule">tracker-list</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 111.231.76.210<span class="token punctuation">:</span><span class="token number">22122</span>  <span class="token key atrule">pool</span><span class="token punctuation">:</span>    <span class="token comment">#从池中借出的对象的最大数目</span>    <span class="token key atrule">max-total</span><span class="token punctuation">:</span> <span class="token number">153</span>    <span class="token key atrule">max-wait-millis</span><span class="token punctuation">:</span> <span class="token number">102</span>    <span class="token key atrule">jmx-name-base</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">jmx-name-prefix</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8765</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问接口文档，地址为<a href="http://localhost:8765/doc.html">http://localhost:8765/doc.html</a></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428122508460.png" alt="image-20200428122508460"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428122607756.png" alt="image-20200428122607756"></p><p>可以看到上传的文件已经保存到了本地磁盘：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428122743952.png" alt="image-20200428122743952"></p><p>同时上传的文件信息也已经保存到了pd_attachment表中：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428122912010.png" alt="image-20200428122912010"></p><p>可以通过Nginx提供的Http服务来访问上传的文件：</p><p><a href="http://192.168.3.19:10000/oss-file-service/2020/04/527e00c7-245c-4848-ac2c-5245b4823e3a.zip">http://192.168.3.19:10000/oss-file-service/2020/04/527e00c7-245c-4848-ac2c-5245b4823e3a.zip</a></p><p>注：可以修改Nacos中的pd-file-server.yml配置文件，将存储策略改为ALI和FAST_DFS来测试文件的存储策略是否发生了变化。</p><h3 id="5-4-接口开发-根据id删除附件"><a href="#5-4-接口开发-根据id删除附件" class="headerlink" title="5.4 接口开发-根据id删除附件"></a>5.4 接口开发-根据id删除附件</h3><h4 id="5-4-1-接口文档"><a href="#5-4-1-接口文档" class="headerlink" title="5.4.1 接口文档"></a>5.4.1 接口文档</h4><p>根据id删除附件接口要完成的操作主要有两个：</p><ul><li>将客户端上传的文件从指定存储位置（具体存储位置由配置文件配置的存储策略确定）删除</li><li>将文件信息从数据库的pd_attachment表中删除</li></ul><p>根据id删除附件功能的接口文档如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428145846716.png" alt="image-20200428145846716"></p><h4 id="5-4-2-代码实现"><a href="#5-4-2-代码实现" class="headerlink" title="5.4.2 代码实现"></a>5.4.2 代码实现</h4><p>第一步：在AttachmentController中提供文件删除的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"删除文件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"删除文件"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件ids"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"array"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DeleteMapping</span><span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>    attachmentService<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在AttachmentService接口中扩展remove方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 删除附件** @param ids*/</span><span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：在AttachmentServiceImpl实现类中实现remove方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/***根据id删除附件* @param ids*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//查询数据库</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                                       <span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//删除数据库中的记录</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">removeByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//对象格式处理</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">&gt;</span></span> fileDeleteDOList <span class="token operator">=</span>        list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fi<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">FileDeleteDO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                          <span class="token punctuation">.</span><span class="token function">relativePath</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getRelativePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//文件在服务器的相对路径</span>                          <span class="token punctuation">.</span><span class="token function">fileName</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//唯一文件名</span>                          <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//fastDFS返回的组 用于FastDFS</span>                          <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//fastdfs 的路径</span>                          <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//删除文件</span>    fileStrategy<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>fileDeleteDOList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-4-3-接口测试"><a href="#5-4-3-接口测试" class="headerlink" title="5.4.3 接口测试"></a>5.4.3 接口测试</h4><p>第一步：启动Nacos配置中心</p><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问接口文档，地址为<a href="http://localhost:8765/doc.html">http://localhost:8765/doc.html</a></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428154444350.png" alt="image-20200428154444350"></p><p>可以看到pd_attachment表中对应的记录已经删除掉了，对应的文件也已经被删除掉了。</p><h3 id="5-5-接口开发-根据业务类型-业务id删除附件"><a href="#5-5-接口开发-根据业务类型-业务id删除附件" class="headerlink" title="5.5 接口开发-根据业务类型/业务id删除附件"></a>5.5 接口开发-根据业务类型/业务id删除附件</h3><h4 id="5-5-1-接口文档"><a href="#5-5-1-接口文档" class="headerlink" title="5.5.1 接口文档"></a>5.5.1 接口文档</h4><p>根据业务类型/业务id删除附件接口要完成的操作主要有两个：</p><ul><li>将客户端上传的文件从指定存储位置（具体存储位置由配置文件配置的存储策略确定）删除</li><li>将文件信息从数据库的pd_attachment表中删除</li></ul><p>根据业务类型/业务id删除附件功能的接口文档如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428160024666.png" alt="image-20200428160024666"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428160221111.png" alt="image-20200428160221111"></p><h4 id="5-5-2-代码实现"><a href="#5-5-2-代码实现" class="headerlink" title="5.5.2 代码实现"></a>5.5.2 代码实现</h4><p>第一步：在AttachmentController中提供根据业务类型/业务id删除文件的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据业务类型或业务id删除文件"</span><span class="token punctuation">,</span>               notes <span class="token operator">=</span> <span class="token string">"根据业务类型或业务id删除文件"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/biz"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeByBizIdAndBizType</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@RequestBody</span>                                         <span class="token class-name">AttachmentRemoveDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>    attachmentService<span class="token punctuation">.</span><span class="token function">removeByBizIdAndBizType</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getBizId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                               dto<span class="token punctuation">.</span><span class="token function">getBizType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在AttachmentService接口中扩展removeByBizIdAndBizType方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务id/业务类型删除附件** @param bizId* @param bizType*/</span><span class="token keyword">void</span> <span class="token function">removeByBizIdAndBizType</span><span class="token punctuation">(</span><span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizType<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：在AttachmentServiceImpl实现类中实现removeByBizIdAndBizType方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务id和业务类型删除附件** @param bizId* @param bizType*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeByBizIdAndBizType</span><span class="token punctuation">(</span><span class="token class-name">String</span> bizId<span class="token punctuation">,</span> <span class="token class-name">String</span> bizType<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//根据业务类和业务id查询数据库</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>        <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizId</span><span class="token punctuation">,</span> bizId<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizType</span><span class="token punctuation">,</span> bizType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//根据id删除文件</span>    <span class="token function">remove</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span>        <span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-5-3-接口测试"><a href="#5-5-3-接口测试" class="headerlink" title="5.5.3 接口测试"></a>5.5.3 接口测试</h4><p>第一步：启动Nacos配置中心</p><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问接口文档，地址为<a href="http://localhost:8765/doc.html">http://localhost:8765/doc.html</a></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428165332463.png" alt="image-20200428165332463"></p><p>可以看到pd_attachment表中对应的记录已经删除掉了，对应的文件也已经被删除掉了。</p><h3 id="5-6-接口开发-根据文件id打包下载附件"><a href="#5-6-接口开发-根据文件id打包下载附件" class="headerlink" title="5.6 接口开发-根据文件id打包下载附件"></a>5.6 接口开发-根据文件id打包下载附件</h3><h4 id="5-6-1-接口文档"><a href="#5-6-1-接口文档" class="headerlink" title="5.6.1 接口文档"></a>5.6.1 接口文档</h4><p>根据文件id打包下载附件接口分两种情况进行下载：</p><p>1、如果客户端提交的文件id只有一个，则下载对应的原始文件</p><p>2、如果客户端提交的文件id有多个，则将对应的多个原始文件进行压缩，最终下载的是压缩后的文件</p><p>接口文档如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428171359800.png" alt="image-20200428171359800"></p><h4 id="5-6-2-代码实现"><a href="#5-6-2-代码实现" class="headerlink" title="5.6.2 代码实现"></a>5.6.2 代码实现</h4><p>第一步：在AttachmentController中提供根据文件id打包下载文件的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 下载一个文件或多个文件打包下载** @param ids      文件id* @param response* @throws Exception*/</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据文件id打包下载"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据附件id下载多个打包的附件"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/download"</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">"application/octet-stream"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件id 数组"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span>    <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">,</span>                      BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"附件id不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据文件id下载文件</span>    attachmentService<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：中AttachmentService接口中扩展download方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据文件id下载附件** @param request* @param response* @param ids* @throws Exception*/</span><span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>               <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>               <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：在AttachmentServiceImpl实现类中实现download方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">FileBiz</span> fileBiz<span class="token punctuation">;</span><span class="token comment">/*** 根据文件id下载文件* @param request* @param response* @param ids* @throws Exception*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>                      <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>                      <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token comment">//根据文件id查询数据库</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span>         <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">listByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">down</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*** 文件下载* @param request* @param response* @param list* @throws Exception*/</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>                   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token class-name">BizException</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">"您下载的文件不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDO</span><span class="token punctuation">&gt;</span></span> fileDOList <span class="token operator">=</span>         list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token class-name">FileDO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                 <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                 <span class="token punctuation">.</span><span class="token function">submittedFileName</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                 <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                 <span class="token punctuation">.</span><span class="token function">dataType</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                 <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    fileBiz<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span>fileDOList<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：创建FileBiz，统一进行文件下载</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>biz</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">DataType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">ZipUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">NumberHelper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token comment">/** * 文件和附件的一些公共方法 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileBiz</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 构建新文件名称     * @param filename     * @param order     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">buildNewFileName</span><span class="token punctuation">(</span><span class="token class-name">String</span> filename<span class="token punctuation">,</span> <span class="token class-name">Integer</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">strBuilder</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span>            <span class="token function">insert</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"("</span> <span class="token operator">+</span> order <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 下载文件     * @param list     * @param request     * @param response     * @throws Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDO</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span>                      <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>                      <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> fileSize <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> file <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>            <span class="token operator">!</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>             <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">NumberHelper</span><span class="token punctuation">.</span><span class="token function">intValueOf0</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> extName <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            extName <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>extName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>                                   <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>extName<span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>                 <span class="token string">"等.zip"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> duplicateFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">//过滤不符合要求的文件</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> file <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment">//循环处理相同的文件名</span>                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>                    <span class="token class-name">String</span> submittedFileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>duplicateFile<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            duplicateFile<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">,</span> duplicateFile<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            duplicateFile<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        submittedFileName <span class="token operator">=</span> <span class="token function">buildNewFileName</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">,</span> duplicateFile<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>submittedFileName<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ZipUtils</span><span class="token punctuation">.</span><span class="token function">zipFilesByInputStream</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>fileSize<span class="token punctuation">)</span><span class="token punctuation">,</span> extName<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-6-3-接口测试"><a href="#5-6-3-接口测试" class="headerlink" title="5.6.3 接口测试"></a>5.6.3 接口测试</h4><p>第一步：启动Nacos配置中心</p><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问接口文档，地址为<a href="http://localhost:8765/doc.html">http://localhost:8765/doc.html</a></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428192949971.png" alt="image-20200428192949971"></p><h3 id="5-7-接口开发-根据业务类型-业务id打包下载"><a href="#5-7-接口开发-根据业务类型-业务id打包下载" class="headerlink" title="5.7 接口开发-根据业务类型/业务id打包下载"></a>5.7 接口开发-根据业务类型/业务id打包下载</h3><h4 id="5-7-1-接口文档"><a href="#5-7-1-接口文档" class="headerlink" title="5.7.1 接口文档"></a>5.7.1 接口文档</h4><p>根据业务类型/业务id打包下载文件接口分两种情况进行下载：</p><p>1、如果根据业务类型和业务id匹配到的文件只有一个，则下载对应的原始文件</p><p>2、如果根据业务类型和业务id匹配到的文件有多个，则将对应的多个原始文件进行压缩，最终下载的是压缩后的文件</p><p>接口文档如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428193858972.png" alt="image-20200428193858972"></p><h4 id="5-7-2-代码实现"><a href="#5-7-2-代码实现" class="headerlink" title="5.7.2 代码实现"></a>5.7.2 代码实现</h4><p>第一步：在AttachmentController中提供根据业务类型和业务id打包下载的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务类型或者业务id其中之一，或者2个同时打包下载文件** @param bizIds   业务id* @param bizTypes 业务类型**/</span><span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bizIds[]"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"业务id数组"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"array"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bizTypes[]"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"业务类型数组"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"array"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据业务类型/业务id打包下载"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据业务id下载一个文件或多个文件打包下载"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/download/biz"</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">"application/octet-stream"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadByBiz</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizIds[]"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">,</span>    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizTypes[]"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span>    <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bizTypes<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bizIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"附件业务id和业务类型不能同时为空"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    attachmentService<span class="token punctuation">.</span><span class="token function">downloadByBiz</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> bizTypes<span class="token punctuation">,</span> bizIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在AttachmentService接口中扩展downloadByBiz方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务id和业务类型下载附件** @param request* @param response* @param bizTypes* @param bizIds* @throws Exception*/</span><span class="token keyword">void</span> <span class="token function">downloadByBiz</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>                    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：在AttachmentServiceImpl实现类中实现downloadByBiz方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务id和业务类型下载附件** @param request* @param response* @param bizTypes* @param bizIds* @throws Exception*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadByBiz</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>        <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizType</span><span class="token punctuation">,</span> bizTypes<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizId</span><span class="token punctuation">,</span> bizIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">down</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-7-3-接口测试"><a href="#5-7-3-接口测试" class="headerlink" title="5.7.3 接口测试"></a>5.7.3 接口测试</h4><p>第一步：启动Nacos配置中心</p><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问接口文档，地址为<a href="http://localhost:8765/doc.html">http://localhost:8765/doc.html</a></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200428194415419.png" alt="image-20200428194415419"></p><h3 id="5-8-导入其他接口代码"><a href="#5-8-导入其他接口代码" class="headerlink" title="5.8 导入其他接口代码"></a>5.8 导入其他接口代码</h3><p>本课程重点讲解文件的上传、下载、文件处理策略的实现，对于纯数据库操作相关的功能不再作为重点讲解，此处我们直接导入这些代码即可。</p><h4 id="5-8-1-接口导入-分页查询附件"><a href="#5-8-1-接口导入-分页查询附件" class="headerlink" title="5.8.1 接口导入-分页查询附件"></a>5.8.1 接口导入-分页查询附件</h4><p>接口文档：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200430152747062.png" alt="image-20200430152747062"></p><p>AttachmentController代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 分页查询附件**/</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分页查询附件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"分页查询附件"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"current"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"当前页"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"size"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"每页显示几条"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/page"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IPage</span><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">FilePageReqDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    attachmentService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AttachmentService接口：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 查询附件分页数据** @param page* @param data* @return*/</span><span class="token class-name">IPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> page<span class="token punctuation">,</span> <span class="token class-name">FilePageReqDTO</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AttachmentServiceImpl类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 查询附件分页数据** @param page* @param data* @return*/</span><span class="token keyword">public</span> <span class="token class-name">IPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> page<span class="token punctuation">,</span> <span class="token class-name">FilePageReqDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Attachment</span> attachment <span class="token operator">=</span> dozer<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token class-name">Attachment</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ${ew.customSqlSegment} 语法一定要手动eq like 等 不能用lbQ!</span>    <span class="token class-name">LbqWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Attachment</span><span class="token punctuation">&gt;</span></span><span class="token function">lbQ</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">,</span> attachment<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizType</span><span class="token punctuation">,</span> attachment<span class="token punctuation">.</span><span class="token function">getBizType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getBizId</span><span class="token punctuation">,</span> attachment<span class="token punctuation">.</span><span class="token function">getBizId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getDataType</span><span class="token punctuation">,</span> attachment<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">Attachment</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-8-2-接口导入-根据业务类型-业务id查询附件"><a href="#5-8-2-接口导入-根据业务类型-业务id查询附件" class="headerlink" title="5.8.2 接口导入-根据业务类型/业务id查询附件"></a>5.8.2 接口导入-根据业务类型/业务id查询附件</h4><p>接口文档：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200430153452092.png" alt="image-20200430153452092"></p><p>AttachmentController代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"查询附件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"查询附件"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60103</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"文件id为空"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAttachment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizTypes"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"bizIds"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//不能同时为空</span>    <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bizTypes<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bizIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"业务类型不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>attachmentService<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>bizTypes<span class="token punctuation">,</span> bizIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AttachmentService接口：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务类型和业务id查询附件** @param bizTypes* @param bizIds* @return*/</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AttachmentServiceImpl类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 根据业务类型和业务id查询附件** @param bizTypes* @param bizIds* @return*/</span><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AttachmentResultDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizTypes<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bizIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>bizTypes<span class="token punctuation">,</span> bizIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-9-导入网盘服务接口"><a href="#5-9-导入网盘服务接口" class="headerlink" title="5.9 导入网盘服务接口"></a>5.9 导入网盘服务接口</h3><p>前面我们已经完成了文件服务中的附件服务相关接口的开发，附件服务最终是将上传的文件信息保存在pd_attachment表中。</p><p>本小节要完成的是文件服务中的网盘服务功能，此功能最终是将上传的文件信息保存在pd_file表中。网盘服务和附件服务非常类似，只是多了一个文件夹的概念。</p><h4 id="5-9-1-导入FileController"><a href="#5-9-1-导入FileController" class="headerlink" title="5.9.1 导入FileController"></a>5.9.1 导入FileController</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>dozer<span class="token punctuation">.</span></span><span class="token class-name">DozerUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FilePageReqDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileUpdateDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderSaveDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>manager<span class="token punctuation">.</span></span><span class="token class-name">FileRestManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>log<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SysLog</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Validated</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Valid</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotNull</span><span class="token punctuation">;</span><span class="token comment">/** * 文件前端控制器 */</span><span class="token annotation punctuation">@Validated</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/file"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"文件表"</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token string">"文件表"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileService</span> fileService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileRestManager</span> fileRestManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">DozerUtils</span> dozerUtils<span class="token punctuation">;</span>    <span class="token comment">/**     * 查询单个文件信息     *     * @param id     * @return     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"查询文件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"查询文件"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> fileService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span><span class="token function">getIsDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取文件分页     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分页查询文件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"获取文件分页"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"current"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"当前页"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"size"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"每页显示几条"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/page"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IPage</span><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">FilePageReqDTO</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>fileRestManager<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 上传文件     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"上传文件"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"上传文件 "</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60102</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"文件夹为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"source"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件来源"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户id"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"folderId"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件夹id"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"long"</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"附件"</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">"MultipartFile"</span><span class="token punctuation">,</span> allowMultiple <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/upload"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">upload</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">"文件夹不能为空"</span><span class="token punctuation">)</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"source"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"inner"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> source<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"folderId"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> folderId<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> simpleFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//1，先将文件存在本地,并且生成文件名</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"contentType={}, name={} , sfname={}"</span><span class="token punctuation">,</span> simpleFile<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> simpleFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> simpleFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 忽略路径字段,只处理文件类型</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>simpleFile<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"文件为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> fileService<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>simpleFile<span class="token punctuation">,</span> folderId<span class="token punctuation">,</span> source<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 保存文件夹     */</span>    <span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60000</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"文件夹为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60001</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"文件夹名称为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60002</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"父文件夹为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"新增文件夹"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"新增文件夹"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FolderDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveFolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">FolderSaveDTO</span> folderSaveDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//2，获取身份</span>        <span class="token class-name">FolderDTO</span> folder <span class="token operator">=</span> fileService<span class="token punctuation">.</span><span class="token function">saveFolder</span><span class="token punctuation">(</span>folderSaveDto<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 修改文件、文件夹信息     *     * @param fileUpdateDTO     * @return     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"修改文件/文件夹名称"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"修改文件/文件夹名称"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">60100</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"文件为空"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>PUT<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">FileUpdateDTO</span> fileUpdateDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 判断文件名是否有 后缀</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>fileUpdateDTO<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">File</span> oldFile <span class="token operator">=</span> fileService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>fileUpdateDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFile<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>fileUpdateDTO<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>oldFile<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                fileUpdateDTO<span class="token punctuation">.</span><span class="token function">setSubmittedFileName</span><span class="token punctuation">(</span>fileUpdateDTO<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> oldFile<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> dozerUtils<span class="token punctuation">.</span><span class="token function">map2</span><span class="token punctuation">(</span>fileUpdateDTO<span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 根据Ids进行文件删除     *     * @param ids     * @return     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据Ids进行文件删除"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据Ids进行文件删除  "</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/ids"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>fileService<span class="token punctuation">.</span><span class="token function">removeList</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 下载一个文件或多个文件打包下载     *     * @param ids     * @param response     * @throws Exception     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"下载一个文件或多个文件打包下载"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"下载一个文件或多个文件打包下载"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/download"</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">"application/octet-stream"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件id 数组"</span><span class="token punctuation">)</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"ids[]"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span>            <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        fileRestManager<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> ids<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-9-2-导入StatisticsController"><a href="#5-9-2-导入StatisticsController" class="headerlink" title="5.9.2 导入StatisticsController"></a>5.9.2 导入StatisticsController</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileOverviewDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 文件统计接口 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/statistics"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"Statistics"</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token string">"统计接口"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatisticsController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileService</span> fileService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"云盘首页数据概览"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"云盘首页数据概览"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/overview"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileOverviewDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">overview</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>fileService<span class="token punctuation">.</span><span class="token function">findOverview</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"按照类型，统计各种类型的 大小和数量"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"按照类型，统计当前登录人各种类型的大小和数量"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/type"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllByDataType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>fileService<span class="token punctuation">.</span><span class="token function">findAllByDataType</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"按照时间统计各种类型的文件的数量和大小"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"按照时间统计各种类型的文件的数量和大小 不指定时间，默认查询一个月"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findNumAndSizeToTypeByDate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">,</span>                                                              <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"startTime"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span>                                                              <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"endTime"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>fileService<span class="token punctuation">.</span><span class="token function">findNumAndSizeToTypeByDate</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-9-3-导入FileRestManager"><a href="#5-9-3-导入FileRestManager" class="headerlink" title="5.9.3 导入FileRestManager"></a>5.9.3 导入FileRestManager</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>manager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LambdaQueryWrapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">QueryWrapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">IPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">BaseContextHandler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">FileConstants</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FilePageReqDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>DEF_PARENT_ID<span class="token punctuation">;</span><span class="token comment">/** * 文件 公共代码 管理类 */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileRestManager</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileService</span> fileService<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">IPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token class-name">IPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> page<span class="token punctuation">,</span> <span class="token class-name">FilePageReqDTO</span> filePageReq<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//类型和文件夹id同时为null时， 表示查询 全部文件</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>filePageReq<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> filePageReq<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            filePageReq<span class="token punctuation">.</span><span class="token function">setFolderId</span><span class="token punctuation">(</span>DEF_PARENT_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> lambdaQuery <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getIsDelete</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>filePageReq<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getDataType</span><span class="token punctuation">,</span> filePageReq<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>filePageReq<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getFolderId</span><span class="token punctuation">,</span> filePageReq<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>filePageReq<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">,</span> filePageReq<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        query<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"case when %s='DIR' THEN 1 else 0 end"</span><span class="token punctuation">,</span> <span class="token class-name">FileConstants</span><span class="token punctuation">.</span>DATA_TYPE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lambdaQuery<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getCreateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> page<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        userId <span class="token operator">=</span> userId <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> userId <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">BaseContextHandler</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> userId<span class="token punctuation">;</span>        fileService<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> ids<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-9-4-导入FileService"><a href="#5-9-4-导入FileService" class="headerlink" title="5.9.4 导入FileService"></a>5.9.4 导入FileService</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileAttrDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileOverviewDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderSaveDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 业务接口 * 文件表 * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FileService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 保存文件夹     *     * @param folderSaveDto 文件夹     * @return     */</span>    <span class="token class-name">FolderDTO</span> <span class="token function">saveFolder</span><span class="token punctuation">(</span><span class="token class-name">FolderSaveDTO</span> folderSaveDto<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据文件id下载文件，并统计下载次数     *     * @param request  请求     * @param response 响应     * @param ids      文件id集合     * @param userId   用户id     * @throws Exception     */</span>    <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>                  <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据文件id和用户id 删除文件或者文件夹     *     * @param userId 用户id     * @param ids    文件id集合     * @return     */</span>    <span class="token class-name">Boolean</span> <span class="token function">removeList</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据文件夹id查询     *     * @param folderId     * @return     */</span>    <span class="token class-name">FileAttrDO</span> <span class="token function">getFileAttrDo</span><span class="token punctuation">(</span><span class="token class-name">Long</span> folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 文件上传     *     * @param simpleFile 文件     * @param folderId   文件夹id     * @return     */</span>    <span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> simpleFile<span class="token punctuation">,</span> <span class="token class-name">Long</span> folderId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * 文件上传 * * @param simpleFile * @param folderId * @param source * @param userId * @return */</span><span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> simpleFile<span class="token punctuation">,</span> <span class="token class-name">Long</span> folderId<span class="token punctuation">,</span> <span class="token class-name">String</span> source<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 首页概览     *     * @param userId     * @param startTime     * @param endTime     * @return     */</span>    <span class="token class-name">FileOverviewDTO</span> <span class="token function">findOverview</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 首页个人文件发展概览     *     * @param userId     * @param startTime     * @param endTime     * @return     */</span>    <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findAllByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 按照 数据类型分类查询 当前人的所有文件的数量和大小     *     * @param userId     * @return     */</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllByDataType</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 查询下载排行前20的文件     *     * @param userId     * @return     */</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">downTop20</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据日期查询，特定类型的数量和大小     *     * @param userId     * @param startTime     * @param endTime     * @return     */</span>    <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findNumAndSizeToTypeByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据日期查询下载大小     *     * @param userId     * @param startTime     * @param endTime     * @return     */</span>    <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findDownSizeByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span>                                            <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-9-5-导入FileServiceImpl"><a href="#5-9-5-导入FileServiceImpl" class="headerlink" title="5.9.5 导入FileServiceImpl"></a>5.9.5 导入FileServiceImpl</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span></span><span class="token class-name">Wrappers</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span></span><span class="token class-name">Wraps</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>database<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>update<span class="token punctuation">.</span></span><span class="token class-name">LbuWrapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>dozer<span class="token punctuation">.</span></span><span class="token class-name">DozerUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>biz<span class="token punctuation">.</span></span><span class="token class-name">FileBiz</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">FileMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileAttrDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileDeleteDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileOverviewDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">FolderSaveDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">DataType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">IconType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">BizAssert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">ArrayUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Stream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>exception<span class="token punctuation">.</span>code<span class="token punctuation">.</span></span><span class="token class-name">ExceptionCode</span><span class="token punctuation">.</span>BASE_VALID_PARAM<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>DEF_PARENT_ID<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>DEF_ROOT_PATH<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">.</span>groupingBy<span class="token punctuation">;</span><span class="token comment">/** * 业务实现类 * 文件表 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileMapper</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">DozerUtils</span> dozerUtils<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileBiz</span> fileBiz<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">FileStrategy</span> fileStrategy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> simpleFile<span class="token punctuation">,</span> <span class="token class-name">Long</span> folderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">FileAttrDO</span> fileAttrDO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFileAttrDo</span><span class="token punctuation">(</span>folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> treePath <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getTreePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> folderName <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getFolderName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span> grade <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> fileStrategy<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>simpleFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setFolderId</span><span class="token punctuation">(</span>folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setFolderName</span><span class="token punctuation">(</span>folderName<span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setGrade</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setTreePath</span><span class="token punctuation">(</span>treePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> file<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">File</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> simpleFile<span class="token punctuation">,</span> <span class="token class-name">Long</span> folderId<span class="token punctuation">,</span> <span class="token class-name">String</span> source<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">FileAttrDO</span> fileAttrDO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFileAttrDo</span><span class="token punctuation">(</span>folderId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> treePath <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getTreePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> folderName <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getFolderName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Integer</span> grade <span class="token operator">=</span> fileAttrDO<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> file <span class="token operator">=</span> fileStrategy<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>simpleFile<span class="token punctuation">)</span><span class="token punctuation">;</span>file<span class="token punctuation">.</span><span class="token function">setFolderId</span><span class="token punctuation">(</span>folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>file<span class="token punctuation">.</span><span class="token function">setFolderName</span><span class="token punctuation">(</span>folderName<span class="token punctuation">)</span><span class="token punctuation">;</span>file<span class="token punctuation">.</span><span class="token function">setGrade</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">;</span>file<span class="token punctuation">.</span><span class="token function">setTreePath</span><span class="token punctuation">(</span>treePath<span class="token punctuation">)</span><span class="token punctuation">;</span>file<span class="token punctuation">.</span><span class="token function">setSource</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>userId <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>file<span class="token punctuation">.</span><span class="token function">setCreateUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> file<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FileAttrDO</span> <span class="token function">getFileAttrDo</span><span class="token punctuation">(</span><span class="token class-name">Long</span> folderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> treePath <span class="token operator">=</span> DEF_ROOT_PATH<span class="token punctuation">;</span>        <span class="token class-name">String</span> folderName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span> grade <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>folderId <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> folderId <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FileAttrDO</span><span class="token punctuation">(</span>treePath<span class="token punctuation">,</span> grade<span class="token punctuation">,</span> folderName<span class="token punctuation">,</span> DEF_PARENT_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">File</span> folder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>folder <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>folder<span class="token punctuation">.</span><span class="token function">getIsDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>folder<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            folderName <span class="token operator">=</span> folder<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            treePath <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>folder<span class="token punctuation">.</span><span class="token function">getTreePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> folder<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DEF_ROOT_PATH<span class="token punctuation">)</span><span class="token punctuation">;</span>            grade <span class="token operator">=</span> folder<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>grade <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"文件夹层级不能超过10层"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FileAttrDO</span><span class="token punctuation">(</span>treePath<span class="token punctuation">,</span> grade<span class="token punctuation">,</span> folderName<span class="token punctuation">,</span> folderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FolderDTO</span> <span class="token function">saveFolder</span><span class="token punctuation">(</span><span class="token class-name">FolderSaveDTO</span> folderSaveDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">File</span> folder <span class="token operator">=</span> dozerUtils<span class="token punctuation">.</span><span class="token function">map2</span><span class="token punctuation">(</span>folderSaveDto<span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>folderSaveDto<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> folderSaveDto<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            folder<span class="token punctuation">.</span><span class="token function">setFolderId</span><span class="token punctuation">(</span>DEF_PARENT_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>            folder<span class="token punctuation">.</span><span class="token function">setTreePath</span><span class="token punctuation">(</span>DEF_ROOT_PATH<span class="token punctuation">)</span><span class="token punctuation">;</span>            folder<span class="token punctuation">.</span><span class="token function">setGrade</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token class-name">File</span> parent <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>folderSaveDto<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"父文件夹不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getIsDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"父文件夹已经被删除"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parent<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"父文件夹不存在"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BizAssert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">,</span> BASE_VALID_PARAM<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token string">"文件夹层级不能超过10层"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            folder<span class="token punctuation">.</span><span class="token function">setFolderName</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            folder<span class="token punctuation">.</span><span class="token function">setTreePath</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getTreePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parent<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DEF_ROOT_PATH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            folder<span class="token punctuation">.</span><span class="token function">setGrade</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>folderSaveDto<span class="token punctuation">.</span><span class="token function">getOrderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            folderSaveDto<span class="token punctuation">.</span><span class="token function">setOrderNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        folder<span class="token punctuation">.</span><span class="token function">setIsDelete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        folder<span class="token punctuation">.</span><span class="token function">setDataType</span><span class="token punctuation">(</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">)</span><span class="token punctuation">;</span>        folder<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token class-name">IconType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setDate</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dozerUtils<span class="token punctuation">.</span><span class="token function">map2</span><span class="token punctuation">(</span>folder<span class="token punctuation">,</span> <span class="token class-name">FolderDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setDate</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        file<span class="token punctuation">.</span><span class="token function">setCreateMonth</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearMonthEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setCreateWeek</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearWeekEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setCreateDay</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsDateEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">removeFile</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">LbuWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> lambdaUpdate <span class="token operator">=</span>                <span class="token class-name">Wraps</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span><span class="token function">lbU</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getCreateUser</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDelete</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> lambdaUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">removeList</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">removeByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileStrategy<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fi<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">FileDeleteDO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">relativePath</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getRelativePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fileName</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ids <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ids<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">listByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileDO</span><span class="token punctuation">&gt;</span></span> listDo <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>                <span class="token class-name">FileDO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">dataType</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">submittedFileName</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileBiz<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span>listDo<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FileOverviewDTO</span> <span class="token function">findOverview</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">InnerQueryDate</span> innerQueryDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InnerQueryDate</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        startTime <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        endTime <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">findNumAndSizeByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"ALL"</span><span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOverviewDTO<span class="token punctuation">.</span>FileOverviewDTOBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">FileOverviewDTO</span><span class="token punctuation">.</span><span class="token function">myBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> allSize <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> allNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span> fs <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            allSize <span class="token operator">+=</span> fs<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            allNum <span class="token operator">+=</span> fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> DIR<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">dirNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> IMAGE<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">imgNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> VIDEO<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">videoNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> DOC<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">docNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> AUDIO<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">audioNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> OTHER<span class="token operator">:</span>                    builder<span class="token punctuation">.</span><span class="token function">otherNum</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">default</span><span class="token operator">:</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        builder<span class="token punctuation">.</span><span class="token function">allFileNum</span><span class="token punctuation">(</span>allNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allFileSize</span><span class="token punctuation">(</span>allSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findAllByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">InnerQueryDate</span> innerQueryDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InnerQueryDate</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        startTime <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        endTime <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dateList <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getDateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> dateType <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getDateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//不完整的数据</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">findNumAndSizeByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> dateType<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//按月份分类</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token function">groupingBy</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getDateType</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> sizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dateList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> subList <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Long</span> size <span class="token operator">=</span> subList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getSize</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Integer</span> num <span class="token operator">=</span> subList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token operator">!</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getNum</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>                numList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                sizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                numList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dateList</span><span class="token punctuation">(</span>dateList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">numList</span><span class="token punctuation">(</span>numList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sizeList</span><span class="token punctuation">(</span>sizeList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllByDataType</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataType</span><span class="token punctuation">&gt;</span></span> dataTypes <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">DataType</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">findNumAndSizeByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"ALL"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataType</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token function">groupingBy</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getDataType</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dataTypes<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token class-name">FileStatisticsDO</span> fs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                fs <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                fs <span class="token operator">=</span> <span class="token class-name">FileStatisticsDO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">num</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> fs<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">downTop20</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">findDownTop20</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findNumAndSizeToTypeByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">common</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">,</span>                <span class="token punctuation">(</span>qd<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> baseMapper<span class="token punctuation">.</span><span class="token function">findNumAndSizeByUserId</span><span class="token punctuation">(</span>qd<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getDateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ALL"</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">findDownSizeByDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span>                                                   <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">common</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">,</span>                <span class="token punctuation">(</span>qd<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> baseMapper<span class="token punctuation">.</span><span class="token function">findDownSizeByDate</span><span class="token punctuation">(</span>qd<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getDateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 抽取公共查询公共代码     *     * @param userId    用户id     * @param startTime 开始时间     * @param endTime   结束时间     * @param function  回调函数     * @return     */</span>    <span class="token keyword">private</span> <span class="token class-name">FileStatisticsAllDTO</span> <span class="token function">common</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InnerQueryDate</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> function<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">InnerQueryDate</span> innerQueryDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InnerQueryDate</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dateList <span class="token operator">=</span> innerQueryDate<span class="token punctuation">.</span><span class="token function">getDateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>innerQueryDate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//按月份分类</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token function">groupingBy</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getDateType</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> sizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> dirNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> imgSizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> imgNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> videoSizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> videoNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> audioSizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> audioNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> docSizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> docNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> otherSizeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> otherNumList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dateList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> subList <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataType</span><span class="token punctuation">,</span> <span class="token class-name">Stream</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> stream <span class="token operator">=</span> <span class="token punctuation">(</span>dataType<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> subList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token operator">!</span>dataType<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Long</span> size <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getSize</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Integer</span> num <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getNum</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>                numList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Integer</span> dirNum <span class="token operator">=</span> subList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>DIR<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getNum</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                dirNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>dirNum<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">add</span><span class="token punctuation">(</span>imgSizeList<span class="token punctuation">,</span> imgNumList<span class="token punctuation">,</span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>IMAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">add</span><span class="token punctuation">(</span>videoSizeList<span class="token punctuation">,</span> videoNumList<span class="token punctuation">,</span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>VIDEO<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">add</span><span class="token punctuation">(</span>audioSizeList<span class="token punctuation">,</span> audioNumList<span class="token punctuation">,</span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>AUDIO<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">add</span><span class="token punctuation">(</span>docSizeList<span class="token punctuation">,</span> docNumList<span class="token punctuation">,</span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>DOC<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">add</span><span class="token punctuation">(</span>otherSizeList<span class="token punctuation">,</span> otherNumList<span class="token punctuation">,</span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span><span class="token punctuation">.</span>OTHER<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                sizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                numList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                dirNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                imgSizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                imgNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                videoSizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                videoNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                audioSizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                audioNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                docSizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                docNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                otherSizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                otherNumList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">FileStatisticsAllDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">dateList</span><span class="token punctuation">(</span>dateList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">numList</span><span class="token punctuation">(</span>numList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sizeList</span><span class="token punctuation">(</span>sizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">dirNumList</span><span class="token punctuation">(</span>dirNumList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">imgNumList</span><span class="token punctuation">(</span>imgNumList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">imgSizeList</span><span class="token punctuation">(</span>imgSizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">videoNumList</span><span class="token punctuation">(</span>videoNumList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">videoSizeList</span><span class="token punctuation">(</span>videoSizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">audioNumList</span><span class="token punctuation">(</span>audioNumList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">audioSizeList</span><span class="token punctuation">(</span>audioSizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">docNumList</span><span class="token punctuation">(</span>docNumList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">docSizeList</span><span class="token punctuation">(</span>docSizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">otherNumList</span><span class="token punctuation">(</span>otherNumList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">otherSizeList</span><span class="token punctuation">(</span>otherSizeList<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> sizeList<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numList<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> subList<span class="token punctuation">,</span> <span class="token class-name">DataType</span> dt<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataType</span><span class="token punctuation">,</span> <span class="token class-name">Stream</span><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> stream <span class="token operator">=</span>                dataType <span class="token operator">-&gt;</span> subList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>fs <span class="token operator">-&gt;</span> dataType<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Long</span> size <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getSize</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span> num <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">FileStatisticsDO</span><span class="token operator">::</span><span class="token function">getNum</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sizeList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>        numList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InnerQueryDate</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dateList<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> dateType<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">Long</span> userId<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">InnerQueryDate</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">=</span> userId<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>startTime <span class="token operator">=</span> startTime<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>endTime <span class="token operator">=</span> endTime<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">InnerQueryDate</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>startTime <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                startTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>endTime <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                endTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            endTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>endTime<span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span>MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>            dateList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            dateType <span class="token operator">=</span> <span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">calculationEn</span><span class="token punctuation">(</span>startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">,</span> dateList<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-9-6-扩展FileMapper接口方法"><a href="#5-9-6-扩展FileMapper接口方法" class="headerlink" title="5.9.6 扩展FileMapper接口方法"></a>5.9.6 扩展FileMapper接口方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 查询下次次数前20的文件** @param userId* @return*/</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDownTop20</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*** 统计时间区间内文件的下次次数和大小** @param userId* @param dateType  日期类型 {MONTH:按月;WEEK:按周;DAY:按日} 来统计* @param startTime* @param endTime* @return*/</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileStatisticsDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDownSizeByDate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">,</span>                                          <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"dateType"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dateType<span class="token punctuation">,</span>                                          <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"startTime"</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> startTime<span class="token punctuation">,</span>                                          <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"endTime"</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-10-接口开发-分片上传"><a href="#5-10-接口开发-分片上传" class="headerlink" title="5.10 接口开发-分片上传"></a>5.10 接口开发-分片上传</h3><h4 id="5-10-1-分片上传介绍"><a href="#5-10-1-分片上传介绍" class="headerlink" title="5.10.1 分片上传介绍"></a>5.10.1 分片上传介绍</h4><p>前面的课程我们已经实现了普通的附件服务和网盘服务，如果上传的文件比较小，可以直接使用这两个服务即可。如果上传的文件比较大，例如要上传一个500M或者1G的视频文件（或者更大），这就需要分片上传了。那么什么是分片上传呢？</p><p>分片上传就是把一个大文件进行分片，一片一片的上传到服务端，最后由服务端进行分片的合并。</p><p>要实现分片上传需要前端和后端配合来完成。在进行分片上传时，一般是由前端对要上传的大文件进行分片，然后分多次将这些分片上传到服务端，所有分片都上传到服务端后，在服务端将分片合并为原始的大文件。采用大文件分片并发上传，可以极大的提高文件的上传效率。</p><h4 id="5-10-2-前端分片上传插件webuploader"><a href="#5-10-2-前端分片上传插件webuploader" class="headerlink" title="5.10.2 前端分片上传插件webuploader"></a>5.10.2 前端分片上传插件webuploader</h4><p>WebUploader是由Baidu WebFE(FEX)团队开发的一个简单的以HTML5为主，FLASH为辅的现代文件上传组件。在现代的浏览器里面能充分发挥HTML5的优势，同时又不摒弃主流IE浏览器，沿用原来的FLASH运行时，兼容IE6+，iOS 6+, android 4+。</p><p>官网地址：<a href="http://fex.baidu.com/webuploader/">http://fex.baidu.com/webuploader/</a></p><p>分片与并发结合，将一个大文件分割成多块，并发上传，极大地提高大文件的上传速度。</p><p>当网络问题导致传输错误时，只需要重传出错分片，而不是整个文件。另外分片传输能够更加实时的跟踪上传进度。</p><p>由于本课程主要为后端服务开发，所以前端部分不再开发，直接从资料中获得使用即可。</p><p>资料位置：<code>文件服务\资料\分片上传\前端</code></p><p>直接打开index.html页面，选择要上传的大文件，可以看到发送了多次请求，每次请求会上传此大文件的一个分片：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200514101901437.png" alt="image-20200514101901437"></p><p>注：由于目前后端服务还没有开发，所以上传会失败。</p><h4 id="5-10-3-后端代码实现"><a href="#5-10-3-后端代码实现" class="headerlink" title="5.10.3 后端代码实现"></a>5.10.3 后端代码实现</h4><h5 id="5-10-3-1-接口文档"><a href="#5-10-3-1-接口文档" class="headerlink" title="5.10.3.1 接口文档"></a>5.10.3.1 接口文档</h5><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200513191533974.png" alt="image-20200513191533974"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200513191617164.png" alt="image-20200513191617164"></p><h5 id="5-10-3-2-代码开发"><a href="#5-10-3-2-代码开发" class="headerlink" title="5.10.3.2 代码开发"></a>5.10.3.2 代码开发</h5><p>第一步：创建FileChunkController并提供分片上传方法uploadFile</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>dozer<span class="token punctuation">.</span></span><span class="token class-name">DozerUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">FileAttrDO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>chunk<span class="token punctuation">.</span></span><span class="token class-name">FileChunksMergeDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>chunk<span class="token punctuation">.</span></span><span class="token class-name">FileUploadDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>manager<span class="token punctuation">.</span></span><span class="token class-name">WebUploader</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileChunkStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span><span class="token punctuation">;</span><span class="token comment">/** * 分片上传 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/chunk"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@CrossOrigin</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分片上传"</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token string">"分片上传，需要webuploder.js插件进行配合使用"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileChunkController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileServerProperties</span> fileProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileService</span> fileService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">FileStrategy</span> fileStrategy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">WebUploader</span> webUploader<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">DozerUtils</span> dozerUtils<span class="token punctuation">;</span>    <span class="token comment">/**     * 分片上传     * @param fileUploadDTO     * @param multipartFile     * @return     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分片上传"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"分片上传"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileChunksMergeDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">FileUploadDTO</span> fileUploadDTO<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>multipartFile <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> multipartFile<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"分片上传分片为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"分片上传分片为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//  存放分片文件的服务器绝对路径 ，例如 D:\\uploadfiles\\2020\\04</span>        <span class="token class-name">String</span> uploadFolder <span class="token operator">=</span> <span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">.</span><span class="token function">getUploadPathPrefix</span><span class="token punctuation">(</span>fileProperties<span class="token punctuation">.</span><span class="token function">getStoragePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> fileUploadDTO<span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//没有分片，按照普通文件上传处理</span>            <span class="token class-name">File</span> file <span class="token operator">=</span> fileStrategy<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            file<span class="token punctuation">.</span><span class="token function">setFileMd5</span><span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        fileService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment">//为上传的文件准备好对应的位置</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> targetFile <span class="token operator">=</span> webUploader<span class="token punctuation">.</span><span class="token function">getReadySpace</span><span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">,</span> uploadFolder<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>targetFile <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"分片上传失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//保存上传文件</span>            multipartFile<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//封装信息给前端，用于分片合并</span>            <span class="token class-name">FileChunksMergeDTO</span> mergeDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileChunksMergeDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mergeDTO<span class="token punctuation">.</span><span class="token function">setSubmittedFileName</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            dozerUtils<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">,</span>mergeDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>mergeDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在配置属性类中添加storagePath属性和对于的get、set方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStoragePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> storagePath<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStoragePath</span><span class="token punctuation">(</span><span class="token class-name">String</span> storagePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>storagePath <span class="token operator">=</span> storagePath<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//指定分片上传时临时存放目录</span><span class="token keyword">private</span> <span class="token class-name">String</span> storagePath <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：创建WebUploader分片上传工具类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>manager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>chunk<span class="token punctuation">.</span></span><span class="token class-name">FileUploadDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token comment">/** * 分片上传工具类 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebUploader2</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 为上传的文件创建对应的保存位置,若上传的是分片，则会创建对应的文件夹结构和tmp文件     *     * @param fileUploadDTO 上传文件的相关信息     * @param path 文件保存根路径     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> <span class="token function">getReadySpace</span><span class="token punctuation">(</span><span class="token class-name">FileUploadDTO</span> fileUploadDTO<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//创建上传文件所需的文件夹</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileFolder</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//将上传的分片保存在此目录中</span>        <span class="token class-name">String</span> fileFolder <span class="token operator">=</span> fileUploadDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileFolder <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//文件上传路径更新为指定文件信息签名后的临时文件夹，用于后期合并</span>        path <span class="token operator">+=</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileFolder<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileFolder</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//分片上传，指定当前分片文件的文件名</span>        <span class="token class-name">String</span> newFileName <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> newFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 创建存放分片上传的文件的文件夹     *     * @param file   文件夹路径     * @param hasTmp 是否有临时文件     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">createFileFolder</span><span class="token punctuation">(</span><span class="token class-name">String</span> file<span class="token punctuation">,</span> <span class="token keyword">boolean</span> hasTmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//创建存放分片文件的临时文件夹</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> tmpFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmpFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                tmpFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"无法创建文件夹"</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasTmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//创建临时文件，用来记录上传分片文件的修改时间，用于清理长期未完成的垃圾分片</span>            tmpFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span>file <span class="token operator">+</span> <span class="token string">".tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>tmpFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> tmpFile<span class="token punctuation">.</span><span class="token function">setLastModified</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    tmpFile<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"无法创建tmp文件"</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：修改Nacos配置中心的pd-file-server.yml文件，加入storagePath配置项</p><h5 id="5-10-3-3-接口测试"><a href="#5-10-3-3-接口测试" class="headerlink" title="5.10.3.3 接口测试"></a>5.10.3.3 接口测试</h5><p>第一步：启动Nacos配置中心</p><p>第二步：启动Nginx服务</p><p>第三步：启动文件服务</p><p>第四步：访问分片上传页面，进行大文件上传</p><p>可以看到，上传完成后，对应的分片上传所需目录、临时文件、分片文件都已经创建成功了：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200514185803364.png" alt="image-20200514185803364"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200514185803364.png"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200514185825012.png" alt="image-20200514185825012"></p><h3 id="5-11-接口开发-分片合并"><a href="#5-11-接口开发-分片合并" class="headerlink" title="5.11 接口开发-分片合并"></a>5.11 接口开发-分片合并</h3><p>前面我们已经完成了分片上传的接口，本小节需要完成的是将这些分片文件合并为原始文件并按照配置文件配置的存储策略保存到相应位置。由于不同的存储方式对应的分片合并方式也不同，所以我们需要提供不同的分片合并处理策略。具体接口设计如下：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200518110627666.png" alt="image-20200518110627666"></p><h4 id="5-11-1-FileChunkStrategy"><a href="#5-11-1-FileChunkStrategy" class="headerlink" title="5.11.1 FileChunkStrategy"></a>5.11.1 FileChunkStrategy</h4><p>FileChunkStrategy是分片文件处理策略顶层接口，是对分片文件处理的顶层抽象，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>chunk<span class="token punctuation">.</span></span><span class="token class-name">FileChunksMergeDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token comment">/** * 文件分片处理策略接口 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FileChunkStrategy</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 分片合并     *     * @param merge     * @return     */</span>    <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">chunksMerge</span><span class="token punctuation">(</span><span class="token class-name">FileChunksMergeDTO</span> merge<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-11-2-AbstractFileChunkStrategy"><a href="#5-11-2-AbstractFileChunkStrategy" class="headerlink" title="5.11.2 AbstractFileChunkStrategy"></a>5.11.2 AbstractFileChunkStrategy</h4><p>AbstractFileChunkStrategy是抽象分片策略处理类，实现了FileChunkStrategy接口。AbstractFileChunkStrategy实现主要的分片合并处理流程，例如：分片临时存储路径获取、分片数量的检查、合并后临时分片文件清理、合并后将文件信息保存到数据库等，但是真正分片合并的处理过程需要其子类来完成，因为不同的存储方案处理方式是不同的。</p><p>由于在进行分片合并处理过程中需要锁，在资料中(<code>文件服务\资料\分片上传\后端</code>)已经提供了工具类，直接导入项目使用即可。</p><p>AbstractFileChunkStrategy代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">R</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>chunk<span class="token punctuation">.</span></span><span class="token class-name">FileChunksMergeDTO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>enumeration<span class="token punctuation">.</span></span><span class="token class-name">IconType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">FileServerProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FileService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">FileChunkStrategy</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">FileLock</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>file<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DateUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">NumberHelper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pinda<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StrPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span><span class="token punctuation">;</span><span class="token comment">/** * 文件分片处理 抽象策略类 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractFileChunkStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">FileChunkStrategy</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">protected</span> <span class="token class-name">FileService</span> fileService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">protected</span> <span class="token class-name">FileServerProperties</span> fileProperties<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">FileServerProperties<span class="token punctuation">.</span>Properties</span> properties<span class="token punctuation">;</span>    <span class="token comment">/**     * 分片合并     * @param info     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">chunksMerge</span><span class="token punctuation">(</span><span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//   570de89d476e6a5ba371f5fdd8d7920b.avi</span>        <span class="token class-name">String</span> filename <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>DOT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//分片合并</span>        <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token function">chunksMerge</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getIsSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//文件名</span>            <span class="token class-name">File</span> filePo <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            filePo<span class="token punctuation">.</span><span class="token function">setDataType</span><span class="token punctuation">(</span><span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getContextType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setCreateMonth</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearMonthEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setCreateWeek</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsYearWeekEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setCreateDay</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">formatAsDateEn</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setSubmittedFileName</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setIsDelete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setFileMd5</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setContextType</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getContextType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setFilename</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setExt</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token class-name">IconType</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//将上传的文件信息保存到数据库</span>            fileService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filePo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>filePo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 分片合并     * @param info     * @param fileName     * @return     */</span>    <span class="token keyword">private</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">chunksMerge</span><span class="token punctuation">(</span><span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//获得分片文件存储的路径 D:\\chunks\\2020\\05</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">FileDataTypeUtil</span><span class="token punctuation">.</span><span class="token function">getUploadPathPrefix</span><span class="token punctuation">(</span>fileProperties<span class="token punctuation">.</span><span class="token function">getStoragePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> chunks <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> folder <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> md5 <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> chunksNum <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChunksNum</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> folder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//检查是否满足合并条件：分片数量是否足够</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>chunks <span class="token operator">==</span> chunksNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//同步指定合并的对象</span>            <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token class-name">FileLock</span><span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//检查是否满足合并条件：分片数量是否足够</span>                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">&gt;</span></span> files <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> folder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>chunks <span class="token operator">==</span> files<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">//按照名称排序文件，这里分片都是按照数字命名的</span>                    <span class="token comment">//这里存放的文件名一定是数字</span>                    files<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">NumberHelper</span><span class="token punctuation">.</span><span class="token function">intValueOf0</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">NumberHelper</span><span class="token punctuation">.</span><span class="token function">intValueOf0</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>files<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//清理：文件夹，tmp文件</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanSpace</span><span class="token punctuation">(</span>folder<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> result<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"数据分片合并失败"</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"数据分片合并失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>                <span class="token comment">//解锁</span>                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//清理锁对象</span>                <span class="token class-name">FileLock</span><span class="token punctuation">.</span><span class="token function">removeLock</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"文件[签名:"</span> <span class="token operator">+</span> md5 <span class="token operator">+</span> <span class="token string">"]数据不完整，可能该文件正在合并中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"数据不完整，可能该文件正在合并中, 也有可能是上传过程中某些分片丢失"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 子类实现具体的合并操作     *     * @param files    分片文件     * @param fileName 唯一名 含后缀     * @param info     分片信息     * @return     * @throws IOException     */</span>    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">,</span>  <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 清理分片上传的相关数据     * 文件夹，tmp文件     *     * @param folder 文件夹名称     * @param path   上传文件根路径     * @return     */</span>    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">cleanSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span> folder<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//删除分片文件夹</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> garbage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> folder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">deleteQuietly</span><span class="token punctuation">(</span>garbage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//删除tmp文件</span>        garbage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> folder <span class="token operator">+</span> <span class="token string">".tmp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">deleteQuietly</span><span class="token punctuation">(</span>garbage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取指定文件的分片数量     *     * @param folder 文件夹路径     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getChunksNum</span><span class="token punctuation">(</span><span class="token class-name">String</span> folder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filesList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> filesList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取指定文件的所有分片     *     * @param folder 文件夹路径     * @return     */</span>    <span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token class-name">String</span> folder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> targetFolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> targetFolder<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-11-3-LocalChunkServiceImpl"><a href="#5-11-3-LocalChunkServiceImpl" class="headerlink" title="5.11.3 LocalChunkServiceImpl"></a>5.11.3 LocalChunkServiceImpl</h4><p>LocalChunkServiceImpl是AbstractFileChunkStrategy的子类，负责处理存储策略为本地时的分片文件合并操作。为了使程序能够动态选择具体的策略处理类，可以将LocalChunkServiceImpl定义在LocalAutoConfigure配置类中，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 本地分片文件处理策略类*/</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocalChunkServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileChunkStrategy</span> <span class="token punctuation">{</span>    <span class="token comment">/**         *分片合并         * @param files    分片文件         * @param fileName 唯一名 含后缀         * @param info     分片信息         * @return         * @throws IOException     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        properties <span class="token operator">=</span> fileProperties<span class="token punctuation">.</span><span class="token function">getLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//日期目录</span>        <span class="token class-name">String</span> relativePath <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//合并后文件的存储路径 例如：D:\\uploadFiles\\oss-file-service\\2020\\05</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> relativePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//上传文件存放目录，如果不存在则创建</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> uploadFolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>uploadFolder<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            uploadFolder<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//创建合并后的文件</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> outputFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>outputFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">boolean</span> newFile <span class="token operator">=</span> outputFile<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"创建文件失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>outputFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//同步nio 方式对分片进行合并, 有效的避免文件过大导致内存溢出</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        inChannel<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> inChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"文件转换失败"</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"文件转换失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment">//删除分片</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"分片["</span> <span class="token operator">+</span> info<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"=&gt;"</span> <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]删除失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"文件输出失败"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"文件输出失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"文件[{}], fileName={}已经存在"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                    <span class="token function">append</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">.</span>                    <span class="token function">append</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">.</span>                    <span class="token function">append</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> filePo <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">relativePath</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>filePo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-11-4-FastDfsChunkServiceImpl"><a href="#5-11-4-FastDfsChunkServiceImpl" class="headerlink" title="5.11.4 FastDfsChunkServiceImpl"></a>5.11.4 FastDfsChunkServiceImpl</h4><p>FastDfsChunkServiceImpl是AbstractFileChunkStrategy的子类，负责处理存储策略为FastDFS时的分片文件合并操作。为了使程序能够动态选择具体的策略处理类，可以将FastDfsChunkServiceImpl定义在FastDfsAutoConfigure配置类中，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** FastDfs分片文件处理策略类*/</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FastDfsChunkServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileChunkStrategy</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">protected</span> <span class="token class-name">AppendFileStorageClient</span> storageClient<span class="token punctuation">;</span>    <span class="token comment">/**         * 分片合并         * @param files    分片文件         * @param fileName 唯一名 含后缀         * @param info     分片信息         * @return         * @throws IOException    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">StorePath</span> storePath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> file <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                storePath <span class="token operator">=</span> storageClient<span class="token punctuation">.</span><span class="token function">uploadAppenderFile</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> in<span class="token punctuation">,</span>                                                             file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                storageClient<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> storePath<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         in<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>storePath <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"上传失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>fileProperties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getFullPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> filePo <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span>storePath<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>filePo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-11-5-AliChunkServiceImpl"><a href="#5-11-5-AliChunkServiceImpl" class="headerlink" title="5.11.5 AliChunkServiceImpl"></a>5.11.5 AliChunkServiceImpl</h4><p>AliChunkServiceImpl是AbstractFileChunkStrategy的子类，负责处理存储策略为阿里云OSS时的分片文件合并操作。为了使程序能够动态选择具体的策略处理类，可以将AliChunkServiceImpl定义在AliOssAutoConfigure配置类中，具体代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** 阿里云OSS分片文件处理策略类*/</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliChunkServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractFileChunkStrategy</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">OSS</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        properties <span class="token operator">=</span> fileProperties<span class="token punctuation">.</span><span class="token function">getAli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            properties<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**         * 分片合并         * @param files    分片文件         * @param fileName 唯一名 含后缀         * @param info     分片信息         * @return         * @throws IOException    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token class-name">OSS</span> client <span class="token operator">=</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> bucketName <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//日期文件夹</span>        <span class="token class-name">String</span> relativePath <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span>DEFAULT_MONTH_FORMAT_SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// web服务器存放的相对路径</span>        <span class="token class-name">String</span> relativeFileName <span class="token operator">=</span> relativePath <span class="token operator">+</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH <span class="token operator">+</span> fileName<span class="token punctuation">;</span>        <span class="token class-name">ObjectMetadata</span> metadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        metadata<span class="token punctuation">.</span><span class="token function">setContentDisposition</span><span class="token punctuation">(</span><span class="token string">"attachment;fileName="</span> <span class="token operator">+</span> info<span class="token punctuation">.</span><span class="token function">getSubmittedFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        metadata<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getContextType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//步骤1：初始化一个分片上传事件。</span>        <span class="token class-name">InitiateMultipartUploadRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InitiateMultipartUploadRequest</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> relativeFileName<span class="token punctuation">,</span> metadata<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InitiateMultipartUploadResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">initiateMultipartUpload</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 返回uploadId，它是分片上传事件的唯一标识，您可以根据这个ID来发起相关的操作，如取消分片上传、查询分片上传等。</span>        <span class="token class-name">String</span> uploadId <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getUploadId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// partETags是PartETag的集合。PartETag由分片的ETag和分片号组成。</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PartETag</span><span class="token punctuation">&gt;</span></span> partETags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PartETag</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>File</span> file <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">UploadPartRequest</span> uploadPartRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UploadPartRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setBucketName</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setKey</span><span class="token punctuation">(</span>relativeFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setUploadId</span><span class="token punctuation">(</span>uploadId<span class="token punctuation">)</span><span class="token punctuation">;</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 设置分片大小。除了最后一个分片没有大小限制，其他的分片最小为100KB。</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setPartSize</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 设置分片号。每一个上传的分片都有一个分片号，取值范围是1~10000，如果超出这个范围，OSS将返回InvalidArgument的错误码。</span>            uploadPartRequest<span class="token punctuation">.</span><span class="token function">setPartNumber</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 每个分片不需要按顺序上传，甚至可以在不同客户端上传，OSS会按照分片号排序组成完整的文件。</span>            <span class="token class-name">UploadPartResult</span> uploadPartResult <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">uploadPart</span><span class="token punctuation">(</span>uploadPartRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 每次上传分片之后，OSS的返回结果会包含一个PartETag。PartETag将被保存到partETags中。</span>            partETags<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>uploadPartResult<span class="token punctuation">.</span><span class="token function">getPartETag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 步骤3：完成分片上传。 */</span>        <span class="token comment">// 排序。partETags必须按分片号升序排列。</span>        partETags<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">PartETag</span><span class="token operator">::</span><span class="token function">getPartNumber</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 在执行该操作时，需要提供所有有效的partETags。OSS收到提交的partETags后，会逐一验证每个分片的有效性。当所有的数据分片验证通过后，OSS将把这些分片组合成一个完整的文件。</span>        <span class="token class-name">CompleteMultipartUploadRequest</span> completeMultipartUploadRequest <span class="token operator">=</span>            <span class="token keyword">new</span> <span class="token class-name">CompleteMultipartUploadRequest</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> relativeFileName<span class="token punctuation">,</span> uploadId<span class="token punctuation">,</span> partETags<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CompleteMultipartUploadResult</span> uploadResult <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">completeMultipartUpload</span><span class="token punctuation">(</span>completeMultipartUploadRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getUriPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> filePo <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">relativePath</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getETag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>SLASH<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 关闭OSSClient。</span>        client<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>filePo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-11-6-分片合并接口"><a href="#5-11-6-分片合并接口" class="headerlink" title="5.11.6 分片合并接口"></a>5.11.6 分片合并接口</h4><p>接口文档：</p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200518114353207.png" alt="image-20200518114353207"></p><p><img src="%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1.assets/image-20200518114411802.png" alt="image-20200518114411802"></p><p>在FileChunkController中提供分片合并方法，直接调用分片处理策略类完成分片合并操作：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">FileChunkStrategy</span> fileChunkStrategy<span class="token punctuation">;</span><span class="token comment">//分片文件处理策略</span><span class="token comment">/*** 分片合并* @param info* @return*/</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"分片合并"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"所有分片上传成功后，调用该接口对分片进行合并"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/merge"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveChunksMerge</span><span class="token punctuation">(</span><span class="token class-name">FileChunksMergeDTO</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"info={}"</span><span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> fileChunkStrategy<span class="token punctuation">.</span><span class="token function">chunksMerge</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件服务&quot;&gt;&lt;a href=&quot;#文件服务&quot; class=&quot;headerlink&quot; title=&quot;文件服务&quot;&gt;&lt;/a&gt;&lt;strong&gt;文件服务&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-需求背景&quot;&gt;&lt;a href=&quot;#1-需求背景&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="阶段一 中台战略与组件化开发专题课程" scheme="https://chenliren9527.github.io/categories/%E9%98%B6%E6%AE%B5%E4%B8%80-%E4%B8%AD%E5%8F%B0%E6%88%98%E7%95%A5%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%93%E9%A2%98%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="Java高手课" scheme="https://chenliren9527.github.io/tags/Java%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="文件服务" scheme="https://chenliren9527.github.io/tags/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="文件处理" scheme="https://chenliren9527.github.io/tags/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    
    <category term="分片上传" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    
    <category term="上传附件" scheme="https://chenliren9527.github.io/tags/%E4%B8%8A%E4%BC%A0%E9%99%84%E4%BB%B6/"/>
    
    <category term="打包下载" scheme="https://chenliren9527.github.io/tags/%E6%89%93%E5%8C%85%E4%B8%8B%E8%BD%BD/"/>
    
    <category term="分片合并" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E7%89%87%E5%90%88%E5%B9%B6/"/>
    
  </entry>
  
  <entry>
    <title>阶段一 第一章 软件架构与需求分析方法</title>
    <link href="https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-ruan-jian-jia-gou-yu-xu-qiu-fen-xi-fang-fa/"/>
    <id>https://chenliren9527.github.io/2021/12/27/java-gao-shou-ban-jie-duan-yi-ruan-jian-jia-gou-yu-xu-qiu-fen-xi-fang-fa/</id>
    <published>2021-12-27T14:40:49.000Z</published>
    <updated>2022-05-17T05:35:19.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件架构与需求分析方法"><a href="#软件架构与需求分析方法" class="headerlink" title="软件架构与需求分析方法"></a>软件架构与需求分析方法</h1><p><strong>学习目标</strong></p><ul><li>能够掌握系统、子系统、模块、组件、服务、框架、架构等概念的含义</li><li>能够知道单体架构、分布式架构、微服务架构的适用场景、优势和劣势</li><li>能够知道微服务架构常见技术框架</li><li>能够了解组件化、服务化产生的原因、优势和问题，初步具备中台概念</li><li>了解常见的需求问题</li><li>掌握一个需求包含的要素</li><li>掌握如何做需求分析</li></ul><h1 id="1-软件架构体系"><a href="#1-软件架构体系" class="headerlink" title="1. 软件架构体系"></a>1. 软件架构体系</h1><h2 id="1-1-系统与子系统"><a href="#1-1-系统与子系统" class="headerlink" title="1.1. 系统与子系统"></a>1.1. 系统与子系统</h2><p><strong>系统</strong>：泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体。</p><ul><li><strong>关联</strong>：系统是由一群有关联的个体组成的，没有关联的个体堆在一起不能成为一个系统。例如，把一个汽车发动机和一堆苹果放在一起不能称之为一个系统，把发动机、底盘、轮胎、车架组合起来才能成为一台汽车，构成一个系统。</li><li><strong>规则</strong>：系统内的个体需要按照指定的规则运作，而不是单个个体各自为政。规则规定了系统内个体分工和协作的方式。例如，汽车发动机负责产生动力，然后通过变速器和传动轴，将动力输出到车轮上，从而驱动汽车前进。</li><li><strong>能力</strong>：系统能力与个体能力有本质的差别，系统能力不是个体能力之和，而是产生了新的能力。例如，汽车能够载重前进，而发动机、变速器、传动轴、车轮本身都不具备这样的能力。</li></ul><p><strong>子系统</strong>：子系统也是由一群有关联的个体所组成的系统，多半会是更大系统中的一部分。 子系统的定义和系统定义是一样的，只是观察的角度有差异，一个系统可能是另外一个更大系统的子系统。</p><p>以微信为例来做一个分析：</p><ul><li>微信本身是一个系统，包含聊天、登录、支付、朋友圈等子系统。</li><li>朋友圈这个系统又包括动态、评论、点赞等子系统。</li><li>评论这个系统可能又包括防刷子系统、审核子系统、发布子系统、存储子系统。</li><li>评论审核子系统不再包含业务意义上的子系统，而是包括各个模块或者组件，这些模块或者组件本身也是另外一个维度上的系统。例如，MySQL、Redis 等是存储系统，但不是业务子系统</li></ul><h2 id="1-2-模块、组件、服务"><a href="#1-2-模块、组件、服务" class="headerlink" title="1.2. 模块、组件、服务"></a>1.2. 模块、组件、服务</h2><ul><li><strong>模块</strong>：是一套一致而互相有紧密关连的软件组织。它分别包含了程序和数据结构两部分。现代软件开发往往使用模块作为合成的单位</li><li><strong>组件</strong>：自包含的、可编程的、可重用的、与语言无关的软件单元，组件可以很容易被用于组装应用程序中</li></ul><p>模块和组件都是系统的组成部分，只是从不同的角度拆分系统而已。例如：</p><ul><li><strong>从逻辑的角度来拆分系统后，得到的单元就是“模块”</strong>；<strong>从物理的角度来拆分系统后，得到的单元就是“组件”</strong>。</li><li><strong>划分模块的主要目的是职责分离；划分组件的主要目的是单元复用。</strong></li></ul><p>例如我们要做一个学生信息管理系统，这个系统从逻辑的角度来拆分，可以分为：登录注册模块、个人信息模块、个人成绩模块；从物理的角度来拆分，可以拆分为应用程序、 Nginx、Web 服务器、MySQL等</p><ul><li><strong>服务：</strong>服务和组件有某种相似之处：它们都将被外部的应用程序使用。两者之间最大的差异在于：组件是在本地使用的（例如Jar文件）；而服务是运行起来的，要通过同步或异步的远程接口来远程使用（例如RESTFul接口、web service、消息系统、RPC，或者socket）</li></ul><p>服务是可以单独运行，并且对外提供功能的一种形式。可以将一个复杂的项目分解成多个服务。当某一个服务挂掉时不会拖垮整个系统。如果没有服务化，每当一个新的功能被添加到系统中就会影响到所有功能；如果采取服务化，每个服务只对其上下游的服务负责。 </p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596612303808.png" alt="1596612303808.png"></p><h2 id="1-3-软件架构体系"><a href="#1-3-软件架构体系" class="headerlink" title="1.3. 软件架构体系"></a>1.3. 软件架构体系</h2><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596681289835.png" alt="1596681289835"> </p><h1 id="2-架构原则"><a href="#2-架构原则" class="headerlink" title="2. 架构原则"></a>2. 架构原则</h1><h2 id="2-1-解耦"><a href="#2-1-解耦" class="headerlink" title="2.1. 解耦"></a>2.1. 解耦</h2><p>在软件工程中，耦合指的就是对象之间的依赖性。对象之间的耦合度越高，维护成本越高。因此对象的设计应使类和构件之间的耦合最小。软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。<strong>划分模块的一个准则就是高内聚低耦合。</strong></p><p>耦合性存在于各个领域，而非软件设计中独有的，理论上说绝对的零耦合是做不到的，但可以通过一些方法将耦合降至最低，降低耦合度即可理解为解耦，在设计上解耦的核心思想是【彼此独立，互不依赖】。</p><h2 id="2-2-分层"><a href="#2-2-分层" class="headerlink" title="2.2. 分层"></a>2.2. 分层</h2><p>分层结构是最为流行、应用最广泛的应用软件的设计方式。在应用了分层结构的系统中，各个子系统按照层次的形式组织起来，上层使用下层的各种服务，而下层对上层一无所知。每一层都对自己的上层隐藏其下层的细节。 </p><p><strong>经典三层架构</strong>：</p><p>在软件架构中，经典三层架构自顶向下由用户界面层、业务逻辑层、数据访问层组成。在提出该分层架构的时代，多数系统往往较为简单，本质上都是一个单体架构的数据库管理系统。这种分层架构有效地隔离了业务逻辑与数据访问逻辑，使得这两个不同关注点能够相对自由和独立地演化。经典的三层架构如下所示：</p><p>​    <img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596427548665.png" alt="1596427548665"> </p><p><strong>分层的设计原则是：保证同一层的组件处于同一个抽象层次</strong>。即所谓的“单一抽象层次原则”。这一原则可以运用到分层架构中。比如下图所示：</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596429745658.png" alt="1596429745658"> </p><h2 id="2-3-封装"><a href="#2-3-封装" class="headerlink" title="2.3. 封装"></a>2.3. 封装</h2><p>假设我们有一个程序，它在逻辑上有一些不同的对象，并且这些对象彼此之间会相互交流。</p><p><strong>在一个类中，当每个对象的状态保持相对孤立，就实现了封装</strong>。其余的对象并不能观察到这个对象的状态。他们能做到的只有调用一些被称作“方法”的通用功能。</p><p>因此，对象使用方法掌控着自己的状态，除非明确允许，没有其他人可以接触到它。如果你想和某个对象交流，你需要使用提供的方法。但在默认情况下，你无法改变对象的状态。</p><h1 id="3-架构的方法"><a href="#3-架构的方法" class="headerlink" title="3. 架构的方法"></a>3. 架构的方法</h1><p>架构图是为了表示软件系统的整体轮廓和各个组件之间的相互关系和约束边界，以及软件系统的物理部署和软件系统的演进方向的整体视图。要让干系人理解、遵循架构决策，就需要把架构信息传递出去，架构图就是一个很好的载体。不同的视角和角色，关注点也是不同的，看到的架构图是不一样的。   </p><h2 id="3-1-业务架构"><a href="#3-1-业务架构" class="headerlink" title="3.1 业务架构"></a>3.1 业务架构</h2><p><strong>使用者</strong>：CEO、CIO、CTO、产品总监</p><p><strong>核心业务流程：</strong></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596502687510.png" alt="1596502687510"> </p><p> <strong>核心能力:</strong></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596503130199.png" alt="1596503130199"> </p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596504002020.png" alt="1596504002020">  </p><h2 id="3-2-功能架构"><a href="#3-2-功能架构" class="headerlink" title="3.2 功能架构"></a>3.2 功能架构</h2><p>使用者：产品总监、产品经理</p><p><strong>示例：</strong>黑马头条功能架构图</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1.png" alt="1">  </p><h2 id="3-3-系统架构"><a href="#3-3-系统架构" class="headerlink" title="3.3 系统架构"></a>3.3 系统架构</h2><p>使用者：系统架构师</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596515303433.png" alt="1596515303433"> </p><h2 id="3-4-技术架构"><a href="#3-4-技术架构" class="headerlink" title="3.4 技术架构"></a>3.4 技术架构</h2><p>使用者：系统架构师</p><p><strong>示例一</strong>：<a href="https://www.processon.com/view/5f2a0bfb1e08533a629b7ed3">https://www.processon.com/view/5f2a0bfb1e08533a629b7ed3</a></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/Snipaste_2022-03-16_23-52-45.png" alt="技术架构图"></p><p><strong>示例二</strong>：冷链项目技术架构图</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/3.png" alt="3"> </p><h2 id="3-5-数据架构"><a href="#3-5-数据架构" class="headerlink" title="3.5 数据架构"></a>3.5 数据架构</h2><p>使用者：CTO、系统架构师、数据架构师</p><p><strong>示例一</strong>：数据模型</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596598751540.png" alt="1596598751540"> </p><p><strong>示例二</strong>：大数据平台架构</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/image-20201202153724664.png" alt="image-20201202153724664"> </p><h2 id="3-6-部署架构"><a href="#3-6-部署架构" class="headerlink" title="3.6 部署架构"></a>3.6 部署架构</h2><p>使用者：运维架构师</p><p><strong>示例一</strong>：<a href="https://www.processon.com/view/5f2a03cf637689168e49e3fa">https://www.processon.com/view/5f2a03cf637689168e49e3fa</a></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/Snipaste_2022-03-17_00-08-49.png" alt="物理部署图"> </p><p><strong>示例二</strong>：冷链项目部署架构图</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/%E7%89%A9%E7%90%86%E9%83%A8%E7%BD%B2%E5%9B%BE.png" alt="物理部署图"></p><h1 id="4-架构演进之路"><a href="#4-架构演进之路" class="headerlink" title="4. 架构演进之路"></a>4. 架构演进之路</h1><h2 id="4-1-单体架构"><a href="#4-1-单体架构" class="headerlink" title="4.1. 单体架构"></a>4.1. 单体架构</h2><p>公司发展的初期，资金少、用户少，需要的软件产品的数据和并发量都比较小，这个时期大多数的软件系统只需要单一服务器就可以满足需求，所有的业务逻辑都在单一应用系统，单应用、单数据库。数据库部署在和应用相同的虚拟机或服务器上，或者放置在另外一台机器上。此时的架构图如下：</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587542005178.png" alt="1587542005178">          或      <img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587541976720.png" alt="1587541976720"> </p><ul><li>操作系统：windows、linux</li><li>应用服务器：tomcat、jetty、jboos、apache、weblogic、websphere…</li><li>数据库：mysql、oracle、db2…</li><li>应用系统：可以用java、php、asp等各种语言开发</li></ul><p>这种架构模式优点很明显：</p><ul><li>节省服务器资源，投入少</li><li>管理简单：上线、部署、监控、问题排查等都比较简单</li><li>开发简单：软件系统功能整合在一起，不需要考虑太多服务依赖等问题，代码管理也比较简单明了。</li><li>测试简单</li></ul><p>随着公司和业务进入快速发展时期，软件系统面临来自多方面的考验：</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587529858713.png" alt="1587529858713"> </p><p>单体架构的缺点也越发的凸显出来：</p><ul><li>可用性差： 应用和数据库都是单点，无论应用还是数据库出现问题，整个系统的就会不可用了</li><li>稳定性差： 系统耦合度高，新增或者修改任何一个功能，哪怕只是一行代码，也需要重启服务器，此时系统是不可用的</li><li>性能差：单一的应用服务器和数据库服务器，性能总会有上限的，当用户变多或者准确的说相同时刻并发访问多时，系统就容易挂掉了</li></ul><h2 id="4-2-分布式架构"><a href="#4-2-分布式架构" class="headerlink" title="4.2. 分布式架构"></a>4.2. 分布式架构</h2><p>单体架构有着明显的缺陷，随着系统访问量的增多，这些缺陷越来越凸显，为了解决这些缺陷，架构升级了，变成了分布式架构。分布式，就是多个实例提供服务。下面我们来简单介绍下常见的一些解决方案。</p><h3 id="4-2-1-应用集群"><a href="#4-2-1-应用集群" class="headerlink" title="4.2.1 应用集群"></a>4.2.1 应用集群</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587542240498.png" alt="1587542240498">  </p><ul><li>反向代理服务器：把用户请求反向路由到应用服务器，常见的反向代理服务器是Nginx或HAProxy</li><li>应用服务器：集群化部署</li><li>数据库服务器：主从部署</li></ul><p>架构优点：</p><ul><li>可用性高：代理服务器、应用服务器、数据库服务器都是做了集群，当某台机器挂掉后，其他机器能够几乎无感的接替下任务</li><li>性能比单体架构高： 用户的请求分发到多个应用服务器上，整体性能接近单体结构的三倍</li><li>安全性高： 外网用户访问的是反向代理服务器，应用和数据库隔离在内网中</li></ul><h3 id="4-2-2-分布式缓存"><a href="#4-2-2-分布式缓存" class="headerlink" title="4.2.2 分布式缓存"></a>4.2.2 分布式缓存</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587548812099.png" alt="1587548812099"> </p><p>缓存分为多级缓存，比如本地缓存（JVM中），分布式缓存服务器（Redis集群等）。本地缓存的访问速度更快一些，但是受应用服务器内存限制，其缓存数据量有限，而且会出现和应用程序争用内存的情况。远程分布式缓存可以使用集群的方式，部署大内存的服务器作为专门的缓存服务器，可以在理论上做到不受内存容量限制的缓存服务。常见缓存服务器包括Redis、Memcached等。使用缓存后，数据访问压力得到有效缓解。</p><h3 id="4-3-3-业务拆分"><a href="#4-3-3-业务拆分" class="headerlink" title="4.3.3 业务拆分"></a>4.3.3 业务拆分</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587549937977.png" alt="1587549937977">   </p><p>业务进一步发展，用户越来越多，系统又出现了瓶颈，此时整个电商系统可以做系统拆分了，系统拆分分为水平拆分和垂直拆分。</p><p><strong>水平拆分：</strong></p><p>拆分成商品、订单、交易、用户、支付等多个系统，每个系统都都是多台服务器构成的集群。</p><p><strong>垂直拆分：</strong></p><p>将一些公共业务和服务，如用户中心拆分成注册登录中心和用户中心，短信、文件、消息等各种公共服务，从业务系统中拆分剥离出来。</p><p>这种架构的优势也比较明显，一方面，应用系统增加了，能够响应用户的请求也会变多，另一方面公共服务能够提供给所有的应用使用，达到服务复用的效果。但是大家需要注意的是数据库有可能只是一个，而单一数据库服务器的处理能力必然是有限的，随着用户并发量的持续增多，数据库将会是系统的瓶颈。</p><h3 id="4-3-4-分库分表和读写分离"><a href="#4-3-4-分库分表和读写分离" class="headerlink" title="4.3.4 分库分表和读写分离"></a>4.3.4 分库分表和读写分离</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587549827002.png" alt="1587549827002">  </p><p><strong>读写分离：</strong></p><p>在网站的用户达到一定规模后，数据库因为负载压力过高而成为网站的瓶颈。目前大部分的主流数据库都提供主从热备功能，通过配置数据库的主从关系，可以将一台数据库服务器的数据更新同步到另外的数据库服务器上。网站利用数据库的这一功能，实现数据库读写分离，从而改善数据库负载压力。</p><p>应用服务器在写数据的时候，访问主数据库，主数据库通过主从复制机制将数据更新同步到从数据库，这样当应用服务器读数据的时候，就可以通过从数据库获得数据。</p><p><strong>分库分表：</strong></p><p>随着数据库中的数据量越来越大，相应的，查询所需要的时间也越来越多，这个时候，相当于数据的处理遇到了瓶颈，另一方面单库发生意外的时候，需要修复的是所有的数据，而多库中的一个库发生意外的时候，只需要修复一个库。基于此，分库分表就成了必然。分库分表的策略很多，如按照用户、订单、交易、商品等进行分库，不同的数据库中按照时间进行分表。</p><p>分库分表带来性能上的显著提升，但相应的管理和维护成本也比较高，比如数据库服务器的维护、分表策略的维护。为了便于应用程序访问分库分表、读写分离后的数据库，通常在应用服务器端使用专门的数据访问模块，使数据库的分库分表和读写分离对应用透明。</p><h3 id="4-3-5-静态化和CDN"><a href="#4-3-5-静态化和CDN" class="headerlink" title="4.3.5 静态化和CDN"></a>4.3.5 静态化和CDN</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587551715324.png" alt="1587551715324"> </p><p>随着网站业务不断发展，用户规模越来越大，和中国复杂的网络环境，不同地区的用户访问网站时，速度差别也极大。为了提供更好的用户体验，留住用户，网站需要加速网站访问速度。主要手段有使用页面的静态化和CDN。</p><p>操作方式上把一些页面，比如某些商品的详情信息，在发布商品时将页面静态化，静态化页面和静态资源可以放在CDN服务器，部署在网络服务提供商的机房，用户在访问静态资源时，可以很好的利用CDN的优点，从距离自己最近的网络提供商机房获取数据。</p><h3 id="4-3-6-异步解耦"><a href="#4-3-6-异步解耦" class="headerlink" title="4.3.6 异步解耦"></a>4.3.6 异步解耦</h3><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587552453810.png" alt="1587552453810"> </p><p>应用之间的服务存在互相调用的情况，但有些场景下，并不需要同步调用，比如某个业务完成后，需要短信通知对方，而短信接收的时间晚几秒钟都是可以接受的，此时就不需要同步处理了，我们可以使用消息队列，把发送短信的内容扔到消息队列中，达到异步处理的效果，从而增强业务系统的性能，此时对于服务之间也达到了解耦的功能，服务之间的依赖减少了。</p><h2 id="4-3-微服务架构"><a href="#4-3-微服务架构" class="headerlink" title="4.3. 微服务架构"></a>4.3. 微服务架构</h2><p>微服务架构是分布式架构的深化，分布式架构偏向于部署和环境，比如上边提到的应用、数据库、缓存等，在多台机器上进行部署，就属于分布式。微服务架构通过<strong>业务拆分</strong>实现服务组件化，通过组件组合快速开发系统，业务单一的服务组件又可以独立部署，使得整个系统变得清晰灵活。</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1587556615392.png" alt="1587556615392"> </p><p>大量的分布式服务又使得架构实现面临问题，如服务注册发现，服务统一接入和权限控制，服务的负载均衡，服务配置的集中管理，服务熔断，服务监控等。</p><p>所以微服务架构是由这些基础的服务组件和业务微服务组件共同组成：</p><ul><li>服务注册发现组件： 进行服务治理</li><li>服务网关组件：提供统一入口和权限控制</li><li>负载均衡组件：提供客户端或服务器端的负载均衡</li><li>集中配置组件：提供服务集中管理</li><li>熔断器组件：提供服务熔断</li><li>服务追踪组件：提供服务监控      </li></ul><p>采用微服务架构后，项目可以快速迭代与持续交付。但是也带了一些弊端，开发人员除了需要关注业务逻辑实现外还需要考虑业务的一系列问题，比如服务注册，服务发现，服务通讯，负载均衡，服务熔断，服务超时等，这些是非常重要的。大多数时候，我们需要依赖第三方库或者组件来提供这些服务，例如Hystrix，Eureka、Zookeeper等组件，在其服务组织中起到了广泛的应用。 </p><h1 id="5-服务化"><a href="#5-服务化" class="headerlink" title="5. 服务化"></a>5. 服务化</h1><h2 id="5-1-为什么需要服务化"><a href="#5-1-为什么需要服务化" class="headerlink" title="5.1 为什么需要服务化"></a>5.1 为什么需要服务化</h2><p>传统企业或者很多企业的软件，大多不止一套系统，都是各个独立大系统的堆砌。整体存在的问题是：</p><ul><li>扩展性差</li><li>可靠性不高</li><li>维护成本还很大</li><li>重复轮子很多</li></ul><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596672843877.png" alt="1596672843877"> </p><p>非常容易能够想到，解决这些问题的方法是：<strong>组件化、服务化</strong>。</p><p>微服务架构，将各个组件或者模块分散到各个服务中，对整个系统实现解耦。那微服务架构强调的重中之重就是业务系统需要完善的组件化和服务化。什么是组件化？</p><p>组件化，即将一个大系统，按照一定的业务或者技术维度，拆分成独立的组件。目的是为了分而治之，为了可重用，为了减少耦合度。比如按照技术维度：文件上传下载组件、短信发送组件、搜索组件、缓存组件；按照业务维度：用户中心、商品中心、支付中心等。</p><p>阿里巴巴提出 大中台，小前台战略，就是把组件化、插件化、服务化解决方案到极致。通过产品线公共业务或者技术下沉，形成各种技术中台或者业务中台。</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1596674092406.png" alt="1596674092406"> </p><h2 id="5-2-服务化的好处"><a href="#5-2-服务化的好处" class="headerlink" title="5.2 服务化的好处"></a>5.2 服务化的好处</h2><ul><li>调用简单</li><li>代码复用</li><li>业务隔离</li><li>数据库解耦</li></ul><h2 id="5-3-服务化的问题"><a href="#5-3-服务化的问题" class="headerlink" title="5.3 服务化的问题"></a>5.3 服务化的问题</h2><p> 有利必有弊，服务化也会面临很多问题：</p><ul><li>本身不大的系统，业务不复杂的系统也不需要微服务架构</li><li>多个模块数据库，分布式事务是一个挑战</li><li>增加了测试、运维等事务的复杂性</li></ul><h1 id="6-常见的需求问题"><a href="#6-常见的需求问题" class="headerlink" title="6. 常见的需求问题"></a>6. 常见的需求问题</h1><h2 id="6-1-需求不明确"><a href="#6-1-需求不明确" class="headerlink" title="6.1. 需求不明确"></a>6.1. 需求不明确</h2><ul><li>盲人摸象，各阶段人员只掌握了一段</li><li>初期阶段，业务还在摸索</li><li>各部门目标和kpi不一致，需求有冲突</li></ul><h2 id="6-2-需求理解不一致"><a href="#6-2-需求理解不一致" class="headerlink" title="6.2. 需求理解不一致"></a>6.2. 需求理解不一致</h2><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597105195972.png"></p><blockquote><p><strong>客户</strong>：我家有三个小孩，我须要一个能三个人用的秋千。它是由一绳子吊在我园子里的树上。</p><p><strong>项目经理</strong>：秋千这东西太简单了，就是一块板子，两边用绳子吊起来，挂在树上的两个枝子上。</p><p><strong>设计师</strong>：这个无知的项目经理，两个树枝上挂上秋千哪还能荡漾起来吗？除非是把树从中截断再支起来，这样就满足要求了。</p></blockquote><p>项目最重要的阶段是进行需求分析，明白真正的需求。项目需求指的是用户真正需要什么，而不是供应商假设用户需要什么和供应商能够供应什么。需求的准确定位就是要按用户要求，对目标系统提出完整、准确、清晰、具体要求。这对一个项目的成功来说非常重要，需求分析做得不好，就会造成需求不断变更，从而影响进度、费用，甚至会导致项目失败。</p><h2 id="6-3-需求自身经常变动"><a href="#6-3-需求自身经常变动" class="headerlink" title="6.3. 需求自身经常变动"></a>6.3. 需求自身经常变动</h2><ul><li>尽可能地分析清楚哪些是稳定的需求，哪些是易变的需求。以便在进行系统设计时，将软件的核心建筑在稳定的需求上，否则将会吃尽苦头。</li><li>在合同中一定要说清楚“做什么”和“不做什么”。如果合同含含糊糊，日后扯皮的事情就多。</li></ul><h1 id="7-需求获取"><a href="#7-需求获取" class="headerlink" title="7. 需求获取"></a>7. 需求获取</h1><h2 id="7-1-需求来源"><a href="#7-1-需求来源" class="headerlink" title="7.1 需求来源"></a>7.1 需求来源</h2><p><strong>干系人</strong></p><p>干系人（Stake holder）：对于系统有利益关系的个人，团队、组织和其他系统。</p><p>项目干系人包括但不限于：</p><ul><li>投资方：系统的投资方</li><li>主管方：批准/管理系统的</li><li>最终用户：用户/系统受益方</li><li>操作方：操作/维护系统的</li><li>监管方：认证系统的</li><li>测试方：负责系统验收</li></ul><p>示例：XX信贷管理系统</p><pre class="line-numbers language-none"><code class="language-none">投资方：     资金部主管方：   信息化部用户代表：   市场部最终用户：   营业员监管方：     审计部测试方：     信息化部操作方：     信息化部<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-2-需求分类"><a href="#7-2-需求分类" class="headerlink" title="7.2 需求分类"></a>7.2 需求分类</h2><p>软件需求的三个层次：</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597130708874.png"></p><p><strong>1. 业务需求</strong></p><p>描述组织或客户的高层次目标，通常问题定义本身就是业务需求。业务需求就是系统目标，它必须是业务导向、可度量、合理、可行的。这类需求通常来自于高层，例如项目投资人、实际用户的管理者、市场营销部门或产品策划部门。</p><p>业务需求从总体上描述了为什么要开发系统<strong>（why）</strong>，希望达到什么目标。比如“希望实施CRM后公司的客户满意度达到80％以上”。</p><p>业务需求对之后的用户需求和功能需求起了限定作用，任何用户和功能需求都必须符合业务需求。</p><p><strong>2. 用户需求</strong></p><p>用户需求是指描述用户使用产品必须要完成什么任务，怎么完成需求，通常是进行用户访谈、调查，对用户使用的场景进行整理，从而建立从用户角度的需求。</p><p>用户需求必须能够体现软件系统将给<strong>用户带来的业务价值</strong> ，也就是说用户需求描述了用户能使用系统来做些什么（<strong>what</strong>），这个层次的需求是非常重要的。</p><p>用户需求可细分为：</p><ul><li><p><strong>基本型需求：</strong>产品功能必须满足的用户需求。例如社交产品的加友功能；音乐产品的听歌功能。</p></li><li><p><strong>期望型需求：</strong>用户满意度随着此类需求的满足程度而线性提升或下降。当此类型需求越得到满足则用户满意度越高，反之则用户满意度越低。例如，音乐类产品的歌曲越多越好。</p></li><li><p><strong>兴奋型需求：</strong>是一种完全出乎用户意料的属性或功能。例如微信的摇一摇。</p></li><li><p><strong>无差异型需求：</strong>这类需求无论满足与否，用户满意度都不会受其影响，用户对此因素并不在意。例如产品的简介。</p></li><li><p><strong>反向型需求：</strong>用户没有此需求，提供后满意度适得其反。例如产品付费功能。</p></li></ul><p><strong>3. 功能需求</strong></p><p>功能需求描述的是开发人员需要实现什么，是需求的主体，它描述的是开发人员如何设计具体的解决方案来实现这些需求（<strong>how</strong>），其数量往往比用户需求高一个数量级。 </p><p>这些需求记录在软件<strong>需求规格说明（Software Requirments Specification）</strong>中。 SRS完整地描述了软件系统的预期特性。开发、测试、质量保证、项目管理和其他相关的项目功能都要用到 SRS。</p><h2 id="7-3-获取步骤"><a href="#7-3-获取步骤" class="headerlink" title="7.3 获取步骤"></a>7.3 获取步骤</h2><blockquote><p>我们必须知道获取需求的具体步骤</p></blockquote><ol><li>标识项目干系人： 干系人列表</li><li>与项目干系人交流：沟通计划</li><li>收集需求：  需求沟通纪要</li><li>重要性排序：需求优先级</li><li>选择需求：  根据资源和约束，选择实现的需求</li><li>记录需求：编写文档</li></ol><p>软件研发是一个团队性工作，各个角色协同工作，共同把项目完成。每个阶段和角色的产出，又是下一阶段和角色的输入。比如作为架构师，会根据产品经理编写的功能需求说明书，进行整体系统架构设计，而开发人员，也会根据产品经理的需求说明书和架构师的概要设计，做详细的设计和开发。</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597279081577.png"></p><h1 id="8-需求要素"><a href="#8-需求要素" class="headerlink" title="8. 需求要素"></a>8. 需求要素</h1><h2 id="8-1-角色、场景"><a href="#8-1-角色、场景" class="headerlink" title="8.1 角色、场景"></a>8.1 角色、场景</h2><p>一般来说每个业务活动是对用户使用场景的抽象（例如电商购物活动），每个业务活动可能包含多个场景（例如商品浏览、购物车、下单、支付），分析使用场景时应按照业务活动为主线逐个进行分析，每个业务活动分析时应包含如下内容：</p><p><strong>1.明确活动执行角色</strong></p><p><strong>2.明确活动执行的前置条件</strong></p><p><strong>3.明确不同场景：</strong></p><p>一个业务活动可能包含正常的使用场景、备选使用场景和异常使用场景</p><p><strong>4.明确每个场景的执行步骤</strong></p><p><strong>5.业务规则和约束：</strong></p><p>明确在每个业务活动下应遵循的业务规则和约束，这里一般是与业务流程相关的行为规则，或与数据实体相关的数据规则（比如某个字段的长度）</p><h2 id="8-2-业务流程"><a href="#8-2-业务流程" class="headerlink" title="8.2 业务流程"></a>8.2 业务流程</h2><p>针对流程类需求必须进行业务流程分析。需求人员进行流程分析应遵循如下方法：</p><p>（1）业务流程确认</p><p>一个流程为一个业务事件，一般是外部角色发起或系统内部主动发起（比如时间事件或状态事件），发起后会触发一系列业务活动。</p><p>（2）角色及业务活动确认</p><p>流程图中的每个泳道都必须对应到角色，每个角色对应多个业务活动。需求人员在确认业务活动时一定要保证活动的粒度，一个业务活动一定是由一个角色完成且每个业务活动都是有价值的。</p><p>（3）业务活动间关系及数据确认</p><p>确定所有业务活动的前后关系，并明确流程间传递的数据实体。</p><p>（4）流程整体瓶颈分析</p><p>一般若某个角色业务活动工作量较大，或流程涉及高级领导，一般都会造成瓶颈，这种情况需求人员应想办法分散工作量提出流程优化建议。</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/%E5%AE%A2%E6%88%B7%E5%8F%8D%E9%A6%88%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.png" alt="客户反馈问题处理流程"></p><h2 id="8-3-数据实体"><a href="#8-3-数据实体" class="headerlink" title="8.3 数据实体"></a>8.3 数据实体</h2><p>针对流程类需求需要分析各业务活动传递的数据实体，统计分析类需求需要分析统计查询条件数据实体和展现数据实体，接口类需求需要分析接口传递数据实体，具体分析包含如下内容：</p><p><strong>1.明确数据实体</strong></p><p>确认需要分析的所有数据实体，明确哪些为系统原有实体、哪些为新增实体、哪些为改造实体。</p><p><strong>2.明确所有数据实体间关系</strong></p><p>实体间关系包含（1对1、1对多、多对多），另外需要分析数据实体变更是否需要保留版本，实体删除（逻辑删除、物理删除）是否影响其它数据实体。</p><p><strong>3.明确数据实体字段</strong></p><p>针对新增数据或改造数据实体需要明确新增字段的名称、字段类型、是否必填、字段取值方式（人工输入、系统自动继承自其它数据实体、系统自动计算需要明确计算公式）。</p><p><strong>4.数据权限分析</strong></p><p>需要分析不同角色在数据权限方面的差异，若涉及纵向多级用户，要说明对于集团/省/地市用户的数据隔离。</p><h2 id="8-4-功能性需求"><a href="#8-4-功能性需求" class="headerlink" title="8.4 功能性需求"></a>8.4 功能性需求</h2><p>系统功能分析是结合系统现状和上述分析进一步明确实现相应用户场景的系统功能，主要还包含内容如下：</p><p><strong>1.功能列表</strong></p><p>分析得出实现上述业务活动对应的功能/接口列表，并明确新增功能、改造功能；</p><p><strong>2.功能/接口关联影响分析</strong></p><p>实现某个业务活动需要新增或改造的功能对其它关联功能/接口的影响分析。比如改造请购池受理功能，可能会影响采购项目创建功能；采购项目创建功能修改一个字段取值范围，会影响项目统计分析和同步ES系统接口。</p><p><strong>3.系统交互原型分析</strong></p><p>需求人员应遵循界面规范，并与研发沟通确定系统交互原型，帮助研发或用户更好的理解需求场景。</p><p>在交互原型中应包含如下内容：</p><ul><li>原型界面的名称、入口，原型间关联关系和使用角色</li><li>页面内容、格式及排序方法</li><li>操作要点：比如交互的信息提示、界面规则和约束（比如界面以不同颜色显示不同的校验结果）。</li></ul><p><strong>4.算法分析：</strong></p><p>在系统功能交互时涉及比较复杂的算法，需要单独对算法进行分析。</p><h2 id="8-5-非功能性需求"><a href="#8-5-非功能性需求" class="headerlink" title="8.5 非功能性需求"></a>8.5 非功能性需求</h2><p>包含需求的可行性分析、健壮性分析、可扩展性分析、执行效率分析，可行性分析从以下几个方面进行：</p><p><strong>1.技术可行性</strong> 系统交互实现方式与研发确认是否可行，需求人员在与研发沟通过程中需要不断积累哪些功能实现在技术层面很难支撑。</p><p><strong>2.时间可行性</strong> 根据用户的上线时间要求分析是否可满足要求。</p><p><strong>3.合法合规可行性</strong> 分析用户需求是否满足国家法规或公司法规要求。</p><p><strong>4.数据安全性分析</strong> 用户需求是否满足信息系统安全要求。</p><h1 id="9-案例：电商订单系统"><a href="#9-案例：电商订单系统" class="headerlink" title="9. 案例：电商订单系统"></a>9. 案例：电商订单系统</h1><h2 id="9-1-概述"><a href="#9-1-概述" class="headerlink" title="9.1 概述"></a>9.1 概述</h2><p>电商所有模块中，订单系统是非常核心的一个子系统，决定了整个流程能不能顺畅的执行，起着承上启下的作用，其他模块都是围绕订单系统进行构建的。订单系统出问题，或者功能流程设计不完善、不准确，将会造成整个电商系统整体或局部业务流转不顺畅，甚至导致项目的失败。</p><p>订单系统的作用是：管理订单类型、订单状态，收集关于商品、优惠、用户、收货信息、支付信息等一系列的订单实时数据，进行库存更新、订单下发等一系列动作。订单系统业务的基本模型涉及用户、商品（库存）、订单、付款。订单基本流程是下订单–&gt;减库存，这两步必须同时完成，不能下了订单不减库存（超卖），或者减了库存没有生成订单（少卖）。</p><p>下面我们从需求分析的角度，来看一看B2C电商中先款后货模式下的订单系统设计的过程。</p><h2 id="9-2-角色"><a href="#9-2-角色" class="headerlink" title="9.2 角色"></a>9.2 角色</h2><p>一个订单系统，涉及到的角色包括：</p><p><strong>实体角色：</strong></p><ul><li>C端用户</li><li>B端商户</li><li>电商平台</li><li>配送商</li><li>第三方平台</li></ul><p><strong>系统关系：</strong></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597293830525.png"></p><h2 id="9-3-场景-用例"><a href="#9-3-场景-用例" class="headerlink" title="9.3 场景(用例)"></a>9.3 场景(用例)</h2><p>从用户的角度，我们看到的用户场景如下：</p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597288136468.png"></p><p><strong>用例图：</strong></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597294422392.png"></p><h2 id="9-4-功能"><a href="#9-4-功能" class="headerlink" title="9.4 功能"></a>9.4 功能</h2><p><strong>订单系统业务架构：</strong></p><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/1597297790269.png"></p><p><strong>（1）订单服务</strong></p><p>该模块的主要功能是用户日常使用的服务和页面，主要有订单列表、订单详情、在线下单等，还包括为公共业务模块提供的多维度订单数据服务。</p><p><strong>（2）订单逻辑</strong></p><p>订单系统的核心，起着至关重要的作用，在订单系统负责管理订单创建、订单支付、订单生产、订单确认、订单完成、取消订单等订单流程。还涉及到复杂的订单状态规则、订单金额计算规则以及增减库存规则等。在4节核心功能设计中会重点来说。</p><p><strong>（3）底层服务</strong></p><p>信息化建设达到一定程度的企业，一般会将公司公共服务模块化，比如：产品，会构建对应的产品系统，代码、数据库，接口等相对独立。但是，这也带来了一个问题，比如：订单创建的场景下需要获取的信息分散在各个系统。</p><p>如果需要从各个公共服务系统调用：一是会花费大量时间，二是代码的维护成本非常高。因此，订单系统接入所需的公共服务模块接口，在订单系统即可完成对接公共系统的服务。</p><h2 id="9-5-实体"><a href="#9-5-实体" class="headerlink" title="9.5 实体"></a>9.5 实体</h2><p><img src="%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95.assets/%E8%AE%A2%E5%8D%95%E5%AE%9E%E4%BD%93.png" alt="案例 - 订单实体"></p><h2 id="9-6-流程"><a href="#9-6-流程" class="headerlink" title="9.6 流程"></a>9.6 流程</h2><p>流程是指从平台角度出发，将订单从创建到完成的整个流转过程进行抽象，从而形成了一套标准流程规则。每个流程触发的条件又可分为系统触发和人工触发两种场景。</p><p>下面以一个通用B2C商城的订单系统为例，根据其实际业务场景，其订单流程可抽象为5大步骤：<strong>订单创建&gt;订单支付&gt;订单生产&gt;订单确认&gt;订单完成。</strong> 如下图：</p><img src="软件架构与需求分析方法.assets/v2-02e85a855fe9cb1ec372bae80c5e7f81_720w.jpg" style="zoom: 200%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;软件架构与需求分析方法&quot;&gt;&lt;a href=&quot;#软件架构与需求分析方法&quot; class=&quot;headerlink&quot; title=&quot;软件架构与需求分析方法&quot;&gt;&lt;/a&gt;软件架构与需求分析方法&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;学习目标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    <category term="阶段一 中台战略与组件化开发专题课程" scheme="https://chenliren9527.github.io/categories/%E9%98%B6%E6%AE%B5%E4%B8%80-%E4%B8%AD%E5%8F%B0%E6%88%98%E7%95%A5%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%93%E9%A2%98%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="Java高手课" scheme="https://chenliren9527.github.io/tags/Java%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="软件架构" scheme="https://chenliren9527.github.io/tags/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/"/>
    
    <category term="需求分析" scheme="https://chenliren9527.github.io/tags/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    
    <category term="分布式架构" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84/"/>
    
    <category term="单体架构" scheme="https://chenliren9527.github.io/tags/%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84/"/>
    
    <category term="电商订单系统" scheme="https://chenliren9527.github.io/tags/%E7%94%B5%E5%95%86%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="中台战略与组件化开发专题课程" scheme="https://chenliren9527.github.io/tags/%E4%B8%AD%E5%8F%B0%E6%88%98%E7%95%A5%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%93%E9%A2%98%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>React技术全家桶</title>
    <link href="https://chenliren9527.github.io/2021/04/18/react-ji-zhu-quan-jia-tong/"/>
    <id>https://chenliren9527.github.io/2021/04/18/react-ji-zhu-quan-jia-tong/</id>
    <published>2021-04-18T14:05:52.000Z</published>
    <updated>2022-05-17T05:35:19.673Z</updated>
    
    
    
    
    <category term="前端" scheme="https://chenliren9527.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://chenliren9527.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://chenliren9527.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(9)-商城项目简历</title>
    <link href="https://chenliren9527.github.io/2021/02/05/jiu-ye-ji-zhu-jia-qiang-9-shang-cheng-xiang-mu-jian-li/"/>
    <id>https://chenliren9527.github.io/2021/02/05/jiu-ye-ji-zhu-jia-qiang-9-shang-cheng-xiang-mu-jian-li/</id>
    <published>2021-02-05T14:09:38.000Z</published>
    <updated>2022-05-17T05:35:21.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-项目撰写"><a href="#1-项目撰写" class="headerlink" title="1. 项目撰写"></a>1. 项目撰写</h2><table><thead><tr><th>项目名称</th><th>Xxx 商城<br> **书城、**农贸商城、商贸平台、爱乐买、爱购网、天天购、进<br>口食品批发网、乐家易商城、酷买网、买多网、邮乐商城…</th></tr></thead><tbody><tr><td><strong>开发环境与工具</strong></td><td>操作系统：CentOS7<br>数据库：mysql/mycat、redis、mongoDB<br>应用服务器：tomcat、Nginx<br>开发工具：IDEA/Eclipse/MyEclipse；Edraw Max；Power Designer；<br>Maven；Git；Navicat</td></tr><tr><td><strong>使用技术</strong></td><td>SpringCloud、FastDFS、SpringSecurity<br>Spring、Spring Boot、SpringMVC、MyBatis<br>Jsp、JSTL、jQuery、vue、Bootstrap、json/jsonp、JWT<br>Lucene、ElasticSearch<br>Mysql、Redis、MongoDB、Sharding Sphere、MyCat<br>Maven、Git、Nginx、HttpClient、Spring Task、RabbitMQ、Lua、OpenResty</td></tr><tr><td><strong>项目团队组成</strong></td><td>—工作在大型开发公司<br>产品经理：3 人，确定需求以及给出产品原型图。<br>项目经理：1 人，项目管理。<br>前端团队：5 人，根据产品经理给出的原型制作静态页面。<br>后端团队：20 人，实现产品功能。<br>测试团队：5 人，测试所有的功能。<br>运维团队：3 人，项目的发布以及维护。（如果上线了的话）<br>总共人数：看开发的讨论组人数有42 人<br>—工作在中小型开发公司<br>产品经理：1 人，确定需求以及给出产品原型图。<br>项目经理：1 人，项目管理。<br>前端团队：3 人，根据产品经理给出的原型制作静态页面。<br>后端团队：8 人，实现产品功能。<br>测试团队：3 人，测试所有的功能。<br>运维团队：1 人，项目的维护。（如果上线了的话）<br>总共人数：看开发的讨论组人数有17 人</td></tr><tr><td>开发时间与计划</td><td>———- 二次开发，开发二期项目的话<br>鉴于同学们往往写1 年多的工作经验；所以项目二（二次开发）在<br>简历中的时间跨度大概可以到8 个月；周期可以如下分配：<br>界面设计、美工与数据库、详细设计、优化一期：2 个月<br>开发：5 个月<br>测试：1 个月<br>部署准备、文档、需求变更修改：2 个月<br>———- 全新开发<br>工作经验可以写2 年多；所以项目二（全新开发）在简历中的时间<br>跨度大概可以到18 个月；周期可以如下分配：<br>需求分析、界面设计、美工与数据库、详细设计：4 个月<br>开发：10 个月<br>测试：2 个月<br>部署准备、文档、需求变更修改：2 个月</td></tr><tr><td><strong>项目描述</strong></td><td>描述1：<br>**商城是一个B2C 的电子商务网站，主要是方便地区网友们快速、<br>便捷地找到物美价廉的商品。**商城除了展示各类商品外，同时也<br>积极与各地区想加入电商的卖家沟通合作，实现商品的更多、更优<br>质和更快捷的服务和折扣商品。整个网站采用分布式架构设计，其<br>中构成整个网站的三大类系统包括了运营商后台管理系统、商家后<br>台管理系统、前台系统。其中前台系统中有：门户系统、搜索系统、<br>详情系统、秒杀系统、购物车系统、订单系统、单点登录系统、用<br>户中心系统、帮助中心系统、用户论坛等。<br><br>描述2：<br>**商城打造的是“社区+电商”的模式，用户可在本社区中有自己的<br>圈子、电商生活购物网站；更贴切本社区用户群体的生活所需。整<br>个电商网站实现的功能较多；系统采用分布式架构，包括有后台管<br>理系统、商家后台管理、门户系统、商家门户系统、搜索系统、详<br>情系统、秒杀系统、购物车系统、订单系统、单点登录系统、用户<br>中心系统、帮助中心系统、用户论坛等子系统。<br><br>描述3：<br>**商城是xxx 地区为了更好地服务区域城市家庭，提供更加优质的<br>网购服务的一个家电类（生活类、化妆品类、农产品。。。）B2C<br>网上商城。整个网站采用分布式架构设计，其中构成整个网站的两<br>大类前后台系统包括了后台管理系统、前台系统。其中前台系统中<br>有：门户系统、搜索系统、详情系统、秒杀系统、购物车系统、订<br>单系统、评论系统、用户中心系统、帮助中心系统、用户论坛等。</td></tr><tr><td><strong>项目职责</strong></td><td><strong>组长版本：</strong><br>前期需求收集和整理需求文档；辅助系统设计师设计系统原型；配<br>合美工根据系统原型进行切图；根据需求文档进行详细设计、数据<br>库设计；编写提供给手机端【选择：认证中心系统、购物车系统、<br>订单系统、搜索系统、商品详情系统、会员管理系统、评论系统】<br>的RESTful 接口文档；协调项目组开发人员进行功能模块开发。在系<br>统功能上开发了后台管理系统的**、前台系统的搜索系统、用户中<br>心、**，门户系统首页静态化；对接Oauth2.0 用户认证系统，部署<br>Oauth2.0 用户认证的服务器端和调研分析使用Spring Security 整合<br>Oauth2.0 及JWT 最终实现整个商城的各个子系统的统一登录认证。<br>安排测试计划和整合系统的各个功能模块并编写系统相关文档。<br><br><strong>组员版本：</strong><br>参与并完善需求、设计文档中负责开发的功能模块的UML 图形和功<br>能描述、进行数据库设计。在开发阶段按照项目组的要求独立完成<br>了后台管理系统的**、前台系统的搜索系统、购物车系统、用户中<br>心系统，帮助中心和商品详情页面静态化；商品详情页面静态过程<br>中应用异步、高效可持久化消息的RabbitMQ 实现商品数据同步。<br>在开发以外也协助编写系统相关文档。<br>具体在项目中负责开发的功能主要有：<br><br><strong>管理后台</strong>：<br>商品审核、规格管理、品牌管理、分类管理、分类模板管理、内容<br>管理、优惠管理、活动管理、商家管理、会员管理、帮助管理、反<br>馈管理、评论管理、支付管理、结算管理、日志管理、论坛管理、<br>订单管理、秒杀管理、系统配置、统计<br><br>商品审核：查询、审核、关闭、删除商家提交的商品，利用RabbitMQ<br>同步商品到搜索、详情、订单系统<br>规格管理：对商品的规格及其选项进行管理（尺寸、内存…）<br>品牌管理：管理商品的所有品牌信息（名称、图标）<br>分类管理：商品的多级分类信息管理<br>分类模板管理：对应于不同分类，可以选择的品牌和规格的管理；<br>从而实现按品牌、规格选项各种维度对于商品的查询提供数据支撑<br>内容管理：主要管理门户系统首页的所有内容；如各类广告、新闻、<br>楼层数据<br>优惠管理：设置商城的优惠规则的管理，对某一时段的某些商品可<br>以进行折扣优惠策略的设置<br>活动管理：针对某些品牌特别设置的活动商品管理（商品来自商品<br>管理），之后这些商品在门户系统一个特别的活动页面展示点击可<br>以查看详情并购买<br>商家管理：在商城中入驻的商家（卖家）的管理，主要有查询、审<br>核、禁用、删除、查询、修改商家信息<br>会员管理：在商城中注册的购买者（买家）的信息管理，主要有查<br>询、禁用、修改、审核、导入导出等功能<br>帮助管理：管理在帮助中心系统中需要展示的信息<br>反馈管理：管理在帮助中心系统中用户提出的问题的回复处理<br>评论管理：管理在商品详情页面中用户对于商品的评论信息<br>支付管理：管理用户微信支付后的订单支付日志信息<br>结算管理：管理各个商家的销售额及每月的结算金额及其结算日志、<br>导出管理<br>日志管理：管理短信发送日志信息<br>论坛管理：管理在论坛系统中的贴和回复信息<br>订单管理：管理用户提交的订单和对应的商品、支付状态等信息<br>秒杀管理：管理秒杀商品（查询、审核）<br>系统配置：管理微信支付接口的配置信息<br>统计管理：统计商品分类的销售情况；日、月热门销售商品、好评<br>商品<br><br>——————————————————————–<br><strong>前台系统：</strong><br>门户系统、搜索系统、详情系统、秒杀系统、购物车系统、订单系<br>统、认证中心系统、用户中心系统、帮助中心系统、用户论坛、评<br>价系统<br><br>门户系统：使用thymeleaf 及Nginx 实现门户系统首页面完全静态化；<br>具体功能包括：动态导航条、新闻、大广告轮播展示、热门商品列<br>表、各楼层内容展示；该页的所有数据都来自内容管理模块。<br><br>搜索系统：利用ElasticSearch 实现动态搜索整个商城的所有商品；<br>并且利用ElasticSearch 的分组查询加载商品分类，过滤查询（应用<br>ElasticSearch 嵌套域对应动态多变的商品规格）实现在关键字的查询<br>基础上实现按照点击的过滤条件对商品进行过滤与京东、天猫的功<br>能一致。为了保证高可用性和效率， 个人分析研究搭建了<br>ElasticSearch 集群（3 台ElasticSearch 服务器集群， 3 个分片，每个<br>分片2 个副本）<br><br>详情系统：商品详情在商品审核之后利用Thymeleaf 模板生成商品<br>静态页面并结合Nginx 实现商品详情页面静态化；在同步的技术调<br>研分析中选择了可异步、持久化、重发的RabbitMQ 进行同步信息<br>的传递并最终实现近实时的商品同步到搜索系统、详情系统等<br><br>秒杀系统：为了应付秒杀系统的高并发及实时计算商品库存的需求，<br>在进入秒杀的时候将全部当下的商品加入redis 保证高效性，并在下<br>单的时候充分利用redis 的单线程特性，使用其setnx 及setget 方法<br>自行编写分布式锁对订单生成与商品库存的增减进行锁定解决商品<br>并发数据一致性问题。由于考虑到redis 的负载问题，也对redis 搭<br>建了集群（5 个主节点，共10 台redis）保证高可用和效率。在订单<br>未支付之前秒杀订单都存放在redis 中，微信支付成功后将订单和库<br>存都同步到mysql 数据库中。对于商品在redis 中的数据同步应用<br>Spring task 进行定时更新<br><br>购物车系统：商城提供用户在登录状态下可以将商品加入购物车；<br>之后再调用支付系统（微信支付）服务创建微信支付订单生成二维<br>码，用户扫描二维码后，根据微信支付系统的回调信息实时同步订<br>单的支付状态。<br><br>订单系统：主要提供订单生成、查询服务，在订单的生成、商品库<br>存的增减时充分利用redis 的单线程特性，使用其setnx 及setget 方<br>法自行编写分布式锁对订单生成与商品库存的增减进行锁定解决商<br>品并发数据一致性问题。采用了Seata 分布式事务控制在下单时候<br>的订单生成、商品库存扣减、用户积分增加的事务保障。<br><br>单点登录系统：采用了Spring Security Oauth2.0 + JWT 的方案实现在<br>各个微服务中的单点登录。搭建了Oauth 认证中心，采用密码模式<br>实现用户的动态登录并利用私钥签发生成令牌token。在其它微服务<br>中可以配置为资源服务器角色，在有需要请求获取该服务器资源的<br>时候需要携带登录认证时的令牌，资源服务器利用公钥校验令牌获<br>取用户信息，并根据用户的角色权限返回对应的资源。<br><br>用户中心系统：用户可以在用户中心系统（我的畅购）中查询订单，<br>支付订单，发货提醒，确认收货，退货，评价，物流信息跟踪等订<br>单相关操作；也可以查看收藏商品、我的足迹、收货地址管理、个<br>人信息设置等。<br><br>帮助中心系统：展示畅购商城中的一些常见购物问题，并对这些问<br>题有对应的说明<br><br>评论系统：在商品的详情页面中，可以加载曾经购买过该商品的用<br>户对应商品的评论信息，这些信息全部都存储到MongoDB，查询时<br>候再从MongoDB 查询返回提高系统的查询效率。<br><br>用户论坛：展示用户在畅购商城的论坛中的帖子，也可以发帖、晒<br>单、回帖等</td></tr></tbody></table><h2 id="2-项目面试问题"><a href="#2-项目面试问题" class="headerlink" title="2. 项目面试问题"></a>2. 项目面试问题</h2><h3 id="请描述你做的商城项目"><a href="#请描述你做的商城项目" class="headerlink" title="请描述你做的商城项目"></a>请描述你做的商城项目</h3><p>**商城是xxxx 公司开发的一个的B2C 的网上商城，我们公司负责整个网站的开<br>发、运营。在系统中商家可以申请入驻到平台进行商品的销售，会员可以在商城<br>浏览商品、搜索商品、使用购物车、购买商品下订单，以及参加秒杀团购等各种<br>活动。网站前台共分为门户、搜索、商品详情页、购物车、秒杀、用户中心、单<br>点登陆系统、帮助中心、论坛等子系统。我主要负责了后台管理系统的<em>等模块、<br>前台系统的\</em>*；在开发过程中也对项目中遇到的一些关键技术进行了调研分析与<br>实现。（如：ElasticSearch 的应用，RabbitMQ 的应用，redis 分布式锁的实现，单<br>点登录系统的部署）</p><h3 id="请描述RESTful-是什么"><a href="#请描述RESTful-是什么" class="headerlink" title="请描述RESTful 是什么"></a>请描述RESTful 是什么</h3><p>REST 是一种架构风格，其核心是面向资源，REST 专门针对网络应用设计和开发<br>方式，以降低开发的复杂性，提高系统的可伸缩性。</p><h3 id="说明MyBaits-与Hibernate-的区别"><a href="#说明MyBaits-与Hibernate-的区别" class="headerlink" title="说明MyBaits 与Hibernate 的区别"></a>说明MyBaits 与Hibernate 的区别</h3><p><strong>Mybatis 优势</strong><br>MyBatis 可以进行更为细致的SQL 优化，可以减少查询字段。<br>MyBatis 容易掌握，而Hibernate 门槛较高。<br><strong>Hibernate 优势</strong><br>Hibernate 的DAO 层开发比MyBatis 简单，Mybatis 需要维护SQL 和结果映射。<br>Hibernate 对对象的维护和缓存要比MyBatis 好，对增删改查的对象的维护要方<br>便。Hibernate 数据库移植性很好，MyBatis 的数据库移植性不好，不同的数据库<br>需要写不同SQL。Hibernate 有更好的二级缓存机制，可以使用第三方缓存。<br>MyBatis 本身提供的缓存机制不佳。<br>MyBatis：小巧、方便、高效、学习简单、半自动、移植性不好<br>Hibernate：强大、方便、高效、学习复杂、全自动、移植性好</p><h3 id="为什么要选SSM-这个框架"><a href="#为什么要选SSM-这个框架" class="headerlink" title="为什么要选SSM 这个框架"></a>为什么要选SSM 这个框架</h3><p>选择是因为mybatis 更加灵活，动态编写sql 语句，提供xml 标签，支持编写动<br>态sql，解除sql 与程序代码的耦合，容易上手方便后续开发团队的运维</p><h3 id="描述各个子系统是如何协调工作的"><a href="#描述各个子系统是如何协调工作的" class="headerlink" title="描述各个子系统是如何协调工作的"></a>描述各个子系统是如何协调工作的</h3><p>项目主体部分采用的是Dubbo 面向服务的分布式调度框架，利用Zookeeper 作为<br>注册中心实现各系统之间服务的调用。<br>项目主体部分采用的是SpringCloud 微服务框架，利用Eureka、Nacos 作为注册<br>中心实现各系统之间服务的调用。<br>另外使用RabbitMQ 实现系统之间异步信息通信。前端跨域调用使用CORS 技术。</p><h3 id="多台服务器之间的session-是如何共享的"><a href="#多台服务器之间的session-是如何共享的" class="headerlink" title="多台服务器之间的session 是如何共享的"></a>多台服务器之间的session 是如何共享的</h3><p>tomcat 可以开启、配置集群实现sessiond 共享；<br>而在商城项目中如果有需要使用各个子系统都需要共用的数据，使用的是Redis</p><h3 id="如何保存商品图片"><a href="#如何保存商品图片" class="headerlink" title="如何保存商品图片"></a>如何保存商品图片</h3><p>在电商项目中需要保存大量的图片，需要一个独立的图片服务器来保存，而且存<br>储的容量需要可扩展。并且还需要解决在高并发及高可用的问题。可采用FastDFS<br>分布式文件系统来保存图片。FastDFS 可以搭建服务器集群，可实现存储空间的<br>水平扩展、负载均衡以及服务器的高可用问题。</p><h3 id="静态化实现方案"><a href="#静态化实现方案" class="headerlink" title="静态化实现方案"></a>静态化实现方案</h3><p>创建详情系统，此系统的功能就是生成静态化页面，例如商品详情页面静态<br>化。将此工程独立部署到一个服务器上，页面就生成到当前服务器的磁盘上，并<br>且此工程监听MQ 的消息，一旦商品在后台工程审核通过后，此工程将接收到消<br>息并且生成静态页面。在此服务器上安装一个nginx 做为访问静态资源的http 服<br>务器。</p><h3 id="为什么要使用MQ；"><a href="#为什么要使用MQ；" class="headerlink" title="为什么要使用MQ；"></a>为什么要使用MQ；</h3><p>项目中使用到了RabbitMQ，可以实现系统之间的异步通信和消息的持久化，从<br>而实现业务的解耦和执行效率的提升。<br>使用MQ 中间件可以有两种通信方式queue 和topic。Queue 可以实现点到点之<br>间的通信，可以有多个Producer 也可以有多个Consumer，但是消息只能被一个<br>Consumer 接收，一旦消息被消费后就没有了。<br>Topic 可以实现类似广播的通信方式，可以有多个Producer 和多个Consumer，一<br>旦有Producer 发送消息后，此消息可以被所有Consumer 接收。</p><h3 id="RabbitMQ-应用场景"><a href="#RabbitMQ-应用场景" class="headerlink" title="RabbitMQ 应用场景"></a>RabbitMQ 应用场景</h3><p><strong>应用场景1：</strong>当后台系统对商品数据进行添加、删除、修改后，将会发送一个消<br>息变化的消息，此消息通过topic 进行通信，有多个消费端，:商品详情页面的静<br>态页面会重新生成。<br><strong>应用场景2：</strong>用户注册时，向用户注册发送短信验证码，采用queue 方式通信。<br>消费端调用阿里大于短信接口进行短信的发送。<br><strong>应用场景3：</strong>搜索系统数据同步；在商品审核、删除后，采用queue 方式通信。<br>搜索系统获取商品数据并更新到ElasticSearch 中。</p><h3 id="Redis-应用场景"><a href="#Redis-应用场景" class="headerlink" title="Redis 应用场景"></a>Redis 应用场景</h3><p>购物车系统的所有数据；<br>商品价格、库存存储；<br>用户注册验证码；<br>秒杀系统的订单</p><h3 id="Redis-是nosql-数据库，是否适合存储大数据"><a href="#Redis-是nosql-数据库，是否适合存储大数据" class="headerlink" title="Redis 是nosql 数据库，是否适合存储大数据"></a>Redis 是nosql 数据库，是否适合存储大数据</h3><p>Redis 是nosql 数据库，但是redis 是key-value 形式的nosql 数据库，数据是存储<br>到内存中的，适合于快速存取一般作为缓存使用。所以不适合于大数据的存储。<br>并且redis 是单线程的如果某个操作进行大数据的存储的话其他的进程都处于等<br>待状态，这样就降低了性能。所以在redis 中不适合于大数据的存储。如果是类<br>似商品评论这样的不是非常重要的大批量数据，可采用mongodb。</p><h3 id="Redis-缓存穿透、雪崩与击穿"><a href="#Redis-缓存穿透、雪崩与击穿" class="headerlink" title="Redis 缓存穿透、雪崩与击穿"></a>Redis 缓存穿透、雪崩与击穿</h3><p><strong>穿透：</strong>用户恶意查询一个数据库一定不存在的数据或者很多缓存中不存在的数<br>据，由于缓存中没有，所以这些请求都直接去查询数据库了；导致数据库异常<br><strong>解决方案：</strong>可以加针对这些key 的分布式锁排队加载数据；或者预先访问并加载，<br>再加严格的判断；比如不能去查询null 的key。<br><br><strong>雪崩：</strong>缓存在同一时间内大量key 过期（失效被删除），而又有的一大批请求因<br>为没有找到缓冲而都瞬间都去查找数据库中数据；导致连接异常。<br><strong>解决方案：</strong>可以加针对这些key 的分布式锁排队加载数据，或者错开缓存数据的<br>过期时间<br><br><strong>击穿：</strong>是指一个key 对应的数据被频繁访问，也就是高并发地集中对这一个key<br>进行访问，当这个key 在失效的瞬间，持续的高并发请求就穿破缓存，直接请求<br>数据库，就像在一个屏障上凿开了一个洞<br><strong>解决方案：</strong>对应击穿加锁无用，因为它就是一个特定的key；那么针对业务重要<br>或频繁被访问的数据则设置缓存永不过期。</p><h3 id="请描述你的工作时开发流程；"><a href="#请描述你的工作时开发流程；" class="headerlink" title="请描述你的工作时开发流程；"></a>请描述你的工作时开发流程；</h3><p>需求分析——详细设计——数据库设计——编码实现——测试</p><h3 id="搜索系统是怎么实现的"><a href="#搜索系统是怎么实现的" class="headerlink" title="搜索系统是怎么实现的"></a>搜索系统是怎么实现的</h3><p>电商搜索一般也是使用全文检索实现，畅购使用的是ElasticSearch 作为全文检索服<br>务器，实现搜索功能。在ElasticSearch 中配置跟业务相关的业务域，从数据库中把<br>相关的数据导入到索引库中。例如商品搜索功能就把商品表中的数据导入到索引<br>库中。然后使用ElasticSearch 实现商品搜索，然后在页面中把搜索结果展示出来。<br>我们把SKU 商品名称、商家名称、价格、规格等信息设置为业务域。规格的存储<br>采用了动态域来实现。</p><h3 id="项目中遇到了哪些问题"><a href="#项目中遇到了哪些问题" class="headerlink" title="项目中遇到了哪些问题"></a>项目中遇到了哪些问题</h3><p>遇到了js 跨域获取后台管理系统的数据问题，最后采用jsonp 的方式解决；<br>遇到了商品数据如何大批量、不影响性能并异步的通知各个子系统的问题，最后<br>采样RabbitMQ 解决；<br>遇到了为了提高数据加载上的问题，最后利用Redis 缓存大部分数据的解决；</p><h3 id="商品的价格，选择用什么数据类型去存储的，为什么"><a href="#商品的价格，选择用什么数据类型去存储的，为什么" class="headerlink" title="商品的价格，选择用什么数据类型去存储的，为什么"></a>商品的价格，选择用什么数据类型去存储的，为什么</h3><p>要选择这种数据类型<br>使用长整型；更加精准和便于和其它接口进行交互；而且淘宝也是这么做的</p><h3 id="你遇到最难的技术问题，怎么解决"><a href="#你遇到最难的技术问题，怎么解决" class="headerlink" title="你遇到最难的技术问题，怎么解决"></a>你遇到最难的技术问题，怎么解决</h3><p>ElasticSearch 搜索订单数据时，要根据多个查询条件查询数据返回索引数据并再根<br>据搜索的返回的订单id 再到订单系统查询具体的订单。</p><h3 id="做过的最自豪的功能"><a href="#做过的最自豪的功能" class="headerlink" title="做过的最自豪的功能"></a>做过的最自豪的功能</h3><p>整合Redis 的服务，并编写单机版和集群版的工具类调用Jedis 的接口。<br>商品更新后同步其它子系统的商品数据上，从无到有的去调研、分析、选择MQ<br>实现数据的同步，并最后选择了通配符模式精确地通知各个子系统。</p><h3 id="浏览器禁用cookie-怎么办"><a href="#浏览器禁用cookie-怎么办" class="headerlink" title="浏览器禁用cookie 怎么办"></a>浏览器禁用cookie 怎么办</h3><p>系统在设计之初就确定必须要提醒用户开启cookie 的；如果禁用掉以后那么无<br>法进行正常的单点登录和不能实现未登录下购物车功能的实现。<br>被禁用cookie 后，我们系统会提示用户开启，若不开启则不可以继续使用系统<br>就像京东和天猫一样。</p><h3 id="复制了令牌就可以访问微服务，怎么保证安全"><a href="#复制了令牌就可以访问微服务，怎么保证安全" class="headerlink" title="复制了令牌就可以访问微服务，怎么保证安全"></a>复制了令牌就可以访问微服务，怎么保证安全</h3><p>复制了JWT 令牌就可以访问微服务信息，是因为这些服务器都在内网；若是外<br>部请求访问是不可直接访问这些内网微服务的。外部请求需要先经过Nginx、网<br>关之后再到第一个微服务。<br>令牌是有时效的，在时效内可以访问；超时则不可用。</p><h3 id="商城的支付系统是如何实现的"><a href="#商城的支付系统是如何实现的" class="headerlink" title="商城的支付系统是如何实现的"></a>商城的支付系统是如何实现的</h3><p>系统采用微信扫码支付。首先需要到微信平台申请微信公众账号（服务号），然<br>后再申请开通微信支付。开通后会得到appid、秘钥等数据，用于调用微信支付<br>接口。<br>微信支付接口是通过httpClient 方式向微信支付平台发送数据并获取结果。<br>（1）调用统一下单接口获取url<br>（2）根据获取的url 在页面上通过qrcode.js 生成二维码<br>（3）生成二维码后，实时轮询查询订单状态，当返回成功时，跳转至成功页面</p><h3 id="系统并发情况及如何解决大并发的问题"><a href="#系统并发情况及如何解决大并发的问题" class="headerlink" title="系统并发情况及如何解决大并发的问题"></a>系统并发情况及如何解决大并发的问题</h3><p>经过对系统的调优，保证压力测试时每个tomcat 的并发量达到400。现在有<br>5 台web 服务器提供服务，基本上也就是2000 左右的并发，如果将来并发量进<br>一步提高是可以再增加服务器来提供并发能力。<br>解决高并发问题首先要提高本系统的吞吐能力，例如在系统中添加缓存、实<br>现网页静态化等方式。如果在系统优化之后还不能满足业务的需要就需要增加服<br>务器，做服务器集群。前端使用nginx 做负载均衡服务器，并实现nginx 的高可<br>用。目前可以满足当前的业务需要，如果将来业务量增加的话可以考虑添加服务<br>器及F5 硬负载等设备。</p><h3 id="项目里什么地方会有高并发？保证高并发、线程安全"><a href="#项目里什么地方会有高并发？保证高并发、线程安全" class="headerlink" title="项目里什么地方会有高并发？保证高并发、线程安全"></a>项目里什么地方会有高并发？保证高并发、线程安全</h3><p>首页、详情、购物车、订单；这些存在高并发。AtomicInteger、synchronized、Lock、<br>ThreadLocal 等类来保证在代码层面上的线程安全；如果是功能上需要自主多线<br>程处理那么也会使用线程池ThreadPool 来提高并发效率。<br>对高并发的处理会利用Redis 实现分布式锁(setnx，getset)机制。</p><h3 id="商品抢购时如何控制库存"><a href="#商品抢购时如何控制库存" class="headerlink" title="商品抢购时如何控制库存"></a>商品抢购时如何控制库存</h3><p>在任何进行商品库存相关的代码时候都对代码进行分布式锁锁定。<br>分布式锁采用redis 的（setNx 和过期时间实现；虽然课上的不是如此而是更好，<br>但是路人甲能听懂上面的答案。）</p><h3 id="数据库的数据特别大时如何扩容"><a href="#数据库的数据特别大时如何扩容" class="headerlink" title="数据库的数据特别大时如何扩容"></a>数据库的数据特别大时如何扩容</h3><p>数据库可以实现垂直切分和水平节分。垂直切分就是将不同业务模块的表存入到<br>不同的数据库中。水平切分就是将一个表的数据按照一定分片规则存储在不同的<br>数据库中。<br>可以使用mycat 数据库中间件。Mycat 可以很方便地管理数据的集群。通过设置<br>数据节点、分片规则、逻辑库、逻辑表来实现数据的水平切分。</p><h3 id="MySQL-的优化"><a href="#MySQL-的优化" class="headerlink" title="MySQL 的优化"></a>MySQL 的优化</h3><p>使用过解释计划EXPLAIN 、创建索引、不要将%放前面查询才能让索引生效、使<br>用exist 代替in、配置数据库的缓冲池、最大连接数等配置项。<br>数据库在使用的时候采用MariaDB、Percona 等高性能的类mysql 或mysql 高性能<br>分支版本。<br>数据库海量数据处理使用了mycat 分片分库的方式处理。</p><h3 id="SQL-查询语句的优化"><a href="#SQL-查询语句的优化" class="headerlink" title="SQL 查询语句的优化"></a>SQL 查询语句的优化</h3><p>在表中建立索引，优先考虑where、group by 使用到的字段<br>尽量避免使用in、not in、or、null，会导致数据库引擎放弃索引进行全表扫描<br>尽量避免使用select *，返回无用的字段会降低查询效率</p><h3 id="数据库引数据库引擎"><a href="#数据库引数据库引擎" class="headerlink" title="数据库引数据库引擎"></a>数据库引数据库引擎</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-9-%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AE%80%E5%8E%86.assets/Image_001.jpg" alt="image"></p><p>在 MySQL 中，可以对不同的表使用不同的存储引擎；</p><p>InnoDB 存储引擎；事务型数据库的首选引擎，支持事务，支持行锁定和外键。</p><p>MyISAM 存储引擎；ISAM 执行读取操作的速度很快，而且不占用大量的内存和存储资源，但不支持事务处理、不支持外来键、不能够容错、也不支持索引。</p><p>MyISAM 支持的是表级锁，而 InnoDB 支持的是行级锁。但由于锁的粒度更小，</p><p>写操作不会锁定全表，所以在并发较高时，使用 Innodb 引擎会提升效率。但是使用行级锁也不是绝对的，如果在执行一个 SQL 语句时 MySQL 不能确定要扫描的范围，InnoDB 表同样会锁全表，</p><p>例如：update table set columnabc=’1’ where name like “a%”</p><h3 id="关于数据库读写分离"><a href="#关于数据库读写分离" class="headerlink" title="关于数据库读写分离"></a>关于数据库读写分离</h3><p>使用 Spring Aop 与 Mysql 的主从复制功能实现读写分离。</p><p><strong>读写分离：</strong>将应用程序中对数据库的写的操作是一个数据库；对数据库读取数据的是另外一个数据库。而两个数据库的数据需要保证一致。</p><p>在应用程序中，可以使用 spring aop 对将要执行的业务方法的特征进行判断，如：包含 query、find、select 等的操作归类为读数据库的读操作；具体的在 spring的配置文件中可以指定多个读库和写库的数据源 datasource，如果是本次操作是读数据库中数据，那么将本次的持久层操作对象的数据源指定为读库数据源（可以多个）；写操作则指定为写库的数据源（可以多个）。从而达到在应用程序上做到数据库读写分离；减轻数据库访问压力。</p><p>为了保证读库和写库的数据的一致；需要在安装 mysql 的时候配置 Mysql 的主从复制功能，从而让多个读写数据库的数据的一致。</p><h3 id="关于-ElasticSearch-集群"><a href="#关于-ElasticSearch-集群" class="headerlink" title="关于 ElasticSearch 集群"></a>关于 ElasticSearch 集群</h3><p>ES 集群架构 6 个节点，索引：5 分片；ES 调优：在设计映射阶段针对数据搜索情况合理设置数据类型，尽可能多的设置 keyword 类型域；根据需要设置不同域的索引、查询分词器；查询时尽可能少使用模糊和相似查询。</p><p>如果数据量增长迅速，数据过大如何解决？可以重新创建索引（指定更多的集群节点和分片），然后将原数据导入再次导入。（注意：es 在创建索引后不能直接扩容）</p><h3 id="Redis-原理说明"><a href="#Redis-原理说明" class="headerlink" title="Redis 原理说明"></a>Redis 原理说明</h3><p>Redis 有 string、hash、list、set、sorted set 共 5 种数据类型；而 Redis 内部则使</p><p>用一个 redisObject 对象（包含类型 type、编码方式 encoding 等属性）来表示所有的 key 和 value；其中类型 type  表示 value 是什么数据类型，编码方式 encoding则是 5 种数据类型在 redis 内部的存储方式。如：type=string 表示 value 是一个普通字符串，对应的 encoding 可以是 raw 或者是 int，如果是 raw 表示存储类型为字符类型，如果是 int 则代表存储类型为数值型类存储。</p><p>Redis 有两种主要的持久化方式；分别是 RDB 和 AOF。</p><p>RDB 持久化可以在指定的时间间隔内生成数据集的时间点快照， RDB 是一个非常紧凑（compact）的文件，它保存了 Redis 在某个时间点上的数据集。这种文件非常适合用于进行备份；其时间间隔可以通过配置文件配置。Redis 默认使用的持久化是 RDB 方式。</p><p>AOF 持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。AOF 文件是一个只进行追加操作的日志文件；若说两种方式特点：在恢复速度上来说，RDB 恢复数据集的速度要比 AOF 恢复的速度要快。</p><h3 id="关于分布式事务的处理"><a href="#关于分布式事务的处理" class="headerlink" title="关于分布式事务的处理"></a>关于分布式事务的处理</h3><h4 id="一般事务解决方案："><a href="#一般事务解决方案：" class="headerlink" title="一般事务解决方案："></a>一般事务解决方案：</h4><p><strong>两个阶段：</strong>将提交分成两阶段进行的目的很明确，就是尽可能晚地提交事务，让事务在提交前尽可能地完成所有能完成的工作，这样，最后的提交阶段将是一个耗时极短的微小操作，这种操作在一个分布式系统中失败的概率是非常小的</p><p>准备阶段：事务协调者(事务管理器)给每个参与者(资源管理器)发送 Prepare 消息，每个参与者要么直接返回失败(如权限验证失败)，要么在本地执行事务，写本地的 redo 和 undo 日志，但不提交。</p><p>提交阶段：如果协调者收到了参与者的失败消息或者超时，直接给每个参与者发送回滚(Rollback)消息；否则，发送提交(Commit)消息。</p><p><strong>一阶段提交(Best Efforts 1PC 模式)：</strong>从应用程序向数据库发出提交请求到数据库完成提交或回滚之后将结果返回给应用程序的过程。</p><p><strong>TCC 编程模式</strong>：也是两阶段提交的一个变种。TCC 提供了一个编程框架，将整个业务逻辑分为三块：Try、Confirm 和 Cancel 三个操作。以在线下单为例，Try 阶段会去扣库存，Confirm 阶段则是去更新订单状态，如果更新订单失败，则进入</p><p>Cancel 阶段，会去恢复库存。</p><h4 id="消息最终一致性分布式事务解决："><a href="#消息最终一致性分布式事务解决：" class="headerlink" title="消息最终一致性分布式事务解决："></a>消息最终一致性分布式事务解决：</h4><p>在后台管理系统中更新商品后，需要同步搜索系统、详情系统商品信息的话；这时候会发送 MQ 消息，然后在搜索系统、详情系统会订阅消息，接收到消息后执行对应操作。</p><p>在后台中管理系统在同一个事务中执行的内容：更新商品数据，发送 MQ 消息；如果更新商品数据失败那么则回滚，并且不会发送 MQ 消息；如果发送 MQ 消息失败，那么也将回滚商品数据的更新。</p><p>在搜索系统、详情系统中监听 MQ 消息，执行对应的同步更新操作，如果消息接收失败那么 RabbitMQ 会重新发送 6 次消息，并且做了消息持久化，只要搜索系统、详情系统没有接收消息那么下次则会重发保证消息的成功传递。至于接收到消息后搜索、详情系统的执行失败是不会回滚在后台管理系统的操作的；所以在开发过程中需要保证搜索、详情系统的执行成功率非常高。如果在消息消费方处理失败的话则会再接收到消息的时候已经记录到数据库中；处理失败也不会丢失消息。系统会启动定时任务扫描这张表对未处理的消息进行处理。</p><p>或者直接使用 Seata 分布式事务组件。</p><h3 id="Dubbo-执行原理说明"><a href="#Dubbo-执行原理说明" class="headerlink" title="Dubbo 执行原理说明"></a>Dubbo 执行原理说明</h3><p>dubbo 有服务提供者、服务消费者、注册中心和监控中心。首先由提供者在一个</p><p>Servlet 容器中暴露服务，将服务注册到注册中心（zookeeper/redis 等都可以作为注册中心）；然后由消费方向注册中心订阅服务，当消费方注册的服务存在在注册时注册中心返回服务提供者地址列表给消费者；服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用。服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p><h3 id="Dubbo-配置调优"><a href="#Dubbo-配置调优" class="headerlink" title="Dubbo 配置调优"></a>Dubbo 配置调优</h3><ol><li><p>根据不同的业务设置不同的超时时间和重试次数；</p></li><li><p>在 服 务 提 供 方 中 设 置 服 务 的 负 载 均 衡 策 略 以 及 权 重 ； 如 ：</p><p>@Service(loadbalance = “roundrobin”,weight = 10)；</p></li><li><p>集群容错；</p></li><li><p>灰度发布</p></li></ol><h3 id="Zookeeper-功能说明"><a href="#Zookeeper-功能说明" class="headerlink" title="Zookeeper 功能说明"></a>Zookeeper 功能说明</h3><p>zookeeper 是一个分布式应用程序协调服务；它提供的功能有：命名服务、配置管理、集群管理、分布式锁、队列管理。</p><p><strong>命名服务</strong>：在 zookeeper 的文件系统里创建一个目录可与下游程序约定好路径，通过路径即能互相探索发现。</p><p><strong>配置管理：</strong>在做应用服务器集群的时候；可以将项目修改的配置文件全部放到</p><p>zookeeper 上面，保存到 zookeeper 的某个目录节点中，然后相关程序对这个目录节点进行监听，一有配置文件发送变化，那么每个应用程序都将收到通知，然后从 zk 里面获取最新配置文件同步到应用服务器上。</p><p><strong>集群管理：</strong>在应用服务器集群的时候；是否有集群节点加入或退出的时候，</p><p>zookeeper 可以感知并通知其它应用服务器知晓当前各个集群节点的在线状态。所有机器约定在父目录下创建临时目录节点，然后监听父目录节点的子节点变化消息。一旦有机器挂掉，该机器与 zookeeper 的连接断开，其所创建的临时目录节点被删除，所有其他机器都收到通知：某个兄弟目录被删除。</p><p><strong>分布式锁</strong>：zookeeper 上的一个 znode 看作是一把锁，通过 createznode 的方式来实现。所有客户端都去创建 /distribute_lock 节点，最终成功创建的那个客户端也即拥有了这把锁。用完删除掉自己创建的 distribute_lock 节点就释放出锁。（关于分布式锁，可以使用 redis 的 setnx 命令来实现也是一种方法）</p><p><strong>队列管理</strong>：第一种同步队列：当一个队列的成员都聚齐时，这个队列才可用，否则一直等待所有成员到达（在约定目录下创建临时目录节点，监听节点数目是否是要求的数目）。第二种队列按照 FIFO 方式进行入队和出队操作。</p><h3 id="Zookeeper-工作原理"><a href="#Zookeeper-工作原理" class="headerlink" title="Zookeeper 工作原理"></a>Zookeeper 工作原理</h3><p>Zookeeper 的核心是原子广播，这个机制保证了各个 Server 之间的同步。实现这个机制的协议叫做 Zab 协议。Zab 协议有两种模式，它们分别是恢复模式（选主）和广播模式（同步）。当服务启动或者在领导者崩溃后，Zab 就进入了恢复模式，当领导者被选举出来，且大多数 Server 完成了和 leader 的状态同步以后，恢复模式就结束了。状态同步保证了 leader 和 Server 具有相同的系统状态。</p><h3 id="Eureka-服务器挂了微服务是否能正常运行"><a href="#Eureka-服务器挂了微服务是否能正常运行" class="headerlink" title="Eureka 服务器挂了微服务是否能正常运行"></a>Eureka 服务器挂了微服务是否能正常运行</h3><p>所有微服务都需要注册到 eureka，所以 eureka 挂了后会出现服务无法注册的报错信息；但是并不影响当前系统自身功能的运行。</p><p>为了提高 Eureka 微服务的运行稳定性，可以对 eureka 搭建集群。</p><h3 id="关于项目压力测试"><a href="#关于项目压力测试" class="headerlink" title="关于项目压力测试"></a>关于项目压力测试</h3><p>作为开发人员；使用了 jemeter 对主要的子系统进行了压力测试。测试的系统形如：门户系统首页、登录注册、购物车列表页面、订单生成等功能进行了在1 秒内 1000-100000 不同等级的并发线程数测试。</p><p>如：前台门户系统在做了静态化的情况下集群 20（2-20 台都可以）台服务器，最大 PV(page view)即页面浏览量为 2 万（2k-2w 都可以）每秒，订单 6000 笔每秒。（订单服务器集群数量为 10 台。）这些的最大并发量的估算以 tomcat 的一台最大并发量 500-2000 算，如果集群 6 台 tomcat；那么大概是 6<em>500-6</em>2000，也就是 3000-12000；但是订单操作复杂，所以不可能是到最大可支持的并发的。所以集群 10 台订单服务器，6000/s 订单较合理。</p><h3 id="DUBBO-与-Spring-Cloud-区别"><a href="#DUBBO-与-Spring-Cloud-区别" class="headerlink" title="DUBBO 与 Spring Cloud 区别"></a>DUBBO 与 Spring Cloud 区别</h3><p>两个都是微服务架构框架。</p><ul><li>DUBBO 使用 RPC 协议进行远程服务调用，主要是服务注册发现管理；采用默认的 dubbo 协议通信速度比 spring cloud 快。</li><li>spring cloud 使用 http 协议进行远程服务调用，跨平台性好；有完整的微服务生态组件（服务注册发现 eureka，ribbon 负载均衡，hystrix 服务熔断降级，网关 gateway，配置中心 config，总线 bus，链路追踪 sleuth）,服务调用通信速度要比 dubbo 慢。</li></ul><h4 id="Nginx-限流"><a href="#Nginx-限流" class="headerlink" title="Nginx 限流"></a>Nginx 限流</h4><p>如果在问到电商项目流量过大的问题；那么可以通过配置 nginx 的 ginx</p><p>limit_req_zone 和 limit_req 两个指令，限制单个 ip 的请求处理速率。如：可以设置每秒钟只处理 1 个请求，也可以设置一个队列，如队列大小 10；设置之后可以在不延迟请求的情况下 10 个请求处理，处理完一个再空出有队列位置再接受新请求。</p><p>如果有服务器要在限流之外，还可以配置 nginx 的白名单；白名单里面的 ip不会受到限制</p><h3 id="为什么-Nginx-限流后网关还需要限流"><a href="#为什么-Nginx-限流后网关还需要限流" class="headerlink" title="为什么 Nginx 限流后网关还需要限流"></a>为什么 Nginx 限流后网关还需要限流</h3><p>Nginx 承载的流量比较大；即使限流之后请求量也还是可能比较大；而后端的服务器或者数据库可承受的流量较有限；所以为了后端服务器组件（系统、数据库及各类中间件）稳定工作；可以在网关中再次限流。</p><h3 id="tomcat-优化"><a href="#tomcat-优化" class="headerlink" title="tomcat 优化"></a>tomcat 优化</h3><ul><li>设置 catalina.bat 文件中 jvm 的-Xms：虚拟机初始化时的最小堆内存；-Xmx：虚拟机可使用的最大堆内存。</li><li>修改接收请求的处理方式为 NIO；</li><li>启用线程池：在 tomcat 中每一个用户请求都是一个线程，可以使用线程池提高性能（maxThreads 可以处理的最大并发请求数,默认 200</li></ul><p>minSpareThreads 线程的最小数量始终保持运行,默认 10）</p><h3 id="商品图片压缩显示问题"><a href="#商品图片压缩显示问题" class="headerlink" title="商品图片压缩显示问题"></a>商品图片压缩显示问题</h3><p>如果是商品图片；那么需要在上传的时候将原图进行指定大小的压缩存储；一般会设置如下存储方案：</p><p>原图：即不压缩的图片，原本保存到 fastDFS；大图：600*800 将图片大小压缩并存储；</p><p>中图：300*200</p><p>小图：100*100</p><p>这些图片的格式也可现实的终端相关；如果是详情页面可以使用原图、大图，如果是手机可以是中图；如果是在列表上展示可以使用小图。</p><h3 id="Spring-Security-与-shiro-区别"><a href="#Spring-Security-与-shiro-区别" class="headerlink" title="Spring Security 与 shiro 区别"></a>Spring Security 与 shiro 区别</h3><h4 id="相同点："><a href="#相同点：" class="headerlink" title="相同点："></a>相同点：</h4><ol><li>认证功能</li><li>授权功能</li><li>加密功能</li><li>会话管理</li><li>缓存支持</li></ol><h4 id="不同点："><a href="#不同点：" class="headerlink" title="不同点："></a>不同点：</h4><p>Shiro 的配置和使用比较简单，Spring Security 上手复杂</p><p>Shiro 依赖性低，不需要任何框架和容器，可以独立运行，而 Spring Security 依赖于 Spring 容器</p><h3 id="门户网站及其它概念"><a href="#门户网站及其它概念" class="headerlink" title="门户网站及其它概念"></a>门户网站及其它概念</h3><p>门户网站：就是一个网站的入口，这个入口页面中会挂载很多其它系统的入口（链接），一般情况下门户网站都实现了单点登录功能；即只需要登录一次访问其它系统时候不需要再次登录。</p><p>OA 办公自动化系统</p><p>MIS 企业业务系统</p><p>CRM 客户关系管理系统</p><p>ERP 企业资源管理系统；该系统会包含非常多其它系统，业务复杂庞大</p><p>HR 人事管理系统</p><h3 id="普通商品如何处理瞬时高并发及库存"><a href="#普通商品如何处理瞬时高并发及库存" class="headerlink" title="普通商品如何处理瞬时高并发及库存"></a>普通商品如何处理瞬时高并发及库存</h3><p>普通商品若有瞬时并发大的问题，可以在 nginx 配置限流 burst 排队方式避免系统宕机；库存的处理一样可以使用秒杀订单下单时候处理方案，也就是可以使用</p><p>分布式锁。</p><h3 id="如何保障-MQ-消息不丢失"><a href="#如何保障-MQ-消息不丢失" class="headerlink" title="如何保障 MQ 消息不丢失"></a>如何保障 MQ 消息不丢失</h3><p>生产者丢失消息：在发送消息的时候可以将消息记录到数据库表，发送失败的消息可以进行重发。</p><p>消费者端丢失消息：接收消息启用手动确认机制，真正达到消费端并消费后才向</p><p>MQ 发送确认消息；若没有确认消息接收，消息会持久化在 RabbitMQ 中，等待真正被接收。</p><h3 id="MQ-消息中间件异常怎么处理"><a href="#MQ-消息中间件异常怎么处理" class="headerlink" title="MQ 消息中间件异常怎么处理"></a>MQ 消息中间件异常怎么处理</h3><p>可以使用ErrorHandler 接口监听@RabbitListener 注解方法中抛出的异常进行异常处理。</p><ol><li><p>记录异常信息到数据库中；</p></li><li><p>消息不确认，则会再次重发；如果不需要重发那么就记录消息到数据库中返回给 MQ 消息接收成功；然后在使用定时任务处理保存在数据库中的那些消息。</p></li></ol><h3 id="项目生产环境问题如何排查"><a href="#项目生产环境问题如何排查" class="headerlink" title="项目生产环境问题如何排查"></a>项目生产环境问题如何排查</h3><p>找到对应的应用服务器（tomcat）的日志文件；再根据出现问题的时间点定位到日志文件位置；查看这个时段的异常信息再根据异常信息排查问题。</p><p>1、查看分布式日志系统中的异常信息；</p><p>2、根据业务操作，到链路追踪系统中查询该业务的链路调用情况；然后进行优化解决问题</p><h3 id="为什么要手动添加-header-里的-Authorization"><a href="#为什么要手动添加-header-里的-Authorization" class="headerlink" title="为什么要手动添加 header 里的 Authorization"></a>为什么要手动添加 header 里的 Authorization</h3><p>在网关中会从请求参数、header、cookie 中获取 Authorization 的值，这个值也就是令牌；在获取到后会传递到其它微服务，实现单点访问。</p><p>MQ 如何保障消息可靠生产</p><ol><li>把消息数据写入数据库，用状态码来控制消息发送状态。</li><li>开启定时任务，间隔 3 秒，查询未发送的消息。</li><li>调用消息生产者，发送消息到 MQ 中间件。</li><li>消息生产者，设置 confirmCallback 确认回调对象，判断 ack</li></ol><p>– true: 消息发送成功，修改消息发送状态为: 已发送。</p><p>– false: 消息发送失败。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-9-%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AE%80%E5%8E%86.assets/Image_002.jpg" alt="image"></p><h3 id="MQ-如何保障消息可靠消费"><a href="#MQ-如何保障消息可靠消费" class="headerlink" title="MQ 如何保障消息可靠消费"></a>MQ 如何保障消息可靠消费</h3><ol><li>手动 ACK 确认机制。</li><li>防止消息重复消费。</li><li>消息重投、拒绝确认的消息，在丢弃之后，需要存入死信队列。</li><li>死信队列中的消息还消费失败的话，就需要人为干预或预警。</li></ol><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-9-%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%E7%AE%80%E5%8E%86.assets/Image_003.jpg" alt="image"></p><p>Ack 机制会影响处理效率；可以不管如何都先将消息存入到数据库；然后定时处理这些消息。</p><h3 id="MQ-死信队列"><a href="#MQ-死信队列" class="headerlink" title="MQ 死信队列"></a>MQ 死信队列</h3><p>当我们的业务队列处理消息失败(业务异常重试次数达到上限、消息被拒绝、消息过期、队列已满)，就会将这些消息重新投递到一个新的队列，该队列存储的都是处理失败的消息，该队列就叫死信队列 DLQ(Dead Letter Queue)。</p><ul><li>消息被拒绝 (basic.reject or basic.nack)</li><li>消息过期 TTL(Time To Live)</li><li>队列已满</li></ul><h3 id="MQ-如何防止消息重复消费"><a href="#MQ-如何防止消息重复消费" class="headerlink" title="MQ 如何防止消息重复消费"></a>MQ 如何防止消息重复消费</h3><p>利用去重表来解决，每次接收到消息之后，先从去重表查询该消息是否已经消费，如果已经消费就不处理本来的业务，否则处理本来的业务并且往去重表添加一行消息去重记录。</p><h3 id="MQ-如何解决消息积压问题"><a href="#MQ-如何解决消息积压问题" class="headerlink" title="MQ 如何解决消息积压问题"></a>MQ 如何解决消息积压问题</h3><ol><li><p>消息过多，消费者消费速度太慢。</p><p>– 多个消费者并发消费</p><p>– 多线程并发消费</p><p>– 设置消息存活时间(TTL) Time To Live</p><p>– 设置队列中存储消息的界限(Lim) limit</p></li></ol><ol start="2"><li><p>消费者消费失败，消息还在业务队列中。</p><p>– 再重试一次，如果还不行，扔到死信队列，避免队列阻塞。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-项目撰写&quot;&gt;&lt;a href=&quot;#1-项目撰写&quot; class=&quot;headerlink&quot; title=&quot;1. 项目撰写&quot;&gt;&lt;/a&gt;1. 项目撰写&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目名称&lt;/th&gt;
&lt;th&gt;Xxx 商城&lt;br&gt; **书城、</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="面试" scheme="https://chenliren9527.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="简历" scheme="https://chenliren9527.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
    <category term="商城" scheme="https://chenliren9527.github.io/tags/%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(09)-简历与常见面试题(2)</title>
    <link href="https://chenliren9527.github.io/2021/02/02/jiu-ye-ji-zhu-jia-qiang-09-jian-li-yu-chang-jian-mian-shi-ti-2/"/>
    <id>https://chenliren9527.github.io/2021/02/02/jiu-ye-ji-zhu-jia-qiang-09-jian-li-yu-chang-jian-mian-shi-ti-2/</id>
    <published>2021-02-02T03:04:54.000Z</published>
    <updated>2022-05-17T05:35:21.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、商城面试简历及问题"><a href="#1、商城面试简历及问题" class="headerlink" title="1、商城面试简历及问题"></a>1、商城面试简历及问题</h2><p>参考《商城项目简历.pdf》</p><h2 id="2、典型面试资源参考"><a href="#2、典型面试资源参考" class="headerlink" title="2、典型面试资源参考"></a>2、典型面试资源参考</h2><h3 id="2-1、JVM资源"><a href="#2-1、JVM资源" class="headerlink" title="2.1、JVM资源"></a>2.1、JVM资源</h3><p>链接: <a href="https://pan.baidu.com/s/1ZMbouLKO2pD2zMSSWlwaJQ">https://pan.baidu.com/s/1ZMbouLKO2pD2zMSSWlwaJQ</a></p><p>提取码: 5fdj </p><h3 id="2-2、Tomcat资源"><a href="#2-2、Tomcat资源" class="headerlink" title="2.2、Tomcat资源"></a>2.2、Tomcat资源</h3><p><a href="https://www.bilibili.com/video/BV1dJ411N7Um">https://www.bilibili.com/video/BV1dJ411N7Um</a></p><h3 id="2-3、Oracle数据库"><a href="#2-3、Oracle数据库" class="headerlink" title="2.3、Oracle数据库"></a>2.3、Oracle数据库</h3><p><a href="https://www.bilibili.com/video/BV1kE411g7Ue">https://www.bilibili.com/video/BV1kE411g7Ue</a></p><h3 id="2-4、Spring-Cloud-Alibaba"><a href="#2-4、Spring-Cloud-Alibaba" class="headerlink" title="2.4、Spring Cloud Alibaba"></a>2.4、Spring Cloud Alibaba</h3><p><a href="https://www.bilibili.com/video/BV1tt4y12727">https://www.bilibili.com/video/BV1tt4y12727</a></p><h3 id="2-5、Jenkins"><a href="#2-5、Jenkins" class="headerlink" title="2.5、Jenkins"></a>2.5、Jenkins</h3><p><a href="https://www.bilibili.com/video/BV1kJ411p7mV">https://www.bilibili.com/video/BV1kJ411p7mV</a></p><h3 id="2-6、Spring-Security-Oauth2-0"><a href="#2-6、Spring-Security-Oauth2-0" class="headerlink" title="2.6、Spring Security Oauth2.0"></a>2.6、Spring Security Oauth2.0</h3><p><a href="https://www.bilibili.com/video/av73730658">https://www.bilibili.com/video/av73730658</a></p><h3 id="2-7、分库分表"><a href="#2-7、分库分表" class="headerlink" title="2.7、分库分表"></a>2.7、分库分表</h3><p><a href="https://www.bilibili.com/video/BV1BK4y1C7ak">https://www.bilibili.com/video/BV1BK4y1C7ak</a></p><p><a href="https://www.bilibili.com/video/av68736927">https://www.bilibili.com/video/av68736927</a></p><h3 id="2-8、HashMap面试合集"><a href="#2-8、HashMap面试合集" class="headerlink" title="2.8、HashMap面试合集"></a>2.8、HashMap面试合集</h3><p><a href="https://www.bilibili.com/video/BV1nJ411J7AA">https://www.bilibili.com/video/BV1nJ411J7AA</a></p><h3 id="2-9、数据库性能优化"><a href="#2-9、数据库性能优化" class="headerlink" title="2.9、数据库性能优化"></a>2.9、数据库性能优化</h3><p><a href="https://www.bilibili.com/video/av68811608">https://www.bilibili.com/video/av68811608</a></p><h3 id="2-10、工作流activiti"><a href="#2-10、工作流activiti" class="headerlink" title="2.10、工作流activiti"></a>2.10、工作流activiti</h3><p>如果工作了；需要使用工作流，那么可以先了解</p><p><a href="https://www.bilibili.com/video/BV1H54y167gf/">https://www.bilibili.com/video/BV1H54y167gf/</a></p><h3 id="2-11、限流熔断-Sentinel哨兵"><a href="#2-11、限流熔断-Sentinel哨兵" class="headerlink" title="2.11、限流熔断-Sentinel哨兵"></a>2.11、限流熔断-Sentinel哨兵</h3><p><a href="https://www.bilibili.com/video/BV12A411E7aX">https://www.bilibili.com/video/BV12A411E7aX</a></p><h3 id="2-12、WebSocket"><a href="#2-12、WebSocket" class="headerlink" title="2.12、WebSocket"></a>2.12、WebSocket</h3><p><a href="https://www.bilibili.com/video/BV1r54y1D72U">https://www.bilibili.com/video/BV1r54y1D72U</a></p><h3 id="2-13、Netty"><a href="#2-13、Netty" class="headerlink" title="2.13、Netty"></a>2.13、Netty</h3><p><a href="https://www.bilibili.com/video/BV147411W757">https://www.bilibili.com/video/BV147411W757</a></p><h3 id="2-14、Spring源码分析"><a href="#2-14、Spring源码分析" class="headerlink" title="2.14、Spring源码分析"></a>2.14、Spring源码分析</h3><p>测试类</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200617214043044.png" alt="image-20200617214043044"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200617214202383.png" alt="image-20200617214202383"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200617221215087.png" alt="image-20200617221215087"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619114712400.png" alt="image-20200619114712400"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619114748193.png" alt="image-20200619114748193"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619114848354.png" alt="image-20200619114848354"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619114929489.png" alt="image-20200619114929489"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619114957034.png" alt="image-20200619114957034"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115044186.png" alt="image-20200619115044186"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115127194.png" alt="image-20200619115127194"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115203159.png" alt="image-20200619115203159"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115417889.png" alt="image-20200619115417889"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115447832.png" alt="image-20200619115447832"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115605610.png" alt="image-20200619115605610"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619115820685.png" alt="image-20200619115820685"></p><h2 id="3、优秀简历项目编写分析"><a href="#3、优秀简历项目编写分析" class="headerlink" title="3、优秀简历项目编写分析"></a>3、优秀简历项目编写分析</h2><h4 id="1）技术描述"><a href="#1）技术描述" class="headerlink" title="1）技术描述"></a>1）技术描述</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619173309381.png" alt="image-20200619173309381"></p><h4 id="2）工作经历"><a href="#2）工作经历" class="headerlink" title="2）工作经历"></a>2）工作经历</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211095636796.png" alt="image-20201211095636796"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211095653834.png" alt="image-20201211095653834"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211100641197.png" alt="image-20201211100641197"></p><h4 id="3）基础项目介绍"><a href="#3）基础项目介绍" class="headerlink" title="3）基础项目介绍"></a>3）基础项目介绍</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211100146958.png" alt="image-20201211100146958"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211100019368.png" alt="image-20201211100019368"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124181725429.png" alt="image-20201124181725429"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124181755749.png" alt="image-20201124181755749"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201211100236011.png" alt="image-20201211100236011"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124181834837.png" alt="image-20201124181834837"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124181913436.png" alt="image-20201124181913436"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124182019556.png" alt="image-20201124182019556"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124182637348.png" alt="image-20201124182637348"></p><h4 id="4）较好项目介绍"><a href="#4）较好项目介绍" class="headerlink" title="4）较好项目介绍"></a>4）较好项目介绍</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619173212654.png" alt="image-20200619173212654"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619173556494.png" alt="image-20200619173556494"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619175833401.png" alt="image-20200619175833401"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619175945321.png" alt="image-20200619175945321"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180017491.png" alt="image-20200619180017491"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180056522.png" alt="image-20200619180056522"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180112372.png" alt="image-20200619180112372"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180207769.png" alt="image-20200619180207769"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180253097.png" alt="image-20200619180253097"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180308782.png" alt="image-20200619180308782"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180327111.png" alt="image-20200619180327111"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200619180352576.png" alt="image-20200619180352576"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200902193408078.png" alt="image-20200902193408078"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20200902193443199.png" alt="image-20200902193443199"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201016165844610.png" alt="image-20201016165844610"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-09-%E7%AE%80%E5%8E%86%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98-2.assets/image-20201124182602406.png" alt="image-20201124182602406"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、商城面试简历及问题&quot;&gt;&lt;a href=&quot;#1、商城面试简历及问题&quot; class=&quot;headerlink&quot; title=&quot;1、商城面试简历及问题&quot;&gt;&lt;/a&gt;1、商城面试简历及问题&lt;/h2&gt;&lt;p&gt;参考《商城项目简历.pdf》&lt;/p&gt;
&lt;h2 id=&quot;2、典型面试资</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="面试" scheme="https://chenliren9527.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="简历" scheme="https://chenliren9527.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(09)-简历与常见面试题(1)</title>
    <link href="https://chenliren9527.github.io/2021/02/02/jiu-ye-ji-zhu-jia-qiang-09-jian-li-yu-chang-jian-mian-shi-ti-1/"/>
    <id>https://chenliren9527.github.io/2021/02/02/jiu-ye-ji-zhu-jia-qiang-09-jian-li-yu-chang-jian-mian-shi-ti-1/</id>
    <published>2021-02-02T03:04:48.000Z</published>
    <updated>2022-05-17T05:35:21.073Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、商城项目简历"><a href="#1、商城项目简历" class="headerlink" title="1、商城项目简历"></a>1、商城项目简历</h3><h4 id="1-项目名称"><a href="#1-项目名称" class="headerlink" title="1) 项目名称"></a>1) 项目名称</h4><p>项目名称尽量是可网上查阅的；然后要看网页中是否属于java开发范畴。</p><p>常见的还可以使用：一些门户网站、互联网项目；如：教育局、环保厅、公安厅、国税局、工商局</p><h4 id="2）开发环境与工具"><a href="#2）开发环境与工具" class="headerlink" title="2）开发环境与工具"></a>2）开发环境与工具</h4><p><strong>操作系统</strong>：windows/macOS、CentOS（6.0/6.5/6.8/7.0/7.3/7.8/7.9）<br><strong>数据库</strong>：Oracle/SQL Server/Sybase/DB2/MySQL/mycat、redis、mongoDB<br><strong>应用服务器</strong>：weblogic、webspere、jetty、tomcat、apusic、Nginx<br><strong>开发工具</strong>：IDEA/Eclipse/MyEclipse；Edraw Max；Power Designer；Maven；Git/SVN；Navicat</p><p>Power Designer 数据库建模工具：应用场景在数据库设计阶段——》《数据库设计说明书》</p><ul><li>CDM 概念模型：用于描述实体之间的关系；是还没有确定使用哪个DBMS，可以指定具体的DBMS然后转换为PDM</li><li>PDM 物理模型：用于描述表与表之间的关系；可通过pdm里面的数据库建表语句创建数据库表</li></ul><h4 id="3）使用技术"><a href="#3）使用技术" class="headerlink" title="3）使用技术"></a>3）使用技术</h4><p>SpringCloud、FastDFS、SpringSecurity<br>Spring、Spring Boot、SpringMVC、MyBatis<br>Jsp、JSTL、jQuery、vue、Bootstrap、json/jsonp、JWT<br>Lucene、ElasticSearch<br>Mysql、Redis、MongoDB、Sharding Sphere、MyCat<br>Maven、Git、Nginx、HttpClient、Spring Task、RabbitMQ、Lua、OpenResty</p><p><strong>分布式文件系统</strong>：阿里云OSS、七牛云、FastDFS，当遇到文档、图片、音频、视频都可以使用这些分布式文件系统存储。</p><p><strong>FastDFS</strong>：包含追踪服务器（记录那些地方有存储服务器）、存储服务器</p><p><strong>跨域</strong>：在前端发送异步请求的时候，浏览器基于安全策略的原因当访问的域名或者端口号不一样的时候则会出现跨域问题。</p><p><strong>jsonp解决跨域方案</strong>：</p><p>1、借助 script标签的 <code>src</code> 属性加载资源；</p><p>2、在请求的时候携带回调方法名称；</p><p>3、服务器在返回响应数据的时候利用传递过来的方法名将返回数据给包裹起来——》 itcast({“name”:”jbl”})</p><p>4、在调用方定义传递过去的js方法，然后间接接收数据</p><blockquote><p>如果遇到对方不愿意配合的情况，也就无法使用jsonp解决跨域问题；但是问题有必须得解决：</p><p>可以在Java端发起请求获取数据，然后再将数据返回给前端</p></blockquote><p><strong>分库分表</strong>：当数据库中的数据量过大影响查询效率；常见的解决方案：</p><ul><li>Sharding Sphere 工具类包；需要添加到项目中；使用不同的策略进行插入数据到不同的库表，查询不同数据库表数据</li><li>MyCat 数据库中间件：需要独立部署，可以设置不同数据库分到不同的数据库表；项目中使用只需要指定mycat的连接信息即可</li></ul><p><strong>数据库读写分离</strong>：为了提高数据库的操作效率；如果是新增、修改、删除则连接到一个可以写数据的数据库中；如果是查询则连接到多个读数据库中；</p><p>具体实现：spring aop + 主从复制</p><p><strong>HttpClient</strong> 用于在Java后端发送各种http请求获取数据，它是早期组成爬虫解决方案的技术之一</p><p><strong>任务调度解决方案</strong></p><ul><li>Quartz</li><li>spring task</li><li>elastic job 分布式任务调度系统；可以根据策略将要执行的数据进行分片执行</li></ul><p>任务执行表达式CronExpression：秒 分  时 日 月 周 年（可选）</p><ul><li>xxl-job 图形界面，可以动态的去修改执行时间</li></ul><h4 id="4）项目团队组成"><a href="#4）项目团队组成" class="headerlink" title="4）项目团队组成"></a>4）项目团队组成</h4><p>人员组织架构：机构、部门、人员、角色、权限、群组</p><p>产品经理：确定需求以及利用axure设计并给出产品原型图（rp）<br>项目经理：项目管理，统筹管理项目开发进度（mpp项目实施计划）、人员协调、对接客户需求<br>前端团队：根据产品经理给出的原型由美工美化界面并切出静态页面，前端制作页面效果<br>后端团队：实现需求分析、数据库设计、产品功能、测试<br>测试团队：测试所有的功能；单元测试、整合测试、集成测试、确认测试<br>运维团队：项目的发布、部署以及维护</p><h4 id="5）开发时间与计划"><a href="#5）开发时间与计划" class="headerlink" title="5）开发时间与计划"></a>5）开发时间与计划</h4><p>根据项目的规模或者开发的模式、项目的阶段不同而时长不同；而计划是根据需求制定出来的mpp，根据项目的计划推进。</p><p>全新开发：从需求调研到最后的上线，花费的时间会比较长；</p><p>二次开发：基于原有的项目进行bug修复、新功能模块的开发</p><h4 id="6）项目描述"><a href="#6）项目描述" class="headerlink" title="6）项目描述"></a>6）项目描述</h4><p>1、项目特色、适用群体；</p><ul><li>电商模式：B2C（VIP、乐优）、B2B2C（B2C平台，天猫、京东）、O2O（美团）、P2P（金融贷款）、C2C（闲鱼）</li></ul><p>2、项目或者系统使用的主流技术架构</p><p>3、主要功能，罗列一些系统功能；在简历中编写的模块不要是上课中讲到的，编写一些其他常见的模块</p><h4 id="7）项目职责"><a href="#7）项目职责" class="headerlink" title="7）项目职责"></a>7）项目职责</h4><p>1、概要描述项目工作内容</p><ul><li><p>编写项目需求分析等相关文档</p><ul><li><p>可行性分析与研究报告（项目实施说明书）  ————》技术、经济、社会可行性</p></li><li><p>需求分析规格说明书  ——》描述系统背景、所有模块、每个模块的需求描述、业务流程、输入、输出</p></li><li><p>数据库设计说明书 ——》CDM/PDM、数据字典</p></li><li><p>概要设计说明书</p></li><li><p>详细设计说明书</p></li><li><p>开发规范说明书</p></li><li><p>开发接口说明书（yapi、语雀、石墨）</p><ul><li>请求地址</li><li>请求方式 (GET查询/POST新增/PUT修改/DELETE删除)</li><li>请求参数</li><li>响应结果</li></ul><p>示例如下：</p><pre class="line-numbers language-none"><code class="language-none">https://zwfw.mps.gov.cn/new.html- 请求地址 https://zwfw.mps.gov.cn/rest/homepage/cmsArticle/queryByCategoryId- 请求方式 POST- 请求参数 {conditionMap: {categoryId: 241}, page: {current: 1, size: 9}}- 响应结果返回json数据结构一般的开发方式：先从前端或者原型界面分析需求获得上述的16个字对应的内容，然后再根据分析出的内容编写后台代码controller --&gt; service --&gt; DAO如果开发熟悉了；可以从后台写起代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><ul><li><p>测试报告</p></li><li><p>用户使用手册</p></li><li><p>协助产品、项目经理制作项目原型和需求分析；帮助编写对应自己要开发的模块的部分</p></li><li><p>协助开发组的同事解决技术难题和业务分析；</p></li><li><p>开发业务功能模块和技术难题攻克；</p></li></ul><p>2、自己在这个项目中开发的功能模块，挑一个有业务流程的模块进行描述</p><p>3、自己在这个项目中遇到了什么问题，如何解决的</p><p><strong>商品秒杀</strong>：</p><p>1、获取秒杀商品列表，根据不同的秒杀时段展示秒杀商品；为了效率会将商品列表存储到redis中；</p><p>2、立即抢购——秒杀下单</p><p>2.1、判断商品是否超时、库存是否足够</p><p>2.2、添加分布式锁；扣减库存1</p><p>2.2.1、如果库存扣减之后还大于0的话；需要将最新的商品更新回redis；</p><p>2.2.2、如果库存扣减之后等于0的话；同步最新商品到mysql，删除redis中的商品</p><p>2.3、生成订单存储到redis；发送MQ延迟消息</p><p>3、秒杀支付</p><p>3.1、如果用户在规定时间内支付了；那么监听到支付的信息之后；将redis中的秒杀订单同步更新到mysql中；删除redis中对应的订单；</p><p>3.2、如果用户在规定时间内没有支付；监听MQ消息延时消息，查询微信支付系统中订单是否被支付，如果没有支付则删除redis中的订单并添加分布式锁释放库存</p><p>一般的系统中数据库表数量：300 - 500 </p><h3 id="2、面试常见问题"><a href="#2、面试常见问题" class="headerlink" title="2、面试常见问题"></a>2、面试常见问题</h3><h4 id="1-RESTful架构风格"><a href="#1-RESTful架构风格" class="headerlink" title="1) RESTful架构风格"></a>1) RESTful架构风格</h4><p><a href="http://localhost/user">http://localhost/user</a></p><p>所有的请求都是对资源的一个处理；处理的方式通过请求方式表示。请求的方式有如下：</p><ul><li>GET 查询</li><li>POST 新增</li><li>PUT 更新</li><li>DELETE 删除资源</li></ul><p>一般在编写接口文档的时候，都使用该风格编写。</p><p><strong>需求</strong>：<a href="http://localhost/user?address=gz">http://localhost/user?address=gz</a></p><p>使用get请求 <a href="http://localhost/user/2/10?address=gz">http://localhost/user/2/10?address=gz</a> ；查询address的值为gz的用户，查询第2页每页10条数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_user <span class="token keyword">where</span> address <span class="token operator">like</span> <span class="token operator">%</span>gz<span class="token operator">%</span> <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>请求地址</strong>：<a href="http://localhost/user/2/10?address=gz">http://localhost/user/2/10?address=gz</a></p><p><strong>请求方式</strong>：get</p><p><strong>请求参数</strong>：address，路径中携带了页号（默认1）、页大小（默认值）</p><p><strong>响应结果</strong>：[{}, …. {“address”:”gz”, …}]</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 分页查询用户 * @param pageNo 页号 * @param pageSize 页大小 * @param address 查询参数 * @return 返回结果 用户列表 */</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/{pageNo}/{pageSize}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUserByPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"pageNo"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageNo<span class="token punctuation">,</span>                                  <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"pageSize"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">,</span>                                  <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"address"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">queryUserByPage</span><span class="token punctuation">(</span>pageNo<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2）MyBatis-与-Hibernate"><a href="#2）MyBatis-与-Hibernate" class="headerlink" title="2）MyBatis 与  Hibernate"></a>2）MyBatis 与  Hibernate</h4><p>Mybatis：灵活编写sql语句，小巧简单，移植性差</p><p>Hibernate：封装度高，灵活度地，学习成本高，移植较好</p><blockquote><p>以后的项目如果使用spring data jpa的话，那么底层使用的是Hibernate</p></blockquote><p>如果以后离开黑马了，遇到自己需要使用的技术，但是没有资源的时候；可以到b站搜索： 黑马 xxx</p><h4 id="3）请描述你的工作时开发流程"><a href="#3）请描述你的工作时开发流程" class="headerlink" title="3）请描述你的工作时开发流程"></a>3）请描述你的工作时开发流程</h4><p>1、查看项目实施计划（甘特图MPP）,找到自己名字，查看要看发哪些模块和截止时间；</p><p>2、查找原型界面中自己要开发的模块界面和操作细节；</p><p>3、查看需求分析规格说明书，找到自己开发的模块查看具体的需求和流程；</p><p>4、编写接口文档、开发（数据库设计、编码）、测试；</p><h4 id="4）MQ中的延迟队列"><a href="#4）MQ中的延迟队列" class="headerlink" title="4）MQ中的延迟队列"></a>4）MQ中的延迟队列</h4><p>在生产者发送消息的时候，设置了过期时间发送到一个队列，然后在队列超时未消费则这些消息会被投递到绑定该队列的那些队列中，这些队列称为死信队列；之后消费者可以从 死信队列 中获取消息并进行业务处理。</p><p>应用场景：在商品秒杀的时候可以使用延迟队列进行支付确认。</p><h4 id="5）MQ中提高消费者消费能力（消息积压）"><a href="#5）MQ中提高消费者消费能力（消息积压）" class="headerlink" title="5）MQ中提高消费者消费能力（消息积压）"></a>5）MQ中提高消费者消费能力（消息积压）</h4><p>1、增加消费者数量</p><p>2、在单个消费者处理业务的时候启动线程</p><h4 id="6）门户网站及其它概念"><a href="#6）门户网站及其它概念" class="headerlink" title="6）门户网站及其它概念"></a>6）门户网站及其它概念</h4><p>portal 门户网站：各个子系统的入口，一般都已经实现了单点登录的</p><p>OA 办公自动化系统<br>MIS 企业业务系统<br>CRM 客户关系管理系统<br>ERP 企业资源管理系统；该系统会包含非常多其它系统，业务复杂庞大<br>HR 人事管理系统</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、商城项目简历&quot;&gt;&lt;a href=&quot;#1、商城项目简历&quot; class=&quot;headerlink&quot; title=&quot;1、商城项目简历&quot;&gt;&lt;/a&gt;1、商城项目简历&lt;/h3&gt;&lt;h4 id=&quot;1-项目名称&quot;&gt;&lt;a href=&quot;#1-项目名称&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="面试" scheme="https://chenliren9527.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="简历" scheme="https://chenliren9527.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>分布式锁代码</title>
    <link href="https://chenliren9527.github.io/2021/02/01/fen-bu-shi-suo-dai-ma/"/>
    <id>https://chenliren9527.github.io/2021/02/01/fen-bu-shi-suo-dai-ma/</id>
    <published>2021-02-01T10:25:03.000Z</published>
    <updated>2022-05-17T05:35:20.669Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>changgou<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span><span class="token punctuation">;</span><span class="token comment">/** * 主要用于在分布式环境下对于共享资源的操作进行锁定 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisLock</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> tlExpireTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取锁最长等待时间；10秒</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> WAIT_TIME_OUT <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>    <span class="token comment">//锁的过期时间；3秒</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> LOCK_EXPIRE_TIME <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">RedisLock</span><span class="token punctuation">(</span><span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> redisTemplate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 在一定的限定时间内 获取某一类资源或操作的锁     *     * @param key 键名（可以随便指定；一般为某一类资源或操作命名）     * @return true or false     */</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span> timeOut <span class="token operator">=</span> WAIT_TIME_OUT<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>timeOut <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> expireTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> LOCK_EXPIRE_TIME<span class="token punctuation">;</span>            <span class="token class-name">Boolean</span> isExists <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundValueOps</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>expireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获取锁成功，直接返回</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isExists<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//记录本线程设置的过期时间，释放锁的时候可以根据其进行判断是否该释放锁</span>                tlExpireTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>expireTime<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//获取锁失败，查看是否锁已经超时</span>            <span class="token keyword">long</span> oldExpireTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundValueOps</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//锁已经超时</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldExpireTime <span class="token operator">&lt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//自行尝试解锁并获取锁</span>                <span class="token keyword">long</span> newExpireTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> LOCK_EXPIRE_TIME<span class="token punctuation">;</span>                <span class="token keyword">long</span> oldExpireTime2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundValueOps</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span>newExpireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>oldExpireTime <span class="token operator">==</span> oldExpireTime2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">//没有被其它线程设置并获取，说明获取锁成功</span>                    tlExpireTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>newExpireTime<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment">//沉睡随机几百毫秒再去尝试获取锁</span>            <span class="token keyword">long</span> sleepTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//递减等待获取锁的时间</span>            timeOut <span class="token operator">=</span> timeOut <span class="token operator">-</span> sleepTime<span class="token punctuation">;</span>            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>sleepTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 释放某一类资源或操作的锁     *     * @param key key 键名（与加锁时候的key要一致）     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span> expireTimeMillis <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundValueOps</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取当时设置到redis的过期时间</span>        <span class="token class-name">String</span> strExpireTime <span class="token operator">=</span> tlExpireTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>strExpireTime <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> strExpireTime<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> oldExpireTime <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>strExpireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> oldExpireTime<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>oldExpireTime <span class="token operator">==</span> expireTimeMillis<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//如果释放锁的时候没有超时才需要释放锁；不然这是可能被其它线程已经获取到的锁，不应该把其它线程获取到的锁给释放了</span>                redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//只要调用释放锁，不管有没释放锁，但是线程变量都已经没有存在意义</span>        tlExpireTime<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span cl</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="分布式锁" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
  </entry>
  
  <entry>
    <title>常见面试题总结(07)-可持续化集成部署</title>
    <link href="https://chenliren9527.github.io/2021/02/01/chang-jian-mian-shi-ti-zong-jie-07-ke-chi-xu-hua-ji-cheng-bu-shu/"/>
    <id>https://chenliren9527.github.io/2021/02/01/chang-jian-mian-shi-ti-zong-jie-07-ke-chi-xu-hua-ji-cheng-bu-shu/</id>
    <published>2021-02-01T09:47:07.000Z</published>
    <updated>2022-05-17T05:35:21.097Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="需要持续部署的原因？"><a href="#需要持续部署的原因？" class="headerlink" title="需要持续部署的原因？"></a>需要持续部署的原因？</h2><p>手动部署出错率高<br>需要熬夜加班部署</p><p>单体应用的部署相对简单，部署服务停服务都只需要控制一个jar包即可<br>微服务模式下应用部署的复杂度高，部署服务可能需要部署微服务相关的很多支持服务</p></li><li><h2 id="敏捷开发，持续集成，持续交付，持续部署，DevOps的区别？"><a href="#敏捷开发，持续集成，持续交付，持续部署，DevOps的区别？" class="headerlink" title="敏捷开发，持续集成，持续交付，持续部署，DevOps的区别？"></a>敏捷开发，持续集成，持续交付，持续部署，DevOps的区别？</h2><p>敏捷开发：关注任务的分配和实际开发和本地环境的构建<br>持续集成：敏捷开发+自动化测试<br>持续交付：持续集成+包发布到内部的库中<br>持续部署：持续交付+部署环节<br>DevOps：持续部署+运维（包含了软件生命周期的所有环节）</p><h2 id="为什么要进行每日站立会议？"><a href="#为什么要进行每日站立会议？" class="headerlink" title="为什么要进行每日站立会议？"></a>为什么要进行每日站立会议？</h2><p>每日站会最主要的目的是及时的消除项目的风险。每个人通过说明以下的事项，项目经理能够很有效的把控项目的进度。主要内容包括：</p><ol><li>昨日工作内容</li><li>今日计划工作内容</li><li>是否有阻塞项目进度的问题</li></ol></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;需要持续部署的原因？&quot;&gt;&lt;a href=&quot;#需要持续部署的原因？&quot; class=&quot;headerlink&quot; title=&quot;需要持续部署的原因？&quot;&gt;&lt;/a&gt;需要持续部署的原因？&lt;/h2&gt;&lt;p&gt;手动部署出错率高&lt;br&gt;需要熬夜加班部署&lt;/p&gt;
&lt;p&gt;单</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Docker" scheme="https://chenliren9527.github.io/tags/Docker/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="Jenkins" scheme="https://chenliren9527.github.io/tags/Jenkins/"/>
    
    <category term="Docker部署微服务" scheme="https://chenliren9527.github.io/tags/Docker%E9%83%A8%E7%BD%B2%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="GitLab" scheme="https://chenliren9527.github.io/tags/GitLab/"/>
    
    <category term="持续集成Jenkins" scheme="https://chenliren9527.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90Jenkins/"/>
    
    <category term="容器管理Rancher" scheme="https://chenliren9527.github.io/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86Rancher/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(08)-可持续化集成部署课堂笔记</title>
    <link href="https://chenliren9527.github.io/2021/02/01/jiu-ye-ji-zhu-jia-qiang-08-ke-chi-xu-hua-ji-cheng-bu-shu-2/"/>
    <id>https://chenliren9527.github.io/2021/02/01/jiu-ye-ji-zhu-jia-qiang-08-ke-chi-xu-hua-ji-cheng-bu-shu-2/</id>
    <published>2021-02-01T09:43:47.000Z</published>
    <updated>2022-05-17T05:35:21.069Z</updated>
    
    <content type="html"><![CDATA[<h3 id="01-制作JDK8-Docker镜像"><a href="#01-制作JDK8-Docker镜像" class="headerlink" title="01-制作JDK8 Docker镜像"></a>01-制作JDK8 Docker镜像</h3><p><strong>目标</strong>：基于centOS 7的docker镜像利用Dockerfile制作jdk8镜像</p><p><strong>小结</strong>：</p><ul><li>上传jdk1.8的压缩包</li><li>创建Dockerfile文件，设置里面的内容</li><li>先删除原有的 <code>jdk1.8</code> ；命令为： <code>docker rmi jdk1.8</code></li><li>执行 <code>docker build -t='jdk1.8' .</code></li></ul><h3 id="02-构建服务Docker镜像"><a href="#02-构建服务Docker镜像" class="headerlink" title="02-构建服务Docker镜像"></a>02-构建服务Docker镜像</h3><p><strong>目标</strong>：在IDEA中能够通过配置Maven构建目标将微服务制作成Docker镜像</p><p><strong>分析</strong>：</p><p>1、设置docker可以被远程操作；</p><p>2、编写maven的构建目标：将当前开发工具中的某些项目制作成远程docker的镜像</p><p><strong>小结</strong>：</p><ul><li><p>设置docker可以被远程操作</p></li><li><p>编写maven构建目标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- spring-boot-maven-plugin --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- docker-maven-plugin --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token comment">&lt;!-- 镜像的名称 --&gt;</span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>imageName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}:${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>imageName</span><span class="token punctuation">&gt;</span></span>                <span class="token comment">&lt;!-- 基础镜像 --&gt;</span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>baseImage</span><span class="token punctuation">&gt;</span></span>jdk1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>baseImage</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entryPoint</span><span class="token punctuation">&gt;</span></span>["java","-jar","/${project.build.finalName}.jar"]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entryPoint</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${project.build.directory}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>${project.build.finalName}.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerHost</span><span class="token punctuation">&gt;</span></span>http://192.168.12.135:2375<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerHost</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li>基于镜像创建容器  <code>docker run -di --name=web1 -p 9090:9090 spring-boot-docker:1.0-SNAPSHOT</code></li></ul><h3 id="03-IDEA中操作Docker镜像、容器"><a href="#03-IDEA中操作Docker镜像、容器" class="headerlink" title="03-IDEA中操作Docker镜像、容器"></a>03-IDEA中操作Docker镜像、容器</h3><p><strong>目标</strong>：通过配置IDEA的Docker，以图形界面方式操作远程Docker服务器的镜像、容器</p><p><strong>小结</strong>：</p><ul><li>配置IDEA中对于docker的连接信息</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201092428595.png" alt="image-20210201092428595"></p><ul><li>打开 <code>services</code> 操作</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201092457786.png" alt="image-20210201092457786"></p><blockquote><p>查看有哪些可以安装的docker版本号</p><p><strong>yum list</strong> docker-ce –showduplicates <strong>|</strong> <strong>sort</strong> -r</p><p>sudo yum install -y docker-ce-版本号；如：</p><p>sudo yum install -y docker-ce-17.12.0.ce-1.el7.centos</p></blockquote><h3 id="04-安装Gitlab"><a href="#04-安装Gitlab" class="headerlink" title="04-安装Gitlab"></a>04-安装Gitlab</h3><p><strong>目标</strong>：Gitlab的应用场景及创建Gitlab容器</p><p><strong>小结</strong>：</p><ul><li><p>拉取镜像</p></li><li><p>创建容器 </p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">docker run -d --name=gitlab \-p 443:443 -p 80:80 -p 222:22 \-v /usr/local/gitlab/config:/etc/gitlab \-v /usr/local/gitlab/logs:/var/log/gitlab \-v /usr/local/gitlab/data:/var/opt/gitlab \gitlab/gitlab-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>设置gitlab对外的路径；重启</p></li><li><p>修改root密码</p></li></ul><h3 id="05-Gitlab应用"><a href="#05-Gitlab应用" class="headerlink" title="05-Gitlab应用"></a>05-Gitlab应用</h3><p><strong>目标</strong>：将IDEA中的项目可以上传到Gitlab</p><p><strong>小结</strong>：</p><ul><li>在gitlab上创建一个项目；</li><li>在IDEA中创建本地仓库，设置一些不必要提交到版本仓库的忽略文件；</li><li>提交IDEA中的工程到本地仓库；</li><li>将本地仓库的版本推送到远程仓库</li></ul><h3 id="06-持续性集成部署"><a href="#06-持续性集成部署" class="headerlink" title="06-持续性集成部署"></a>06-持续性集成部署</h3><p><strong>目标</strong>：能够说出可持续集成主要阶段计划、开发、构建、测试、发布、部署、容器编排、系统监控</p><p><strong>小结</strong>：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201111509795.png" alt="image-20210201111509795"></p><h3 id="07-安装Jenkins"><a href="#07-安装Jenkins" class="headerlink" title="07-安装Jenkins"></a>07-安装Jenkins</h3><p><strong>目标</strong>：能够说出Jenkins作用</p><p><strong>小结</strong>：</p><ul><li>拉取镜像</li><li>创建容器</li><li>修改jenkins插件的下载地址</li></ul><h3 id="08-Jenkins基本配置"><a href="#08-Jenkins基本配置" class="headerlink" title="08-Jenkins基本配置"></a>08-Jenkins基本配置</h3><p><strong>目标</strong>：将新创建的Jenkins容器进行解锁、修改密码、创建用户</p><p><strong>小结</strong>：</p><ul><li>解锁：找到容器的这个文件 <code>/var/jenkins_home/secrets/initialAdminPassword</code>  里面有密码进行解锁</li><li>因为密码过长，所以可以在jenkins中修改密码</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201113207042.png" alt="image-20210201113207042"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201113229390.png" alt="image-20210201113229390"></p><ul><li>创建用户</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201113258314.png" alt="image-20210201113258314"></p><h3 id="09-Jenkins插件配置"><a href="#09-Jenkins插件配置" class="headerlink" title="09-Jenkins插件配置"></a>09-Jenkins插件配置</h3><p><strong>目标</strong>：安装、配置maven、git插件</p><p><strong>小结</strong>：</p><ul><li><p>访问Jenkins安装插件maven、git</p></li><li><p>安装在jenkins容器中的jdk、maven</p></li><li><p>访问Jenkins配置jdk、maven</p></li></ul><h3 id="10-Jenkins任务"><a href="#10-Jenkins任务" class="headerlink" title="10-Jenkins任务"></a>10-Jenkins任务</h3><p><strong>目标</strong>：将Gitlab中的项目中在发生变化之后可以及时构建最新的Docker镜像</p><p><strong>小结</strong>：</p><ul><li><p>创建任务</p><ul><li><p>指定版本管理仓库，项目pom.xml</p></li><li><p>设置什么时候触发</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-2.assets/image-20210201153552983.png" alt="image-20210201153552983"></p></li></ul></li></ul><h3 id="11-Rancher基本应用"><a href="#11-Rancher基本应用" class="headerlink" title="11-Rancher基本应用"></a>11-Rancher基本应用</h3><p><strong>目标</strong>：能够说出Rancher的作用</p><p><strong>小结</strong>：</p><p>Rancher的作用：可以对容器进行管理：新增、删除、查看容器的运行状态、执行容器命令</p><p>使用Rancher：</p><ul><li>根据需要创建不同的环境；</li><li>添加主机</li><li>在安装了docker的宿主机上执行对应的监听命令</li><li>操作容器</li></ul><h3 id="12-常见面试题"><a href="#12-常见面试题" class="headerlink" title="12-常见面试题"></a>12-常见面试题</h3><ul><li><p>需要持续部署的原因？</p><pre><code>手动部署出错率高需要熬夜加班部署单体应用的部署相对简单，部署服务停服务都只需要控制一个jar包即可微服务模式下应用部署的复杂度高，部署服务可能需要部署微服务相关的很多支持服务</code></pre></li><li><p>敏捷开发，持续集成，持续交付，持续部署，DevOps的区别？</p><pre><code>敏捷开发：关注任务的分配和实际开发和本地环境的构建持续集成：敏捷开发+自动化测试持续交付：持续集成+包发布到内部的库中持续部署：持续交付+部署环节DevOps：持续部署+运维（包含了软件生命周期的所有环节）</code></pre></li><li><p>为什么要进行每日站立会议？</p><pre><code>每日站会最主要的目的是及时的消除项目的风险。每个人通过说明以下的事项，项目经理能够很有效的把控项目的进度。主要内容包括：1、昨日工作内容2、今日计划工作内容3、是否有阻塞项目进度的问题</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;01-制作JDK8-Docker镜像&quot;&gt;&lt;a href=&quot;#01-制作JDK8-Docker镜像&quot; class=&quot;headerlink&quot; title=&quot;01-制作JDK8 Docker镜像&quot;&gt;&lt;/a&gt;01-制作JDK8 Docker镜像&lt;/h3&gt;&lt;p&gt;&lt;stron</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Docker" scheme="https://chenliren9527.github.io/tags/Docker/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="Jenkins" scheme="https://chenliren9527.github.io/tags/Jenkins/"/>
    
    <category term="Docker部署微服务" scheme="https://chenliren9527.github.io/tags/Docker%E9%83%A8%E7%BD%B2%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="GitLab" scheme="https://chenliren9527.github.io/tags/GitLab/"/>
    
    <category term="持续集成Jenkins" scheme="https://chenliren9527.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90Jenkins/"/>
    
    <category term="容器管理Rancher" scheme="https://chenliren9527.github.io/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86Rancher/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(08)-可持续化集成部署</title>
    <link href="https://chenliren9527.github.io/2021/02/01/jiu-ye-ji-zhu-jia-qiang-08-ke-chi-xu-hua-ji-cheng-bu-shu-1/"/>
    <id>https://chenliren9527.github.io/2021/02/01/jiu-ye-ji-zhu-jia-qiang-08-ke-chi-xu-hua-ji-cheng-bu-shu-1/</id>
    <published>2021-02-01T09:43:37.000Z</published>
    <updated>2022-05-17T05:35:20.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0、学习目标"><a href="#0、学习目标" class="headerlink" title="0、学习目标"></a>0、学习目标</h2><p>目标1：掌握Docker部署微服务</p><p>目标2：熟悉GitLab搭建git仓库</p><p>目标3：熟悉持续集成Jenkins</p><p>目标4：熟悉容器管理Rancher</p><h2 id="1、构建服务镜像"><a href="#1、构建服务镜像" class="headerlink" title="1、构建服务镜像"></a>1、构建服务镜像</h2><h3 id="1-1、DockerFile"><a href="#1-1、DockerFile" class="headerlink" title="1.1、DockerFile"></a>1.1、DockerFile</h3><p>Dockerfile可以基于已有镜像构建镜像</p><ul><li><p>Dockerfile其实就是一个文本文件，由一系列命令和参数构成，Docker可以读取Dockerfile文件并根据Dockerfile文件的描述来构建镜像。</p></li><li><p>Dockerfile文件内容一般分为4部分</p><ul><li>基础镜像信息</li><li>维护者信息</li><li>镜像操作指令</li><li>容器启动时执行的指令</li></ul></li></ul><table><thead><tr><th><strong>命令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>FROM image_name:tag</td><td>定义了使用哪个基础镜像启动构建流程</td></tr><tr><td>MAINTAINER user_name</td><td>声明镜像的创建者</td></tr><tr><td>ENV key value</td><td>设置环境变量 (可以写多条)</td></tr><tr><td>RUN command</td><td>是Dockerfile的核心部分(可以写多条)</td></tr><tr><td>ADD source_dir/file dest_dir/file</td><td>将宿主机的文件复制到容器内，如果是一个压缩文件，将会在复制后自动解压</td></tr><tr><td>COPY source_dir/file dest_dir/file</td><td>和ADD相似，但是如果有压缩文件并不能解压</td></tr><tr><td>WORKDIR path_dir</td><td>设置容器工作目录</td></tr></tbody></table><h3 id="1-2、制作JDK镜像"><a href="#1-2、制作JDK镜像" class="headerlink" title="1.2、制作JDK镜像"></a>1.2、制作JDK镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 1、创建目录mkdir –p /usr/local/dockerjdk8cd /usr/local/dockerjdk8      # 2、下载jdk-8u202-linux-x64.tar.gz并上传到服务器（虚拟机）中的/usr/local/dockerjdk8目录 # 3、在/usr/local/dockerjdk8目录下创建Dockerfile文件，文件内容如下：vi DockerfileFROM centos:7MAINTAINER ITCASTWORKDIR /usrRUN mkdir  /usr/local/javaADD jdk-8u202-linux-x64.tar.gz /usr/local/java/ENV JAVA_HOME /usr/local/java/jdk1.8.0_202ENV JRE_HOME $JAVA_HOME/jreENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATHENV PATH $JAVA_HOME/bin:$PATH# 4、执行命令构建镜像；不要忘了后面的那个 .docker build -t='jdk1.8' .# 5、查看镜像是否建立完成docker images<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/1556181978321-1612172677915.png" alt="1556181978321"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/1556182052304-1612172677916.png" alt="1556182052304"></p><h3 id="1-3、开启Docker远程访问"><a href="#1-3、开启Docker远程访问" class="headerlink" title="1.3、开启Docker远程访问"></a>1.3、开启Docker远程访问</h3><p>1）开启端口2375</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vi /lib/systemd/system/docker.service# 注释第14行；在第14行加入下面内容ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229180824490-1612172677916.png" alt="image-20201229180824490"></p><p>2）保存后，重启Docker</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 重新加载服务的配置文件systemctl daemon-reload systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3）检查docker是否监听了2375端口，有监听结果代表启动成功</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">netstat -ano | grep 2375<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229180948239-1612172677916.png" alt="image-20201229180948239"></p><p>4）本地浏览器访问(有结果代表能够远程访问docker): <a href="http://192.168.12.135:2375/version">http://192.168.12.135:2375/version</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229181233561-1612172677916.png" alt="image-20201229181233561"></p><blockquote><p>如果访问不了，可能是防火墙问题，可以关闭防火墙</p><p>systemctl stop firewalld.service<br>systemctl disable firewalld.service</p></blockquote><h3 id="1-4、构建服务镜像"><a href="#1-4、构建服务镜像" class="headerlink" title="1.4、构建服务镜像"></a>1.4、构建服务镜像</h3><p>1）导入 <code>资料\示例工程\spring-boot-docker</code> 到IDEA中；</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229191627317-1612172677916.png" alt="image-20201229191627317"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229191651111-1612172677916.png" alt="image-20201229191651111"></p><p>2）配置 <code>pom.xml</code>文件中 maven插件；（导入的工程中已经配置，不需要再执行这步）</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229191825195-1612172677916.png" alt="image-20201229191825195"></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!-- spring-boot-maven-plugin --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!-- docker-maven-plugin --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token comment">&lt;!-- 镜像的名称 --&gt;</span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>imageName</span><span class="token punctuation">&gt;</span></span>${project.artifactId}:${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>imageName</span><span class="token punctuation">&gt;</span></span>                    <span class="token comment">&lt;!-- 基础镜像 --&gt;</span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>baseImage</span><span class="token punctuation">&gt;</span></span>jdk1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>baseImage</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entryPoint</span><span class="token punctuation">&gt;</span></span>["java","-jar","/${project.build.finalName}.jar"]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entryPoint</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${project.build.directory}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>${project.build.finalName}.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerHost</span><span class="token punctuation">&gt;</span></span>http://10.10.10.10:2375<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerHost</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3）构建服务的Docker镜像</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229191927991-1612172677916.png" alt="image-20201229191927991"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229192133222-1612172677916.png" alt="image-20201229192133222"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229192140962-1612172677917.png" alt="image-20201229192140962"></p><p>上图的命令为： <code>clean package docker:removeImage docker:build</code> 表示对项目进行清除原有编译打包的内容，然后进行编译打包，删除docker中同名镜像，构建镜像。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229213241317-1612172677916.png" alt="image-20201229213241317"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229213326166-1612172677917.png" alt="image-20201229213326166"></p><p>4）查看镜像</p><p>可以到模拟终端使用 <code>docker images</code> 查看刚刚构建的镜像：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229213451694-1612172677917.png" alt="image-20201229213451694"></p><p>5）创建容器</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run -di --name=web1 -p 9090:9090 spring-boot-docker:1.0-SNAPSHOT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229214352765-1612172677917.png" alt="image-20201229214352765"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229214418191-1612172677917.png" alt="image-20201229214418191"></p><h3 id="1-5、IDEA中操作-Docker"><a href="#1-5、IDEA中操作-Docker" class="headerlink" title="1.5、IDEA中操作 Docker"></a>1.5、IDEA中操作 Docker</h3><p>在IDEA中可以通过配置Docker服务地址然后对Docker中的镜像、容器进行操作管理。具体如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229213744167-1612172677917.png" alt="image-20201229213744167"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229214637902-1612172677917.png" alt="image-20201229214637902"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229214724560-1612172677917.png" alt="image-20201229214724560"></p><p>也可以在界面上直接删除镜像，容器，或者基于镜像创建容器：</p><p>删除容器：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229215542793-1612172677917.png" alt="image-20201229215542793"></p><p>创建容器：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229215023684-1612172677917.png" alt="image-20201229215023684"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201229220114438-1612172677917.png" alt="image-20201229220114438"></p><h2 id="2、GitLab"><a href="#2、GitLab" class="headerlink" title="2、GitLab"></a>2、GitLab</h2><h3 id="2-1、简介"><a href="#2-1、简介" class="headerlink" title="2.1、简介"></a>2.1、简介</h3><p>基于git实现的代码仓库有很多，像我们熟知的 Gitee、GitHub、GitLab、Gogs等等，都是支持持续集成的，我们把代码推送到git时，git仓库会触发一个webhooks事件通知对应配置的持续集成软件，触发持续集成软件的对应操作。</p><p>GitLab是一个利用 Ruby on Rails开发的开源应用程序，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。</p><p>它拥有与Github、码云类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230111224421-1612172677917.png" alt="image-20201230111224421"></p><h3 id="2-2、安装"><a href="#2-2、安装" class="headerlink" title="2.2、安装"></a>2.2、安装</h3><p>1） 拉取镜像</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull gitlab/gitlab-ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2） 创建gitlab工作目录</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 创建config目录mkdir -p /usr/local/gitlab/config# 创建logs目录mkdir -p /usr/local/gitlab/logs# 创建data目录mkdir -p /usr/local/gitlab/data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3） 创建运行Gitlab容器</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run -d --name=gitlab \-p 443:443 -p 80:80 -p 222:22 \--restart=always \-v /usr/local/gitlab/config:/etc/gitlab \-v /usr/local/gitlab/logs:/var/log/gitlab \-v /usr/local/gitlab/data:/var/opt/gitlab \gitlab/gitlab-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230114542328-1612172677917.png" alt="image-20201230114542328"></p><blockquote><p>启动的时候；如果内存占用 2G多的时候差不多就启动完了</p></blockquote><p>4） 修改gitlab.rb配置文件</p><p>  gitlab容器运行没问题，但在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb（宿主机路径:/usr/local/gitlab/config/gitlab.rb）配置三个参数:</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vi /usr/local/gitlab/config/gitlab.rb# 在第33行 添中以下内容external_url 'http://192.168.12.135'gitlab_rails['gitlab_ssh_host'] = '192.168.12.135'gitlab_rails['gitlab_shell_ssh_port'] = 222<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230114700451-1612172677917.png" alt="image-20201230114700451"></p><p>5） 重启gitlab容器</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker restart gitlab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6） 浏览器访问: <a href="http://192.168.12.135/">http://192.168.12.135/</a>  ；刚进入需要修改root用户的密码；</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230115709369-1612172677917.png" alt="image-20201230115709369"></p><p> 比如：我修改的 用户名及密码为: root / root123456 ；修改之后使用新密码登录：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230115916987-1612172677917.png" alt="image-20201230115916987"></p><ol><li><p>密码重置无法生效时</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 进入gitlab容器</span>root@server:/<span class="token comment"># docker exec -it gitlab /bin/bash</span><span class="token comment"># 登录容器里面的gitlab,开启 Rails console.</span>root@1fab12c6d626:/<span class="token comment"># gitlab-rails console</span><span class="token comment"># 执行 u = User.find_by_username('root') 查找root用户</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:002:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> u <span class="token operator">=</span> User.find_by_username<span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:003:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> u.skip_reconfirmation<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后重新尝试登陆</p></li></ol><ol start="2"><li><p>重置密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 进入gitlab容器</span>root@server:/<span class="token comment"># docker exec -it gitlab /bin/bash</span><span class="token comment"># 登录容器里面的gitlab,开启 Rails console.</span>root@1fab12c6d626:/<span class="token comment"># gitlab-rails console</span><span class="token comment"># 执行 u = User.find_by_username('root') 查找root用户</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:002:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> user <span class="token operator">=</span> User.find_by_username<span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:003:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> user.password <span class="token operator">=</span> <span class="token string">'secret_pass'</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:004:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> user.password_confirmation  <span class="token operator">=</span> <span class="token string">'secret_pass'</span><span class="token comment"># When using this method instead of the Users API, GitLab sends an email to the user stating that the user changed their password.</span><span class="token comment"># If the password was changed by an administrator, execute the following command to notify the user by email: </span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:005:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> user.send_only_admin_changed_your_password_notification<span class="token operator">!</span>irb<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:005:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> user.save<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>登录之后：</p></li></ol><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230115929790-1612172677917.png" alt="image-20201230115929790"></p><h3 id="2-3、创建项目"><a href="#2-3、创建项目" class="headerlink" title="2.3、创建项目"></a>2.3、创建项目</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230163053509-1612172677917.png" alt="image-20201230163053509"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230163102687-1612172677917.png" alt="image-20201230163102687"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230163110022-1612172677917.png" alt="image-20201230163110022"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230163116600-1612172677917.png" alt="image-20201230163116600"></p><h3 id="2-4、上传项目"><a href="#2-4、上传项目" class="headerlink" title="2.4、上传项目"></a>2.4、上传项目</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230163229879-1612172677918.png" alt="image-20201230163229879"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230165352730-1612172677918.png" alt="image-20201230165352730"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170222226-1612172677918.png" alt="image-20201230170222226"></p><p>可以把 target/*.iml等文件也添加到忽略文件中。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170341676-1612172677918.png" alt="image-20201230170341676"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170325796-1612172677918.png" alt="image-20201230170325796"></p><p>推送到远程仓库：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170449172-1612172677918.png" alt="image-20201230170449172"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170504423-1612172677918.png" alt="image-20201230170504423"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170535508-1612172677918.png" alt="image-20201230170535508"></p><p>上图中输入 gitlab 中的用户名/密码。再到gitlab查看如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230170645415-1612172677918.png" alt="image-20201230170645415"></p><h2 id="3、持续集成"><a href="#3、持续集成" class="headerlink" title="3、持续集成"></a>3、持续集成</h2><h3 id="3-1、简介"><a href="#3-1、简介" class="headerlink" title="3.1、简介"></a>3.1、简介</h3><p>持续集成Continuous integration，简称CI 随着软件开发复杂度的不断提高，团队开发成员间如何更好地协同工作以确保软件开发的质量已经慢慢成为开发过程中不可回避的问题。尤其是近些年来，敏捷Agile在软件工程领域越来越红火，如何能在不断变化的需求中快速适应和保证软件的质量也显得尤其的重要。持续集成正是针对这一类问题的一种软件开发实践。它倡导团队开发成员必须<strong>经常集成</strong>他们的工作，甚至每天都可能发生多次集成。而每次的集成都是<strong>通过自动化的构建来验证，包括自动编译、发布和测试，从而尽快地发现集成错误，让团队能够更快的开发内聚的软件</strong>。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230172232893-1612172677918.png" alt="image-20201230172232893"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230173409927-1612172677918.png" alt="image-20201230173409927"></p><p>1.统一的代码库</p><p>2.自动构建</p><p>3.自动测试</p><p>4.每个人每天都要向代码库主干提交代码</p><p>5.每次代码递交后都会在持续集成服务器上触发一次构建</p><p>6.保证快速构建</p><p>7.模拟生产环境的自动测试</p><p>8.每个人都可以很容易的获取最新可执行的应用程序</p><p>9.每个人都清楚正在发生的状况</p><p>10.自动化的部署</p><h3 id="3-2、特点"><a href="#3-2、特点" class="headerlink" title="3.2、特点"></a>3.2、特点</h3><p>它是一个自动化的周期性的集成测试过程，<strong>从检出代码、编译构建、运行测试、结果记录、测试统计等都是自动完成的，无需过多人工干预</strong>；需要有专门的集成服务器来执行集成构建；需要有代码托管工具支持。</p><h3 id="3-3、作用"><a href="#3-3、作用" class="headerlink" title="3.3、作用"></a>3.3、作用</h3><p>保证团队开发人员提交代码的质量，<strong>减轻了软件发布时的压力</strong>；持续集成中的任何一个环节都是自动完成的，无需太多的人工干预，有利于减少重复过程以节省时间、费用和工作量。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/1594018223501-1612172677918.png" alt="1594018223501"></p><h2 id="4、Jenkins"><a href="#4、Jenkins" class="headerlink" title="4、Jenkins"></a>4、Jenkins</h2><h3 id="4-1、简介"><a href="#4-1、简介" class="headerlink" title="4.1、简介"></a>4.1、简介</h3><p>官方网站: <a href="https://www.jenkins.io/zh/">https://www.jenkins.io/zh/</a> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230174428489-1612172677918.png" alt="image-20201230174428489"></p><ul><li>Jenkins原名Hudson，2011年改为现在的名字，它是一个开源的实现持续集成的软件工具。</li><li>Jenkins是一款开源 CI&amp;CD 软件领导者，提供超过1000个插件来支持: <strong>自动化构建、部署</strong>、满足任何项目的需要。</li><li>Jenkins能实施监控集成中存在的错误，提供详细的日志文件和提醒功能，还能用图表的形式形象地展示项目构建的趋势和稳定性。 </li></ul><p> <strong>特点:</strong> </p><ul><li>易配置：提供友好的GUI配置界面。</li><li>变更支持：Jenkins能从代码仓库（CVS/SVN/Git）中获取代码更新列表并输出到编译输出信息中。</li><li>支持永久链接：用户是通过web来访问Jenkins的，而这些web页面的链接地址都是永久链接地址，因此，你可以在各种文档中直接使用该链接。</li><li>集成E-Mail/RSS/IM: 当完成一次集成时，可通过这些工具实时告诉你集成结果（一般情况下，构建一次集成需要花费一定时间，有了这个功能，你就可以在等待结果过程中，干别的事情）。</li><li>JUnit/TestNG测试报告: 也就是用以图表等形式提供详细的测试报表功能。</li><li>支持分布式构建: Jenkins可以把集成构建等工作分发到多台计算机中完成。</li><li>支持第三方插件: 使得Jenkins变得越来越强大。</li></ul><h3 id="4-2、安装"><a href="#4-2、安装" class="headerlink" title="4.2、安装"></a>4.2、安装</h3><p>1）拉取jenkins镜像</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull jenkins/jenkins:lts-centos7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2）创建jenkins容器</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run -d --name<span class="token operator">=</span>jenkins -p <span class="token number">8888</span>:8080 jenkins/jenkins:lts-centos7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-3、配置"><a href="#4-3、配置" class="headerlink" title="4.3、配置"></a>4.3、配置</h3><h4 id="4-3-1、配置插件镜像地址"><a href="#4-3-1、配置插件镜像地址" class="headerlink" title="4.3.1、配置插件镜像地址"></a>4.3.1、配置插件镜像地址</h4><p>配置插件镜像加速： jenkins官方地址下载速度比较慢，需要配置国内镜像。<a href="/2021/02/01/jiu-ye-ji-zhu-jia-qiang-08-ke-chi-xu-hua-ji-cheng-bu-shu-1/default.txt" title="default.txt">default.txt</a>(自行修改后缀为json)</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local  <span class="token comment"># 1. 上传 资料/jenkins/default.json 文件到 /usr/local 目录下</span>  <span class="token comment"># 2. 将当前文件夹下的default.json文件复制到容器中</span>docker <span class="token function">cp</span> default.json jenkins:/var/jenkins_home/updates/default.json  <span class="token comment"># 3. 重启jenkins</span>docker restart jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-2、解锁"><a href="#4-3-2、解锁" class="headerlink" title="4.3.2、解锁"></a>4.3.2、解锁</h4><p>访问配置: <a href="http://192.168.12.135:8888/">http://192.168.12.135:8888</a> 访问jenkins，提示需要解锁</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180026407-1612172677918.png" alt="image-20201230180026407"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 进入容器</span>docker <span class="token builtin class-name">exec</span> -it -u root jenkins <span class="token function">bash</span> <span class="token comment"># 查看密钥</span><span class="token function">cat</span> /var/jenkins_home/secrets/initialAdminPassword<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180247096-1612172677918.png" alt="image-20201230180247096"></p><p> 复制密钥 到浏览器 并点击 <code>继续</code></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180504301-1612172677918.png" alt="image-20201230180504301"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180619752-1612172677918.png" alt="image-20201230180619752"></p><p>  进入jenkins欢迎页面：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180626922-1612172677918.png" alt="image-20201230180626922"></p><h4 id="4-3-3、修改admin密码"><a href="#4-3-3、修改admin密码" class="headerlink" title="4.3.3、修改admin密码"></a>4.3.3、修改admin密码</h4><p>刚刚设置的密码太长；太难记住；可以修改admin密码；如修改为：123456</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180809150-1612172677918.png" alt="image-20201230180809150"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180905979-1612172677918.png" alt="image-20201230180905979"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230180954662-1612172677918.png" alt="image-20201230180954662"></p><h4 id="4-3-4、创建用户"><a href="#4-3-4、创建用户" class="headerlink" title="4.3.4、创建用户"></a>4.3.4、创建用户</h4><p>可以创建除了admin外用户；如创建一个用户为 <code>itheima</code>步骤如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230181133965-1612172677919.png" alt="image-20201230181133965"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230181205236-1612172677919.png" alt="image-20201230181205236"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230181241731-1612172677919.png" alt="image-20201230181241731"></p><h3 id="4-4、使用"><a href="#4-4、使用" class="headerlink" title="4.4、使用"></a>4.4、使用</h3><h4 id="4-4-1、安装maven插件"><a href="#4-4-1、安装maven插件" class="headerlink" title="4.4.1、安装maven插件"></a>4.4.1、安装maven插件</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230182141874-1612172677919.png" alt="image-20201230182141874"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230182256451-1612172677919.png" alt="image-20201230182256451"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230182447972-1612172677919.png" alt="image-20201230182447972"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230182723305-1612172677919.png" alt="image-20201230182723305"></p><h4 id="4-4-2、安装git插件"><a href="#4-4-2、安装git插件" class="headerlink" title="4.4.2、安装git插件"></a>4.4.2、安装git插件</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230182851956-1612172677919.png" alt="image-20201230182851956"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230202342066-1612172677919.png" alt="image-20201230202342066"></p><h4 id="4-4-3、全局工具配置"><a href="#4-4-3、全局工具配置" class="headerlink" title="4.4.3、全局工具配置"></a>4.4.3、全局工具配置</h4><p>因为Jenkins构建的时候需要使用到JDK以及Maven；所以将两个工具配置到安装了Jenkins的容器中。</p><p>1）<strong>上传资料</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token comment"># 1. 上传 资料/jdk-8u202-linux-x64.rpm 、资料/apache-maven-3.6.3-bin.tar.gz  到 /usr/local</span><span class="token comment"># 2. 将 /usr/local下的两个资源拷贝到Jenkins容器中</span>docker <span class="token function">cp</span> jdk-8u202-linux-x64.rpm jenkins:/usr/local/docker <span class="token function">cp</span> apache-maven-3.6.3-bin.tar.gz jenkins:/usr/local/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2）<strong>安装JDK</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 进入容器</span>docker <span class="token builtin class-name">exec</span> -it -u root jenkins <span class="token function">bash</span><span class="token comment"># 安装jdk 会被安装到这个目录: /usr/java/jdk1.8.0_202</span><span class="token builtin class-name">cd</span> /usr/local<span class="token function">rpm</span> -ivh jdk-8u202-linux-x64.rpm<span class="token comment"># 配置环境变量</span><span class="token function">vi</span> /etc/profile<span class="token comment"># 在文件最后面追加如下内容</span><span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span> <span class="token environment constant">USER</span> <span class="token environment constant">LOGNAME</span> MAIL <span class="token environment constant">HOSTNAME</span> <span class="token environment constant">HISTSIZE</span> <span class="token environment constant">HISTCONTROL</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk1.8.0_202-amd64<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib/dt.jar:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span><span class="token comment"># 使配置生效</span><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230191112497-1612172677919.png" alt="image-20201230191112497"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230191203627-1612172677919.png" alt="image-20201230191203627"></p><p>3）<strong>安装Maven</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token comment"># 解压maven</span><span class="token function">tar</span> -zxvf apache-maven-3.6.3-bin.tar.gz<span class="token comment"># 配置maven的下载镜像为阿里云镜像</span><span class="token function">vi</span> /usr/local/apache-maven-3.6.3/conf/settings.xml<span class="token comment"># 大概在第 159 行；添加如下镜像配置</span><span class="token operator">&lt;</span>mirror<span class="token operator">&gt;</span><span class="token operator">&lt;</span>id<span class="token operator">&gt;</span>alimaven<span class="token operator">&lt;</span>/id<span class="token operator">&gt;</span><span class="token operator">&lt;</span>mirrorOf<span class="token operator">&gt;</span>central<span class="token operator">&lt;</span>/mirrorOf<span class="token operator">&gt;</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>aliyun maven<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="token operator">&lt;</span>/url<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/mirror<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230191605279-1612172677919.png" alt="image-20201230191605279"></p><p>4）<strong>配置Jenkins中的Jdk和Maven</strong></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230191743307-1612172677919.png" alt="image-20201230191743307"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230191812111-1612172677919.png" alt="image-20201230191812111"></p><p>jdk 路径在Jenkins容器中的路径为：<code>/usr/java/jdk1.8.0_202-amd64</code></p><p>maven路径在Jenkins容器中的路径为：<code>/usr/local/apache-maven-3.6.3</code></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230192332541-1612172677919.png" alt="image-20201230192332541"></p><h4 id="4-4-4、创建Maven任务"><a href="#4-4-4、创建Maven任务" class="headerlink" title="4.4.4、创建Maven任务"></a>4.4.4、创建Maven任务</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230201235335-1612172677919.png" alt="image-20201230201235335"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230202737739-1612172677919.png" alt="image-20201230202737739"></p><p>设置Git仓库路径：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230203221883-1612172677919.png" alt="image-20201230203221883"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230210031042-1612172677919.png" alt="image-20201230210031042"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230210204568-1612172677919.png" alt="image-20201230210204568"></p><p>设置在构建时要执行的命令： <code>clean package docker:removeImage docker:build</code></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230210226781-1612172677919.png" alt="image-20201230210226781"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230210238373-1612172677920.png" alt="image-20201230210238373"></p><p>构建完成后可以到docker服务器上查看最新构建的镜像；然后也可以通过修改代码，每3分钟如果有变化就会触发构建。</p><blockquote><p>Jenkins 更加完整的参考视频：<a href="https://www.bilibili.com/video/BV1kJ411p7mV">https://www.bilibili.com/video/BV1kJ411p7mV</a></p></blockquote><h2 id="5、Rancher"><a href="#5、Rancher" class="headerlink" title="5、Rancher"></a>5、Rancher</h2><h3 id="5-1、简介"><a href="#5-1、简介" class="headerlink" title="5.1、简介"></a>5.1、简介</h3><p>Rancher是一套容器管理平台,它可以帮助组织在生产环境中轻松快捷的部署和管理容器。</p><p>Rancher为采用容器的团队提供了完整的软件堆栈，解决了跨任何基础设施架构管理多个Kubernetes集群的运维和安全挑战，同时为DevOps团队提供了用于运行容器化工作负载的集成工具。</p><p>官网地址: <a href="https://www.rancher.cn/">https://www.rancher.cn/</a> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/1595075181534-1612172677920.png" alt="1595075181534"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/1595075199813-1612172677920.png" alt="1595075199813"></p><h3 id="5-2、安装"><a href="#5-2、安装" class="headerlink" title="5.2、安装"></a>5.2、安装</h3><p>1）根据docker版本拉去 Rancher镜像  <a href="https://rancher.com/docs/rancher/v1.6/en/hosts/#supported-docker-versionstrueSupportedDockerVersions">Supported Docker Versions</a>， Docker版本是20+的考虑 Rancher 2.x。 以下步骤以Rancher 1.x为例。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull rancher/server  <span class="token comment">#for Rancher 1.x</span>docker pull rancher/rancher <span class="token comment">#for Rancher 2.x</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2）创建Rancher容器</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#for Rancher 1.x</span>docker run -d --name<span class="token operator">=</span>rancher -p <span class="token number">9191</span>:8080 rancher/server<span class="token comment">#for Rancher 2.x ，启动rancher的时候需要权限</span>docker run -d --privileged --restart<span class="token operator">=</span>unless-stopped -p <span class="token number">80</span>:80 -p <span class="token number">443</span>:443 rancher/rancher<span class="token comment"># 批量删除 rancher 相关的容器</span>docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -a <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/rancher/ {print <span class="token variable">$1</span>}'</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  3）浏览器访问: <a href="http://192.168.12.135:9191/">http://192.168.12.135:9191</a></p><p>  <img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212027579-1612172677920.png" alt="image-20201230212027579"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212041555-1612172677920.png" alt="image-20201230212041555"></p><p>4）切换至中文界面</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212149494-1612172677920.png" alt="image-20201230212149494"></p><h3 id="5-3、使用"><a href="#5-3、使用" class="headerlink" title="5.3、使用"></a>5.3、使用</h3><p>1）<strong>添加环境</strong></p><p>Rancher 支持将资源分组归属到多个环境。 每个环境具有自己独立的基础架构资源及服务，并由一个或多个用户、团队或组织所管理。<br>例如；您可以创建独立的“开发”、“测试”及“生产”环境以确保环境之间的安全隔离，将“开发”环境的访问权限赋予全部人员，但限制“生产”环境的访问权限给一个小的团队。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212430332-1612172677920.png" alt="image-20201230212430332"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212410588-1612172677920.png" alt="image-20201230212410588"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212554407-1612172677920.png" alt="image-20201230212554407"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212538348-1612172677920.png" alt="image-20201230212538348"></p><p>2）<strong>配置主机</strong></p><p>以dev开发环境为例，选择dev，配置该环境所对应的主机。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230212635681-1612172677920.png" alt="image-20201230212635681"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213254874-1612172677920.png" alt="image-20201230213254874"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213306770-1612172677920.png" alt="image-20201230213306770"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213320092-1612172677920.png" alt="image-20201230213320092"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213335705-1612172677920.png" alt="image-20201230213335705"></p><p>将上面复制的内容拷贝到我们的虚拟机中执行：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213416714-1612172677920.png" alt="image-20201230213416714"></p><p>执行完后，回到主机页面，稍等一会刷新页面可以看到主机信息，代表rancher已经连接到配置的主机服务器:</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213518346-1612172677920.png" alt="image-20201230213518346"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213532437-1612172677920.png" alt="image-20201230213532437"></p><p>3）<strong>创建容器</strong></p><p>1）点击【基础架构】菜单中的【容器】，进入到容器管理页面，可以看到当前服务器的容器列表。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213747636-1612172677920.png" alt="image-20201230213747636"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213820090-1612172677920.png" alt="image-20201230213820090"></p><p>2）点击【添加容器】按钮，创建容器:</p><p>填写名称、描述、端口映射等容器信息，点击下面的创建，即可创建容器。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230213844440-1612172677920.png" alt="image-20201230213844440"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230214111006-1612172677920.png" alt="image-20201230214111006"> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-08-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8C%96%E9%9B%86%E6%88%90%E9%83%A8%E7%BD%B2-1.assets/image-20201230214151784-1612172677920.png" alt="image-20201230214151784"></p><p>3）浏览器访问: <a href="http://192.168.12.135:9091/hello/itcast">http://192.168.12.135:9091/hello/itcast</a> </p><p><img src="assets/image-20201230214358405.png" alt="image-20201230214358405"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0、学习目标&quot;&gt;&lt;a href=&quot;#0、学习目标&quot; class=&quot;headerlink&quot; title=&quot;0、学习目标&quot;&gt;&lt;/a&gt;0、学习目标&lt;/h2&gt;&lt;p&gt;目标1：掌握Docker部署微服务&lt;/p&gt;
&lt;p&gt;目标2：熟悉GitLab搭建git仓库&lt;/p&gt;
&lt;p&gt;目标</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Docker" scheme="https://chenliren9527.github.io/tags/Docker/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="Jenkins" scheme="https://chenliren9527.github.io/tags/Jenkins/"/>
    
    <category term="Docker部署微服务" scheme="https://chenliren9527.github.io/tags/Docker%E9%83%A8%E7%BD%B2%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="GitLab" scheme="https://chenliren9527.github.io/tags/GitLab/"/>
    
    <category term="持续集成Jenkins" scheme="https://chenliren9527.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90Jenkins/"/>
    
    <category term="容器管理Rancher" scheme="https://chenliren9527.github.io/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86Rancher/"/>
    
  </entry>
  
  <entry>
    <title>FreeMarker讲义</title>
    <link href="https://chenliren9527.github.io/2021/01/31/freemarker-jiang-yi/"/>
    <id>https://chenliren9527.github.io/2021/01/31/freemarker-jiang-yi/</id>
    <published>2021-01-31T15:00:57.000Z</published>
    <updated>2022-05-17T05:35:19.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-FreeMarker"><a href="#1-FreeMarker" class="headerlink" title="1.  FreeMarker"></a>1.  FreeMarker</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1. 概述"></a>1.1. 概述</h2><p>FreeMarker是一款模板引擎： 即一种基于模板和要改变的数据， 并用来生成输出文本（HTML网页、电子邮件、配置文件、源代码等）的通用工具。 它不是面向最终用户的，而是一个Java类库，是一款程序员可以嵌入他们所开发产品的组件。</p><p>HTML静态化也是某些缓存策略使用的手段，对于系统中频繁使用数据库查询但是内容更新很小的应用，可以使用FreeMarker将HTML静态化。</p><h2 id="1-2-工作原理"><a href="#1-2-工作原理" class="headerlink" title="1.2. 工作原理"></a>1.2. 工作原理</h2><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image002.jpg" alt="img"></p><p><strong>模板</strong>：就是一份已经写好了基本内容，有着固定格式的文档，其中空出或者用占位符标识的内容，由使用者来填充，不同的使用者给出的数据是不同的。在模板中的占位符，在模板运行时，由模板引擎来解析模板，并采用动态数据替换占位符部分的内容。</p><p>FreeMarker与Web容器无关，即在Web运行时，它并不知道Servlet或HTTP。它不仅可以用作表现层的实现技术，而且还可以用于生成Html，XML，JSP或Java 等文件。</p><h2 id="1-3-优缺点"><a href="#1-3-优缺点" class="headerlink" title="1.3. 优缺点"></a>1.3. 优缺点</h2><p>l <strong>优点</strong></p><p>1、FreeMarker不支持Java脚本代码；所以可以彻底的分离表现层和业务逻辑；</p><p>2、提高开发效率。开发过程中，界面设计和开发人员可以并行工作；不必等待完成页面原形后，再开发程序；</p><p>3、开发过程中的人员分工更加明确。使用FreeMarker后，作为界面开发人员，只专心创建HTML文件、图像以及Web页面的其他可视化方面，不用理会数据；而程序开发人员则专注于系统实现，负责为页面准备要显示的数据。</p><p>l <strong>缺点</strong></p><ol><li><p>生成静态的HTML页面后，数据更新可能不及时；</p></li><li><p>需要学习FreeMarker模版语言。而且FreeMarker中的变量必须要赋值，如果不赋值，那么就会抛出异常。想避免错误就要应用if/elseif/else 指令进行判段，如果对每一个变量都判断的话，那么则反而增加了编程的麻烦。FreeMarker的map限定key必须是string，其他数据类型无法操作。</p></li></ol><h1 id="2-第一个FreeMarker例子"><a href="#2-第一个FreeMarker例子" class="headerlink" title="2.  第一个FreeMarker例子"></a>2.  第一个FreeMarker例子</h1><h2 id="2-1-搭建maven项目"><a href="#2-1-搭建maven项目" class="headerlink" title="2.1. 搭建maven项目"></a>2.1. 搭建maven项目</h2><p>搭建java项目即可。FreeMarker的依赖坐标为：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-控制台输出"><a href="#2-2-控制台输出" class="headerlink" title="2.2. 控制台输出"></a>2.2. 控制台输出</h2><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image004.jpg" alt="img"></p><h2 id="2-3-文件输出"><a href="#2-3-文件输出" class="headerlink" title="2.3. 文件输出"></a>2.3. 文件输出</h2><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image006.jpg" alt="img"></p><h1 id="3-模版"><a href="#3-模版" class="headerlink" title="3.  模版"></a>3.  模版</h1><p>详见《FreeMarker_Manual_zh_CN.pdf》的第26页。</p><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image008.jpg" alt="img"></p><h1 id="4-基本语法"><a href="#4-基本语法" class="headerlink" title="4.  基本语法"></a>4.  基本语法</h1><p>一些常见的符号说明：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">${ }插值；只能输出数值、日期或者字符串，其它类型不能输出。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#freemarker命令</span><span class="token attr-name">&lt;#--</span> <span class="token attr-name">注释</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>&lt;@使用自定义命令??是判断对象是否为空?函数调用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-1-命令"><a href="#4-1-命令" class="headerlink" title="4.1. 命令"></a>4.1. 命令</h2><h3 id="4-1-1-自定义对象输出"><a href="#4-1-1-自定义对象输出" class="headerlink" title="4.1.1.  自定义对象输出"></a>4.1.1.  自定义对象输出</h3><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image010.jpg" alt="img"></p><p>模版文件内容：</p><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image012.jpg" alt="img"></p><h3 id="4-1-2-控制"><a href="#4-1-2-控制" class="headerlink" title="4.1.2.  控制"></a>4.1.2.  控制</h3><p>语法：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">condition</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#elseif</span> <span class="token attr-name">condition2</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#elseif</span> <span class="token attr-name">condition3</span><span class="token punctuation">&gt;</span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#else</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">&gt;</span></span>这里：condition ， condition2 等：表达式将被计算成布尔值。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">关键之：gt ：比较运算符“大于”；gte ：比较运算符“大于或等于”；lt ：比较运算符“小于”；lte ：比较运算符“小于或等于”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image014.jpg" alt="img"></p><h3 id="4-1-3-循环"><a href="#4-1-3-循环" class="headerlink" title="4.1.3.  循环"></a>4.1.3.  循环</h3><p>语法：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">sequence</span> <span class="token attr-name">as</span> <span class="token attr-name">item</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span>这里：sequence ：表达式将被算作序列或集合item ：循环变量（不是表达式）的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image016.jpg" alt="img"></p><p>模板中可以如下遍历：</p><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image018.jpg" alt="img"></p><h2 id="4-2-变量"><a href="#4-2-变量" class="headerlink" title="4.2. 变量"></a>4.2. 变量</h2><p>语法：<code>&lt;#assign name=value&gt;</code></p><p>示例：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">定义字符变量</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">str</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hello World.<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>${str}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">定义数值变量</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>123</span><span class="token punctuation">&gt;</span></span>${num}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">定义布尔变量；但是${}只能输出数值或字符串，需要转换为字符串；?sring</span> <span class="token attr-name">的意思是调用boolean类型的内置函数string</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">bool</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>true</span><span class="token punctuation">&gt;</span></span>${bool?string}${bool?string("Yes","No")}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">显示日期</span>  <span class="token attr-name">.now</span> <span class="token attr-name">是当前时间</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>${.now}---${.now?string("yyyy年MM月dd日 HH:mm:ss")}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">字符串转日期</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">dd</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2000-01-01<span class="token punctuation">"</span></span><span class="token attr-name">?date("yyyy-MM-dd")</span><span class="token punctuation">&gt;</span></span>${dd?string("yyyy年MM月dd日")}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">获取范围字符</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>${"我和黑马程序员的故事"[2..6]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：local一般使用在宏或函数里面。</p><h2 id="4-3-空值"><a href="#4-3-空值" class="headerlink" title="4.3. 空值"></a>4.3. 空值</h2><p>在freemarker中对于空值必须手动处理。</p><p>在插值中处理空值：或者 </p><pre class="line-numbers language-html" data-language="html"><code class="language-html">${emp.name!} 表示name为空时什么都不显示${emp.name!(“名字为空”)}  表示name为空时显示 名字为空${(emp.company.name)!} 表示如果company对象为空则什么都不显示，!只用在最近的那个属性判断；所以如果遇上有自定义类型（导航）属性时，需要使用括号${bool???string} 表示：首先??表示判断bool是否为空返回true或者false，然后对返回的值调用其内置函数string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">str??</span><span class="token punctuation">&gt;</span></span> 表示去判断str变量是否为空值，空则true，不空为false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>模板示例：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">${emp.name!}的使用</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>${emp.name!}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">${emp.name!()}的使用</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>${emp.name!("名字为空。。。")} ---- 或者不加小括号也一样  ----${emp.name!"名字为空。。。"} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">${bool???string}的使用</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>bool???string = ${bool???string}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">??</span> <span class="token attr-name">判断一个值是否为空，空返回true,否则false</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">str</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">str??</span><span class="token punctuation">&gt;</span></span>  str为空值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#else</span><span class="token punctuation">&gt;</span></span>  str不为空值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-列表与Map"><a href="#5-列表与Map" class="headerlink" title="5.  列表与Map"></a>5.  列表与Map</h1><h2 id="5-1-列表"><a href="#5-1-列表" class="headerlink" title="5.1. 列表"></a>5.1. 列表</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">nums</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> [1,2,3,4,5]</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">nums</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span>6..10</span> <span class="token punctuation">&gt;</span></span>全部输出：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">nums</span> <span class="token attr-name">as</span> <span class="token attr-name">no</span><span class="token punctuation">&gt;</span></span>${no}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>输出第1个到第4个：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">nums[0..3]</span> <span class="token attr-name">as</span> <span class="token attr-name">no</span><span class="token punctuation">&gt;</span></span>${no}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-2-Map"><a href="#5-2-Map" class="headerlink" title="5.2. Map"></a>5.2. Map</h2><p>Freemarker对于map的key而言，其<strong>key的类型必须为字符串</strong>。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">处理map数据：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>&lt;#assign map = {"name":"heima1","age":10}&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">map?keys</span> <span class="token attr-name">as</span> <span class="token attr-name">key</span><span class="token punctuation">&gt;</span></span>${key}----${map["${key}"]} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-自定义命令macro"><a href="#6-自定义命令macro" class="headerlink" title="6.  自定义命令macro"></a>6.  自定义命令macro</h1><p>通过macro可以自定义命令，然后可以传递参数；在macro标签之间可以嵌套其它命令。另外；macro传递参数值时若参数有默认值则要把有默认值的参数放置在参数列表的最后。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--</span> <span class="token attr-name">第一个参数为命令的名称，是必须的；之后的为参数列表，可以添加多个</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>自定义命令：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#macro</span> <span class="token attr-name">sayHello</span> <span class="token attr-name">name</span><span class="token punctuation">&gt;</span></span>Hello ${name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#macro</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>@sayHello</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>黑马<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>自定义命令，多参数，默认参数：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#macro</span> <span class="token attr-name">printNum</span> <span class="token attr-name">name</span> <span class="token attr-name">num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">1..num</span> <span class="token attr-name">as</span> <span class="token attr-name">n</span><span class="token punctuation">&gt;</span></span>Hello ${name} --- ${n}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#macro</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>@printNum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>黑马<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-Spring-MVC整合FreeMarker"><a href="#7-Spring-MVC整合FreeMarker" class="headerlink" title="7.  Spring MVC整合FreeMarker"></a>7.  Spring MVC整合FreeMarker</h1><p>Spring mvc 主要是使用freemarker用来展示数据；所以只需要配置它对应的视图解析器即可。</p><h2 id="7-1-搭建maven工程"><a href="#7-1-搭建maven工程" class="headerlink" title="7.1. 搭建maven工程"></a>7.1. 搭建maven工程</h2><p>Pom.xml文件内容为：</p> <pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.itcast.freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.3.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.3.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- JSP相关 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- java编译插件 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 配置Tomcat插件 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat7-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>8080<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span><span class="token punctuation">&gt;</span></span>/freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-2-配置"><a href="#7-2-配置" class="headerlink" title="7.2. 配置"></a>7.2. 配置</h2><p>Spring MVC的配置文件：spring-freemarker-servlet.xml文件内容为：</p> <pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsdhttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsdhttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsdhttp://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span> <span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!-- 定义处理器 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn.itcast.freemarker.controller<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>freeMarkerConfigurer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templateLoaderPath<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/WEB-INF/ftl<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.ftl<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>order<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contentType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 设置资源前缀路径 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/WEB-INF/jsp/<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 设置资源的后缀 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>order<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 解决servlet映射路径配置为/后，访问静态资源404问题 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置web.xml文件：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span><span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd<span class="token punctuation">"</span></span><span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>WebApp_ID<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>utf-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 配置spring mvc前端控制器 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>spring-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:spring/spring-freemarker-servlet.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 随着应用服务器启动而初始化 若不配置，则第一次请求后完成初始化 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>spring-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- springmvc的映射规则： 可以配置：/、/xxx/*、*.* 不可配置：/* 与应用服务器配置默认冲突 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>spring-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-3-测试"><a href="#7-3-测试" class="headerlink" title="7.3. 测试"></a>7.3. 测试</h2><p>编写HelloController分别测试转发到ftl和jsp的方法：</p><p><img src="FreeMarker%E8%AE%B2%E4%B9%89.assets/clip_image020.jpg" alt="img"></p><h1 id="8-Nginx配置静态化"><a href="#8-Nginx配置静态化" class="headerlink" title="8.  Nginx配置静态化"></a>8.  Nginx配置静态化</h1><p>如果淘淘商城需要首页静态化，则需要在页面中所有动态加载和jsp标签语法都需要改变；然后在nginx的配置文件nginx.conf中添加：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">server {        listen       80;        server_name  www.taotao.com taotao.com;proxy_set_header X-Forwarded-Host $host;        proxy_set_header X-Forwarded-Server $host;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_set_header Host $host;set $staticIndex "D:/itcast/taotao_index";root $staticIndex;location ~*(/|/index.html)$ {set $indexHtml $staticIndex/index.html;if (!-e $indexHtml ){proxy_pass http://127.0.0.1:9091;# break;}rewrite $indexHtml break;proxy_connect_timeout 600;proxy_read_timeout 600;}        location / {proxy_pass http://127.0.0.1:9091;proxy_connect_timeout 600;proxy_read_timeout 600;        }     }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-FreeMarker&quot;&gt;&lt;a href=&quot;#1-FreeMarker&quot; class=&quot;headerlink&quot; title=&quot;1.  FreeMarker&quot;&gt;&lt;/a&gt;1.  FreeMarker&lt;/h1&gt;&lt;h2 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1</summary>
      
    
    
    
    <category term="ssm框架" scheme="https://chenliren9527.github.io/categories/ssm%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="FreeMarker" scheme="https://chenliren9527.github.io/tags/FreeMarker/"/>
    
    <category term="页面静态化" scheme="https://chenliren9527.github.io/tags/%E9%A1%B5%E9%9D%A2%E9%9D%99%E6%80%81%E5%8C%96/"/>
    
    <category term="Spring MVC" scheme="https://chenliren9527.github.io/tags/Spring-MVC/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(07)-微服务扩展课堂笔记</title>
    <link href="https://chenliren9527.github.io/2021/01/31/jiu-ye-ji-zhu-jia-qiang-07-wei-fu-wu-kuo-zhan-2/"/>
    <id>https://chenliren9527.github.io/2021/01/31/jiu-ye-ji-zhu-jia-qiang-07-wei-fu-wu-kuo-zhan-2/</id>
    <published>2021-01-31T14:54:24.000Z</published>
    <updated>2022-05-17T05:35:20.961Z</updated>
    
    <content type="html"><![CDATA[<h3 id="01-微服务回顾"><a href="#01-微服务回顾" class="headerlink" title="01-微服务回顾"></a>01-微服务回顾</h3><p><strong>目标</strong>：能够说出Spring Cloud常用组件作用</p><p><strong>小结</strong>：</p><ul><li>Eureka 注册中心；注册服务</li><li>ribbon 负载均衡</li><li>Hystrix 熔断器</li><li>Feign 服务调用</li><li>Config 配置中心</li><li>Gateway 网关</li></ul><h3 id="02-微服务网关Gateway回顾"><a href="#02-微服务网关Gateway回顾" class="headerlink" title="02-微服务网关Gateway回顾"></a>02-微服务网关Gateway回顾</h3><p><strong>目标</strong>：能够说出网关的主要作用</p><p><strong>小结</strong>：</p><p>网关：过滤、路由；那么可以在网关服务器中进行鉴定权限、限流</p><h3 id="03-微服务网关Zuul"><a href="#03-微服务网关Zuul" class="headerlink" title="03-微服务网关Zuul"></a>03-微服务网关Zuul</h3><p><strong>目标</strong>：能够根据配置使用Zuul路由到其它微服务</p><p><strong>小结</strong>：</p><p>zuul与gateway网关是同类产品，都是可以进行过滤、路由；如果要使用zuul的话；那么如下：</p><p>1、添加启动器依赖；</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-zuul<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2、在启动引导类配置注解；</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131092759558.png" alt="image-20210131092759558"></p><p>3、配置zuul路由信息</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131092821499.png" alt="image-20210131092821499"></p><h3 id="04-限流-算法简介"><a href="#04-限流-算法简介" class="headerlink" title="04-限流-算法简介"></a>04-限流-算法简介</h3><p><strong>目标</strong>：漏桶算法与令牌算法的区别</p><p><strong>小结</strong>：</p><p><strong>为什么要限流</strong>：在遇到并发量大的时候，为了系统的平稳运行正常处理请求；为了防止网络攻击</p><p><strong>限流算法</strong>：</p><ul><li>漏桶：按照一定的速率处理请求，如果超过桶大小（burst)会溢出也就是拒绝请求；不利于应对突发流量</li><li>令牌桶：按照一定的速率产生令牌，并可以动态设置产生速率和拿出令牌速率，比较适合应对突发流量</li></ul><h3 id="05-Nginx限流-速率"><a href="#05-Nginx限流-速率" class="headerlink" title="05-Nginx限流-速率"></a>05-Nginx限流-速率</h3><p><strong>目标</strong>：通过配置Nginx配置项限制单个Ip的速率处理</p><p><strong>小结</strong>：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131103203439.png" alt="image-20210131103203439"></p><h3 id="06-Nginx限流-并发量"><a href="#06-Nginx限流-并发量" class="headerlink" title="06-Nginx限流-并发量"></a>06-Nginx限流-并发量</h3><p><strong>目标</strong>：通过配置Nginx配置项限制单个Ip的最大连接数及服务器的总连接数</p><p><strong>小结</strong>：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131110130355.png" alt="image-20210131110130355"></p><h3 id="07-Gateway限流"><a href="#07-Gateway限流" class="headerlink" title="07-Gateway限流"></a>07-Gateway限流</h3><p><strong>目标</strong>：了解Gateay限流的配置步骤</p><p><strong>小结</strong>：</p><ul><li>添加依赖</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis-reactive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注册关于限流key的解析器</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131111322295.png" alt="image-20210131111322295"></p><ul><li>配置限流策略</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131111341301.png" alt="image-20210131111341301"></p><ul><li>启动redis</li></ul><h3 id="08-分布式日志GrayLog"><a href="#08-分布式日志GrayLog" class="headerlink" title="08-分布式日志GrayLog"></a>08-分布式日志GrayLog</h3><p><strong>目标</strong>：能够说出分布式日志系统的应用场景</p><p><strong>小结</strong>：</p><p>为什么<strong>GrayLog</strong>：在微服务中有很多子系统，这些系统都会产生日志；一旦遇到问题，那么需要逐个服务去收集查看这些日志信息，比较繁琐；使用分布式日志服务组件则可以集中的收集信息统一的在一个图形化界面中查看日志信息；方便高效。</p><p>业界：常用的是ELK、GrayLog</p><p>因为GrayLog可以解决如下问题：</p><ul><li><p>不能处理多行日志，比如mysql慢查询，Tomcat、Jetty应用的Java异常打印</p></li><li><p>不能保留原始日志，只能把原始日志分字段保存，这样搜索日志结果是一堆Json格式文本，无法阅读。</p></li><li><p>不符合正则表达式匹配的日志行，被全部丢弃。</p></li></ul><h3 id="09-安装GrayLog"><a href="#09-安装GrayLog" class="headerlink" title="09-安装GrayLog"></a>09-安装GrayLog</h3><p><strong>目标</strong>：安装配置ElasticSearch、MongoDB、GrayLog</p><p><strong>小结</strong>：</p><p>根据文档安装 ElasticSearch、MongoDB、GrayLog；安装之后对graylog设置了日志输入的格式 <code>GELF UDP</code></p><h3 id="10-项目中集成GrayLog"><a href="#10-项目中集成GrayLog" class="headerlink" title="10-项目中集成GrayLog"></a>10-项目中集成GrayLog</h3><p><strong>目标</strong>：通过配置将不同的分布式系统中的微服务系统日志统一被GrayLog采集查看</p><p><strong>小结</strong>：</p><ul><li><p>添加logstash-gelf依赖；</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>biz.paluch.logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logstash-gelf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.13.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>添加日志配置文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 控制台日志输出器 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 对日志进行格式化 --&gt;</span>        <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread线程名，%-5level：级别 %msg：日志消息，%n是换行符--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- GrayLog日志输出器 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>biz.paluch.logging.gelf.logback.GelfLogbackAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端连接主机 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>udp:192.168.12.135<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端连接端口 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>12201<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端版本号 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 当前服务名称(服务id) 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facility</span><span class="token punctuation">&gt;</span></span>heima-user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facility</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 附加字段 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>additionalFields</span><span class="token punctuation">&gt;</span></span>version=4.1.0,module=heima-user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>additionalFields</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 记录异常跟踪栈日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extractStackTrace</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extractStackTrace</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 过滤异常跟踪栈日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filterStackTrace</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filterStackTrace</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 映射分析搜集的日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mdcProfiling</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mdcProfiling</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 时间戳格式化 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timestampPattern</span><span class="token punctuation">&gt;</span></span>yyyy-MM-dd HH:mm:ss,SSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timestampPattern</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 最大消息大小 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maximumMessageSize</span><span class="token punctuation">&gt;</span></span>8192<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maximumMessageSize</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 记录日志 additivity: false(只能在当前logger中使用) --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bhd<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 根记录日志 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="11-分布式链路追踪"><a href="#11-分布式链路追踪" class="headerlink" title="11-分布式链路追踪"></a>11-分布式链路追踪</h3><p><strong>目标</strong>：能够说出分布式链路追踪意义</p><p><strong>小结</strong>：</p><p>分布式链路追踪：可以在分布式、微服务架构中可以记录各个微服务之间的调用关系，形成调用链路、服务调用图；可以快速定位问题。</p><p>在业界中；对于这种追踪服务之间调用关系的系统称为APM。常见的产品有：</p><ul><li>spring cloud sleuth</li><li>zipkin</li><li>skywalking</li></ul><h3 id="12-Spring-Cloud-Sleuth简介"><a href="#12-Spring-Cloud-Sleuth简介" class="headerlink" title="12-Spring Cloud Sleuth简介"></a>12-Spring Cloud Sleuth简介</h3><p><strong>目标</strong>：Spring Cloud Sleuth特点及关键信息</p><p><strong>小结</strong>：</p><p>sleuth：可以记录服务调用、统计分析、链路优化</p><p>术语：</p><ul><li>traceId 一次完整的业务请求只有唯一的一个traceId；</li><li>spanId、parentId；记录一次请求中的某一段服务调用的id；如果存在有多次服务之间的调用的话，那么parentId则以上一个spanId为其值。</li><li>注解：可以记录客户端发起、接收、服务端接收、发起等这些时间戳。简称：cs/sr/ss/cr</li></ul><h3 id="13-Spring-Cloud-Sleuth应用"><a href="#13-Spring-Cloud-Sleuth应用" class="headerlink" title="13-Spring Cloud Sleuth应用"></a>13-Spring Cloud Sleuth应用</h3><p><strong>目标</strong>：查看IDEA控制台对应项目的链路追踪信息</p><p><strong>小结</strong>：</p><p>如果要单独使用sleuth的话；那么直接添加如下依赖即可：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-sleuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131151803013.png" alt="image-20210131151803013"></p><h3 id="14-Zipkin应用"><a href="#14-Zipkin应用" class="headerlink" title="14-Zipkin应用"></a>14-Zipkin应用</h3><p><strong>目标</strong>：应用Zipkin追踪微服务系统调用关系</p><p><strong>小结</strong>：</p><p>1、搭建server服务器端；</p><p>2、配置client客户端，也就是我们自己开发的系统</p><ul><li>添加依赖；</li><li>设置zipkin服务器地址和采样率</li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131153639256.png" alt="image-20210131153639256"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-2.assets/image-20210131153650154.png" alt="image-20210131153650154"></p><h3 id="15-Skywalking应用"><a href="#15-Skywalking应用" class="headerlink" title="15-Skywalking应用"></a>15-Skywalking应用</h3><p><strong>目标</strong>：应用Skywalking追踪微服务系统调用关系</p><p><strong>小结</strong>：</p><ul><li><p>启动skywalking服务器，可以修改存储媒介（es/mysql)</p></li><li><p>应用的话需要使用到skywalking 的探针；解压对应的包并找到 agent 路径的 <code>skywalking-agent.jar</code></p></li><li><p>项目启动的过程中设置jvm启动项：</p><pre class="line-numbers language-none"><code class="language-none">-javaagent:F:/tmp/workspaces/apache-skywalking-apm-bin/agent/skywalking-agent.jar-Dskywalking.agent.service_name=heima-eureka-Dskywalking.collector.backend_service=192.168.12.135:11800<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;01-微服务回顾&quot;&gt;&lt;a href=&quot;#01-微服务回顾&quot; class=&quot;headerlink&quot; title=&quot;01-微服务回顾&quot;&gt;&lt;/a&gt;01-微服务回顾&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：能够说出Spring Cloud常用组件作用&lt;/p&gt;</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring Cloud" scheme="https://chenliren9527.github.io/tags/Spring-Cloud/"/>
    
    <category term="微服务" scheme="https://chenliren9527.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="Zuul" scheme="https://chenliren9527.github.io/tags/Zuul/"/>
    
    <category term="限流" scheme="https://chenliren9527.github.io/tags/%E9%99%90%E6%B5%81/"/>
    
    <category term="Nginx限流" scheme="https://chenliren9527.github.io/tags/Nginx%E9%99%90%E6%B5%81/"/>
    
    <category term="Gateway限流" scheme="https://chenliren9527.github.io/tags/Gateway%E9%99%90%E6%B5%81/"/>
    
    <category term="分布式日志系统" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GrayLog" scheme="https://chenliren9527.github.io/tags/GrayLog/"/>
    
    <category term="分布式链路追踪" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
    
    <category term="Zipkin" scheme="https://chenliren9527.github.io/tags/Zipkin/"/>
    
    <category term="skywalking" scheme="https://chenliren9527.github.io/tags/skywalking/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(07)-微服务扩展讲义</title>
    <link href="https://chenliren9527.github.io/2021/01/31/jiu-ye-ji-zhu-jia-qiang-07-wei-fu-wu-kuo-zhan-1/"/>
    <id>https://chenliren9527.github.io/2021/01/31/jiu-ye-ji-zhu-jia-qiang-07-wei-fu-wu-kuo-zhan-1/</id>
    <published>2021-01-31T14:54:18.000Z</published>
    <updated>2022-05-17T05:35:20.929Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0、课程目标"><a href="#0、课程目标" class="headerlink" title="0、课程目标"></a>0、课程目标</h2><p>目标1：能够说出Spring Cloud微服务组件</p><p>目标2：能够使用网关Zuul</p><p>目标3：掌握Nginx限流与Gateway限流</p><p>目标4：使用分布式日志系统GrayLog</p><p>目标5：使用分布式链路追踪Zipkin</p><p>目标6：使用分布式链路追踪skywalking </p><h2 id="1、微服务"><a href="#1、微服务" class="headerlink" title="1、微服务"></a>1、微服务</h2><h3 id="1-1、DUBBO"><a href="#1-1、DUBBO" class="headerlink" title="1.1、DUBBO"></a>1.1、DUBBO</h3><p>若以DUBBO作为分布式微服务架构的话，一般技术栈组合为： DUBBO + Spring Boot</p><h3 id="1-2、Spring-Cloud"><a href="#1-2、Spring-Cloud" class="headerlink" title="1.2、Spring Cloud"></a>1.2、Spring Cloud</h3><h4 id="1-2-1、Spring-Cloud"><a href="#1-2-1、Spring-Cloud" class="headerlink" title="1.2.1、Spring Cloud"></a>1.2.1、Spring Cloud</h4><p>Spring Cloud 提供了一些可以让开发者快速构建分布式应用的组件，这些组件可以很好的在任何分布式环境下工作。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107114634261.png" alt="image-20210107114634261"></p><blockquote><p>Gradle与Maven都是自动化构建工具，虽然目前来说Maven是行业标准，而Gradle是后起之秀，它抛弃了Maven中基于XML的繁琐配置，大大简化了构建代码的行数。</p></blockquote><h4 id="1-2-2、组件回顾"><a href="#1-2-2、组件回顾" class="headerlink" title="1.2.2、组件回顾"></a>1.2.2、组件回顾</h4><ul><li><strong>注册中心Eureka</strong></li></ul><p>注册中心可以说是微服务架构中的”通讯录“，它记录了服务和服务地址的映射关系，当服务需要调用其它服务时，就到这里找到服务的地址，进行调用。同类型的有Nacos、consul、zookeeper。</p><table><thead><tr><th>特性</th><th>Eureka</th><th>Nacos</th><th>Consul</th><th>Zookeeper</th></tr></thead><tbody><tr><td>一致性协议</td><td>AP</td><td>AP+CP</td><td>CP</td><td>CP</td></tr><tr><td>负载均衡策略</td><td>ribbon</td><td>权重</td><td>fabio</td><td></td></tr><tr><td>雪崩</td><td>支持</td><td>支持</td><td></td><td></td></tr><tr><td>Spring Cloud集成</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>DUBBO集成</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td></tr></tbody></table><blockquote><ul><li>一致性(Consistency) 所有节点在同一时间具有相同的数据</li><li>可用性(Availability) 保证每个请求不管成功或者失败都有响应；只要收到用户的请求，服务器就必须给出回应</li><li>分区容错性(Partition tolerance) 系统中任意信息的丢失或失败不会影响系统的继续运作；跨区的服务器之间通信可能接收不到，但是不影响系统使用</li></ul></blockquote><p>Eureka的<code>AP</code> 如何解决Eureka集群服务器节点之间的数据一致性问题？</p><pre class="line-numbers language-none"><code class="language-none">1、Eureka Server管理了全部的服务器列表2、当 Eureka Server 收到客户端的注册、下线、心跳请求时，通过服务器列表向其余的服务器进行消息广播，如果广播失败则重试，直到任务过期后取消任务，此时这两台服务器之间数据会出现短暂的不一致。3、如果网络恢复正常，收到了其它服务器广播的心跳任务，此时可能有二种情况  1. 该实例已经自动过期，则重新进行注册；  2. 数据冲突，出现不一致的情况，则需要发起同步请求，其实也就是重新注册一次，同时踢除老的实例。总之，通过集群之间的消息广播可以实现数据的最终一致性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003628876.png" alt="1591003628876"></p><p><strong>服务注册</strong></p><ul><li><p>Eureka在应用启动时,主动去 Eureka Server 端注册</p></li><li><p>应用会开启一个30秒执行一次的定时任务，该任务会去监测自身的 IP 信息以及自身的配置信息是否发生改变，如果发生改变，则会重新发起注册，参数配置<code>eureka.client.instance-info-replication-interval-seconds=30</code>。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003723375.png" alt="1591003723375">  </p></li></ul><p><strong>服务下线</strong></p><p>客户端 首先会将自身的状态改为 DOWN，接着发送下线命令至 Eureka Server 请求下掉自己的服务。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003771197.png" alt="1591003771197"> </p><p><strong>服务续约</strong></p><p>服务提供者在注册完服务之后，服务提供者会维护一个心跳用来持续告诉EurekaServer：“我还活着”，以防止EurekaServer的“剔除任务”，简称：“服务续约”，参数配置:<code>eureka.instance.leaseRenewalIntervalInSeconds</code>默认是30秒</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003804770.png" alt="1591003804770"> </p><p><strong>服务踢出</strong></p><p>服务提供者服务失效时间<code>eureka.instance.leaseExpirationDurationInSeconds</code>默认90秒，如果eureka Server在90秒没有收到续约则会把该服务踢出</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003846308.png" alt="1591003846308"> </p><p><strong>自我保护</strong></p><ul><li><p>为了避免网络连接故障，服务未按时进行心跳续约时,Eureka Server 在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，不再踢出任何服务，当网络故障恢复后，Eureka Server自动退出自我保护模式</p></li><li><p>关闭保护机制配置:<code>eureka.server.enable-self-preservation=false</code> (<strong>不推荐</strong>)</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591003902796.png" alt="1591003902796">  </p></li><li><p><strong>负载均衡Ribbon</strong></p></li></ul><p>Ribbon在我们实际开发场景单独使用的地方不多，都是与别的组件组合使用，比如Feign/Gateway</p><p>Ribbon作为后端负载均衡器，比Nginx更注重的是承担并发（意思就是说这些服务都要处理，只是有不同的策略进行处理）而不是请求分发，可以直接感知后台动态变化来指定分发策略。它一共提供了7种负载均衡策略：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1594627941879.png" alt="1594627941879"></p><ul><li><strong>熔断器Hystrix</strong></li></ul><p>分布式环境下，服务跟服务之间需要进行依赖，一个业务调用通常依赖多个基础服务。</p><p>例如：对于同步调用，当库存服务不可用，商品服务请求线程阻塞，如果这个时候有大批量的请求过来，最终会导致整个商品服务资源耗尽，导致商品服务也无法提供服务，并且这种不可用可能会继续影响上游服务，这种现象称为<strong>雪崩</strong>效应</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591156095367.png" alt="1591156095367"> </p><p>Hystrix能够保证在一个微服务出问题的前提下，不会导致整个服务失败，避免级联故障，以提高分布式系统的弹性，即避免雪崩。</p><p><strong>雪崩常见的效应场景</strong></p><ul><li>硬件故障：如服务器宕机，机房断电，光纤被挖断等</li><li>流量激增：如异常流量，促销活动等</li><li>程序BUG：如程序逻辑导致内存泄漏，JVM长时间FullGC等</li><li>同步等待：服务调用采用同步模式，同步等待造成的资源耗尽</li></ul><p><strong>雪崩效应应对策略</strong></p><ul><li><p>硬件故障：服务分布式部署</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591156253192.png" alt="1591156253192">  </p></li><li><p>流量激增：服务扩容、限流</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591156274182.png" alt="1591156274182">  </p></li><li><p>程序BUG：修改程序bug、及时释放资源</p></li><li><p>同步等待：资源隔离、MQ解耦，不可用服务调用快速失败进行降级处理</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591156300296.png" alt="1591156300296">  </p></li><li><p><strong>服务调用Feign</strong></p></li></ul><p><strong>微服务 与 微服务 之间调用问题</strong></p><ul><li>调用URL问题</li><li>请求参数问题</li><li>响应数据问题</li></ul><p><strong>Feign存在的目的就是为了简化微服务之间的调用</strong>，它可以把这些问题全部伪装成一个Feign的http客户端接口，默认集成RestTemplate。 </p><p>Feign可以把Rest的请求进行隐藏，伪装SpringMVC的Controller一样。你不用再自己拼接url，拼接参数等等操作，一切都交给Feign去做。(从而简化java语言http客户端远程调用问题) </p><p>项目主页：<a href="https://github.com/OpenFeign/feign">https://github.com/OpenFeign/feign</a> </p><ul><li><strong>配置中心Config</strong></li></ul><p>Spring Cloud Config: 用来管理配置信息文件，它从配置仓库获取所有的配置信息，而其他的服务从配置中心获取自己所需要的配置信息；配置，指的是服务配置中心，就是所有的服务配置都中心化。</p><p><strong>配置中心好处:</strong> </p><ul><li>统一配置的增删改查</li><li>不同环境配置隔离（开发、测试、上线）</li><li>高性能、高可用性</li><li>请求量多、高并发</li></ul><p><strong>国内知名配置中心框架:</strong></p><ul><li>携程：Apollo，配置中心 <a href="https://github.com/ctripcorp/apollo">https://github.com/ctripcorp/apollo</a></li><li>阿里：Nacos，它是注册中心和配置中心的结合体 <a href="https://nacos.io/zh-cn/">https://nacos.io/zh-cn/</a> </li></ul><p><strong>配置中心原理图:</strong> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1555847177033.png" alt="1555847177033"></p><h2 id="2、微服务网关"><a href="#2、微服务网关" class="headerlink" title="2、微服务网关"></a>2、微服务网关</h2><h3 id="2-1、网关"><a href="#2-1、网关" class="headerlink" title="2.1、网关"></a>2.1、网关</h3><p>服务<strong>网关</strong> = <strong>过滤</strong>器 + 服务发现 + <strong>路由</strong>转发 </p><ul><li><p>过滤器：比如验签、权限校验、限流等等</p></li><li><p>服务发现：找到服务提供方</p></li><li><p>路由转发：接收一切外界请求，转发到后端的微服务上去</p></li><li><p>没有网关的架构</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591264634415.png" alt="1591264634415">  </p></li><li><p>有网关的架构</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591265023744.png" alt="1591265023744">  </p></li></ul><h3 id="2-2、Gateway"><a href="#2-2、Gateway" class="headerlink" title="2.2、Gateway"></a>2.2、Gateway</h3><ul><li>Spring Cloud Gateway是Spring官网基于Spring 5.0、 Spring Boot 2.0、Project Reactor等技术开发的网关服务。</li><li>Spring Cloud Gateway基于Filter链提供网关基本功能：安全、监控／埋点、限流等。</li><li>Spring Cloud Gateway为微服务架构提供简单、有效且统一的API路由管理方式。</li><li>Spring Cloud Gateway是替代Netflix Zuul的一套解决方案。</li></ul><p>Spring Cloud Gateway组件的核心是一系列的过滤器，通过这些过滤器可以将客户端发送的请求转发（路由）到对应的微服务。 Spring Cloud Gateway是加在整个微服务最前沿的防火墙和代理器，隐藏微服务结点IP端口信息，从而加强安全保护。Spring Cloud Gateway本身也是一个微服务，需要注册到Eureka服务注册中心。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591338821942.png" alt="1591338821942"></p><p>在Gateway内部，先启动一个netty server（默认端口为8080）接受请求，然后通过Routes（每个Route由Predicate(等同于HandlerMapping)和Filter(等同于HandlerAdapter)）处理后通过Netty Client发给响应的微服务。</p><h3 id="2-3、Zuul"><a href="#2-3、Zuul" class="headerlink" title="2.3、Zuul"></a>2.3、Zuul</h3><h4 id="2-3-1、简介"><a href="#2-3-1、简介" class="headerlink" title="2.3.1、简介"></a>2.3.1、简介</h4><p>Zuul是SpringCloud全家桶中的微服务API网关，本质上是一个Servlet，也是一个多线程阻塞模型。</p><p>多线程阻塞模型：服务端可以接受多个请求，但是每一个请求在结果响应之前都处于阻塞状态。</p><h4 id="2-3-2、应用说明"><a href="#2-3-2、应用说明" class="headerlink" title="2.3.2、应用说明"></a>2.3.2、应用说明</h4><p>1）导入 <code>资料\演示工程\springcloud-demo</code> </p><p>2）分别启动  <code>heima-eureka</code> <code>heima-user</code> <code>heima-zuul</code></p><p>3）访问 <a href="http://localhost:10087/user/1">http://localhost:10087/user/1</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107205203656.png" alt="image-20210107205203656"></p><h4 id="2-3-3、与Gateway区别"><a href="#2-3-3、与Gateway区别" class="headerlink" title="2.3.3、与Gateway区别"></a>2.3.3、与Gateway区别</h4><table><thead><tr><th>网关组件</th><th>基于框架</th><th>阻塞模型</th><th>容器</th></tr></thead><tbody><tr><td>Zuul 1.x</td><td>Servlet</td><td>多线程阻塞模型</td><td>Tomcat</td></tr><tr><td>Spring Cloud Gateway</td><td>Spring5.+  WebFlux</td><td>响应式的、非阻塞式模型</td><td>Netty</td></tr></tbody></table><blockquote><p>WebFlux是基于响应式流的，可以用来建立异步、非阻塞、事件驱动的服务。默认采用Reactor作为响应式流的实现库</p></blockquote><h2 id="3、限流"><a href="#3、限流" class="headerlink" title="3、限流"></a>3、限流</h2><h3 id="3-1、简介"><a href="#3-1、简介" class="headerlink" title="3.1、简介"></a>3.1、简介</h3><p>在高并发的系统中，往往需要在系统中做限流，一方面是为了<strong>防止大量的请求使服务器过载</strong>，导致服务不可用，另一方面是为了<strong>防止网络攻击</strong>。</p><p>一般开发高并发系统常见的限流有：</p><ul><li>限制总并发数（比如数据库连接池、线程池）</li><li>限制瞬时并发数（如 nginx 的 limit_conn 模块，用来限制<strong>瞬时并发连接数</strong>）</li><li>限制时间范围内的平均速率（如 Guava 的 RateLimiter、nginx 的 limit_req 模块，<strong>限制每秒的平均速率</strong>）</li><li>其他还有如限制远程接口调用速率、限制 MQ 的消费速率</li><li>另外还可以根据网络连接数、网络流量、CPU 或内存负载等来限流。</li></ul><h3 id="3-2、算法"><a href="#3-2、算法" class="headerlink" title="3.2、算法"></a>3.2、算法</h3><p>简单的做法是维护一个单位时间内的 计数器，每次请求计数器加1，当单位时间内计数器累加到大于设定的阈值，则之后的请求都被拒绝，直到单位时间已经过去，再将 计数器 重置为零。此方式有个弊端：如果在单位时间1s内允许100个请求，在10ms已经通过了100个请求，那后面的990ms，只能眼巴巴的把请求拒绝，我们把这种现象称为“突刺现象”。</p><p>常用的更平滑的限流算法有两种：<strong>漏桶算法</strong> 和 <strong>令牌桶算法</strong>。</p><h4 id="3-2-1、漏桶算法"><a href="#3-2-1、漏桶算法" class="headerlink" title="3.2.1、漏桶算法"></a>3.2.1、漏桶算法</h4><p>漏桶(Leaky Bucket)算法思路很简单,水(请求)先进入到漏桶里，漏桶以一定的速度出水(每秒响应速 率)，当水流入速度过大会直接溢出(访问频率超过接口响应速率)，然后就拒绝请求，可以看出漏桶算法 能强行限制数据的传输速率。示意图如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591348926532.png" alt="1591348926532"> </p><p>这里有两个变量，一个是<strong>桶的大小</strong>，支持流量突发增多时可以存多少的水（burst），另一个是水桶<strong>漏洞的大小</strong>（rate）。漏桶算法能够强行<strong>限制数据的传输速率</strong>。因为漏桶的漏出速率是固定的参数，所以，即使网络中不存在资源冲突（没有发生拥塞），漏桶算法也不能使流突发（burst）到端口速率；因此，漏桶算法对于存在突发特性的流量来说缺乏效率。</p><h4 id="3-2-2、令牌桶算法"><a href="#3-2-2、令牌桶算法" class="headerlink" title="3.2.2、令牌桶算法"></a>3.2.2、令牌桶算法</h4><p>令牌桶算法 和 漏桶算法 效果一样但方向相反的算法，更加容易理解。随着时间流逝，系统会按恒定 1/QPS 时间间隔（如果 QPS=100，则间隔是 10ms）往桶里加入 Token令牌，如果桶已经满了就不再加了。新请求来临时，会各自拿走一个 Token，如果没有 Token 可拿了就阻塞或者拒绝服务。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591349193863.png" alt="1591349193863"> </p><p>令牌桶算法能够在限制数据的平均传输速率的同时还允许某种程度的<strong>突发传输</strong>。一旦需要提高速率，则按需提高放入桶中的令牌的速率。一般会定时（比如 100 毫秒）往桶中增加一定数量的令牌，有些变种算法则实时的计算应该增加的令牌的数量。</p><h3 id="3-3、Nginx限流"><a href="#3-3、Nginx限流" class="headerlink" title="3.3、Nginx限流"></a>3.3、Nginx限流</h3><h4 id="3-3-1、控制单个IP速率"><a href="#3-3-1、控制单个IP速率" class="headerlink" title="3.3.1、控制单个IP速率"></a>3.3.1、控制单个IP速率</h4><p><strong>1）配置访问速率</strong></p><p>控制速率的方式采用漏桶算法；在Nginx中通过 <code> limit_req_zone key zone rate</code>  实现；具体意义：</p><pre class="line-numbers language-none"><code class="language-none">key: 定义限流对象，binary_remote_addr是一种key，表示基于remote_addr(客户端IP)来做限流，binary_的目的是压缩内存占用量。zone: 定义共享内存区来存储访问信息，myLimit:10m 表示一个大小为10M，名字为myLimit的内存区域。1M能存储16000 IP地址的访问信息，10M可以存储16W IP地址访问信息。rate: 用于设置最大访问速率，rate=2r/s 表示每秒最多处理2个请求。Nginx 实际上以毫秒为粒度来跟踪请求信息，因此 2r/s 实际上是限制：每500毫秒处理一个请求。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1）解压 <code>资料\nginx-1.19.1.zip</code> </p><p>2）配置 <code>nginx-1.19.1\conf\nginx.conf</code> 文件；（可删除大部分注释内容）</p><ul><li>①大概在第 34 行，添加如下：</li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#定义内存区myLimit大小为10m，限制同一个ip，每秒钟最多处理2个请求</span><span class="token attr-name">limit_req_zone</span> <span class="token attr-value">$binary_remote_addr zone=myLimit:10m rate=2r/s;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107214221562.png" alt="image-20210107214221562"></p><ul><li>②在大概第 45 行添加内容如下；</li></ul><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">location / {    limit_req zone=myLimit;    proxy_pass http://127.0.0.1:10086;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107214325521.png" alt="image-20210107214325521"></p><p>3）启动Nginx（ <code>start .\nginx.exe</code> ）；访问 <a href="http://localhost/user/1">http://localhost/user/1</a> 测试；</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107213427866.png" alt="image-20210107213427866"></p><p>如果上述地址在1秒内超过2次的话：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210107214354148.png" alt="image-20210107214354148"></p><p><strong>2）处理突发流量（排队）</strong></p><p>上面例子限制 2r/s，如果流量突然增大，超出的请求将被拒绝，无法处理突发流量；可以通过在上述的配置中结合 burst 参数使用来解决该问题。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108105058936.png" alt="image-20210108105058936"></p><blockquote><p>burst 译为突发、爆发，表示在超过设定的处理速率后能额外处理的请求数,当rate=2r/s 时，将1s拆成2份，即每500ms可处理1个请求。 </p><p>此处，burst=4，若1秒内同时有6个请求到达，Nginx会处理按速率1秒内处理2个请求，剩余4个请求将放入队列，然后每隔500ms从队列中获取一个请求进行处理。若1秒内请求数大于6，将拒绝处理多余的请求，直接返回503. </p><p>不过，单独使用burst参数并不实用。假设burst=50，rate依然为10r/s，排队中的50个请求虽然每100ms会处理一个，但第50个请求却需要等待50*100ms即5s，这么长的处理时间自然难以接受。</p></blockquote><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108111035122.png" alt="image-20210108111035122"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108111048344.png" alt="image-20210108111048344"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108111054878.png" alt="image-20210108111054878"></p><p>3）<strong>处理突发流量（不排队）</strong></p><p>修改配置文件；平均每秒允许不超过2个请求，突发不超过4个请求，并且处理突发4个请求的时候，没有延迟，等到完成之后，按照正常的速率处理。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108111522535.png" alt="image-20210108111522535"></p><p>重启nginx（ <code>.\nginx.exe -s reload</code> ），可测试1秒内并发7个请求处理结果如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108111619335.png" alt="image-20210108111619335"></p><h4 id="3-3-2、控制并发量"><a href="#3-3-2、控制并发量" class="headerlink" title="3.3.2、控制并发量"></a>3.3.2、控制并发量</h4><p>在nginx中的配置文件中 ngx_http_limit_conn_module 提供了限制连接数的能力。主要是利用limit_conn_zone和limit_conn两个指令。 </p><p>利用连接数限制 某一个用户的ip连接的数量来控制流量。 </p><blockquote><p>注意：并非所有连接都被计算在内 只有当服务器正在处理请求并且已经读取了整个请求头时，才会计算有效连接。此处忽略测试。</p></blockquote><ul><li><strong>限制单个IP连接数</strong></li></ul><p>1）修改 <code>nginx.conf</code> 文件，在大概第 36 行，添加如下：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 根据IP地址来限制连接数，存储内存大小10M </span><span class="token attr-name">limit_conn_zone</span> <span class="token attr-value">$binary_remote_addr zone=addr:10m;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108112839058.png" alt="image-20210108112839058"></p><p>2）修改 <code>nginx.conf</code> 文件，在大概第 42 行，修改如下：</p><pre class="line-numbers language-none"><code class="language-none">location / {# limit_req zone=myLimit burst=4 nodelay;# 配置单个客户端ip与服务器的连接数为2limit_conn addr 2;proxy_pass http://127.0.0.1:10086;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108112846831.png" alt="image-20210108112846831"></p><p>3）修改 <code>UserController</code> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108112905352.png" alt="image-20210108112905352"></p><p>4）测试</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108112947626.png" alt="image-20210108112947626"></p><ul><li><strong>限制服务器最大连接数</strong></li></ul><p>上面的限制了单个IP的最大连接数；在nginx中也可以通过如下配置设置连接的服务器的最大连接数。</p><p>1）修改 <code>nginx.conf</code> 文件，在大概第 36 行，修改如下：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 根据服务器提供的总连接数做限制，存储内存大小10M </span><span class="token attr-name">limit_conn_zone</span> <span class="token attr-value">$server_name zone=perserver:10m;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108153010138.png" alt="image-20210108153010138"></p><p>2）修改 <code>nginx.conf</code> 文件，在大概第 42 行，修改如下：</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 限制与服务器的总连接数</span><span class="token attr-name">limit_conn</span> <span class="token attr-value">perserver 10;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108153018658.png" alt="image-20210108153018658"></p><p>3）测试</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108153137579.png" alt="image-20210108153137579"></p><h3 id="3-4、Gateway限流"><a href="#3-4、Gateway限流" class="headerlink" title="3.4、Gateway限流"></a>3.4、Gateway限流</h3><p>Spring Cloud Gateway 可以配置限流策略对请求进行限流；默认使用redis的RateLimiter令牌桶限流算法来实现。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20191213095741252.png" alt="image-20191213095741252"></p><p>如果要配置的话；则在网关所在工程中配置如下：</p><p>1）添加依赖；</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis-reactive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2）配置限流键解析器；</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GatewayApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">GatewayApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 根据ip限流     * @return ip信息     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token keyword">public</span> <span class="token class-name">KeyResolver</span> <span class="token function">ipKeyResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KeyResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 根据uri限流     * @return uri     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">KeyResolver</span> <span class="token function">uriKeyResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KeyResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>KeyResolver用于计算某一个类型的限流的KEY也就是说，可以通过KeyResolver来指定限流的Key。</p><p>我们可以根据IP来限流，比如每个IP每秒钟只能请求一次，在<code>GatewayApplication</code>定义key的获取，获取客户端IP，将IP作为key。</p><p>Mono.just表示的是包含 0 或者 1 个元素的异步序列；请求并等待。如：Mono<void>用于在异步任务完成时发出通知</void></p><p>另外；hostAddress在本机本地访问会输出 0:0:0:0:0:0:0:1 ，非本地则不会如此。</p></blockquote><p>3）配置限流令牌桶策略及redis信息</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10086</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> heima<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> user<span class="token punctuation">-</span>route          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//heima<span class="token punctuation">-</span>user          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/user/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> RequestRateLimiter <span class="token comment">#请求数限流</span>              <span class="token key atrule">args</span><span class="token punctuation">:</span>                <span class="token comment">#限流键解析器</span>                <span class="token key atrule">key-resolver</span><span class="token punctuation">:</span> <span class="token string">"#{@ipKeyResolver}"</span>                <span class="token comment"># 令牌产生速率</span>                <span class="token key atrule">redis-rate-limiter.replenishRate</span><span class="token punctuation">:</span> <span class="token number">1</span>                <span class="token comment"># 令牌桶突发容量</span>                <span class="token key atrule">redis-rate-limiter.burstCapacity</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">redis</span><span class="token punctuation">:</span>    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>9090/eureka  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">ip-address</span><span class="token punctuation">:</span> 127.0.0.1    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4）测试</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108174628985.png" alt="image-20210108174628985"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108174505960.png" alt="image-20210108174505960"></p><p>发出12个请求；10个失败，2个成功。常规1秒1个令牌加上突发令牌桶容量1共2个请求可被处理。</p><h2 id="4、分布式日志GrayLog"><a href="#4、分布式日志GrayLog" class="headerlink" title="4、分布式日志GrayLog"></a>4、分布式日志GrayLog</h2><h3 id="4-1、分布式日志"><a href="#4-1、分布式日志" class="headerlink" title="4.1、分布式日志"></a>4.1、分布式日志</h3><p>在微服务架构下，微服务被拆分成多个微小的服务，每个微服务都部署在不同的服务实例上，当我们定位问题，检索日志的时候需要依次登录每台服务器进行检索。</p><p>这样是不是感觉很繁琐和效率低下？所以我们还需要一个工具来帮助集中收集、存储和检索这些跟踪信息。</p><p>集中化管理日志后，日志的统计和检索又成为一件比较麻烦的事。以前，我们通过使用grep、awk、和wc等linux命令能实现检索和统计，但是对于要求更高的查询、排序和统计等要求和庞大的机器数量依然使用这样的方法难免有点力不从心。</p><p>分布式日志服务就是来帮我们解决上述问题的。其基本思路是:</p><ul><li>日志收集器: 微服务中引入日志客户端，将记录的日志发送到日志服务端的收集器，然后以某种方式存储</li><li>日志数据存储: 一般使用ElasticSearch分布式存储，把收集器收集到的日志格式化，然后存储到分布式存储中</li><li>日志查看: 利用ElasticSearch的统计搜索功能，实现日志查询和报表输出</li></ul><p>比较知名的分布式日志服务包括:</p><ul><li>ELK：ElasticSearch、Logstash、Kibana</li><li>GrayLog</li></ul><h3 id="4-2、GrayLog简介"><a href="#4-2、GrayLog简介" class="headerlink" title="4.2、GrayLog简介"></a>4.2、GrayLog简介</h3><p>业界比较知名的分布式日志服务解决方案是ELK，而我们今天要学习的是GrayLog。为什么呢？</p><p>ELK解决方案问题:</p><ul><li><p>不能处理多行日志，比如mysql慢查询，Tomcat、Jetty应用的Java异常打印</p></li><li><p>不能保留原始日志，只能把原始日志分字段保存，这样搜索日志结果是一堆Json格式文本，无法阅读。</p></li><li><p>不符合正则表达式匹配的日志行，被全部丢弃。</p></li></ul><p>GrayLog方案优势:</p><ul><li><p>一体化方案，安装方便，不像ELK有3个独立系统间的集成问题。</p></li><li><p>采集原始日志，并可以事后再添加字段，比如http_status_code，response_time等等</p></li><li><p>自己开发采集日志脚本，并用curl/nc发送到GrayLog Server，发送格式是自定义的GELF，Flunted和Logstash都有相应的输出GELF消息的插件。自己开发带来很大的自由度。实际上只需要用inotifywait监控日志的modify事件，并把日志的新增行用curl/netcat发送到GrayLog Server即可。</p></li><li><p>搜索结果高亮显示，就像google一样。</p></li><li><p>搜索语法简单，比如:<code>source:mongo AND reponse_time_ms:&gt;5000</code>避免直接输入ElasticSearch搜索的json语法。</p></li><li><p>搜索条件可以导出为ElasticSearch的搜索json脚本，方便直接开发调用ElasticSearch rest api的搜索脚本。</p></li></ul><p>官网: <a href="https://www.graylog.org/">https://www.graylog.org</a></p><p> <img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108175717041.png" alt="image-20210108175717041"></p><p>基本框架图:</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591426416655.png" alt="1591426416655"></p><h3 id="4-3、GayLog安装"><a href="#4-3、GayLog安装" class="headerlink" title="4.3、GayLog安装"></a>4.3、GayLog安装</h3><h4 id="4-3-1、环境准备"><a href="#4-3-1、环境准备" class="headerlink" title="4.3.1、环境准备"></a>4.3.1、环境准备</h4><ul><li><p>centos7</p></li><li><p>docker</p></li><li><p>jdk1.8</p></li><li><p>ElasticSearch6.x</p></li><li><p>mongodb</p></li></ul><h4 id="4-3-2、安装ElasticSearch"><a href="#4-3-2、安装ElasticSearch" class="headerlink" title="4.3.2、安装ElasticSearch"></a>4.3.2、安装ElasticSearch</h4><p>注意: GrayLog3 不支持ElasticSearch7.x版本，必须用6的版本。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 拉取镜像</span>docker pull elasticsearch:6.6.2<span class="token comment"># 创建容器</span>docker run -d --privileged --name<span class="token operator">=</span>graylog-es <span class="token punctuation">\</span>-e <span class="token string">"http.host=0.0.0.0"</span> <span class="token punctuation">\</span>-e <span class="token string">"network.host=0.0.0.0"</span> <span class="token punctuation">\</span>-e <span class="token string">"TAKE_FILE_OWNERSHIP=true"</span> <span class="token punctuation">\</span>-e <span class="token string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span> <span class="token punctuation">\</span>-e <span class="token string">"discovery.type=single-node"</span> <span class="token punctuation">\</span>-v es-data:/usr/share/elasticsearch/data <span class="token punctuation">\</span>-v es-logs:/usr/share/elasticsearch/logs <span class="token punctuation">\</span>-p <span class="token number">9201</span>:9200 <span class="token punctuation">\</span>-p <span class="token number">9301</span>:9300 <span class="token punctuation">\</span>elasticsearch:6.6.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可访问 <a href="http://192.168.12.135:9201/">http://192.168.12.135:9201/</a> 测试。</p><h4 id="4-3-3、安装MongoDB"><a href="#4-3-3、安装MongoDB" class="headerlink" title="4.3.3、安装MongoDB"></a>4.3.3、安装MongoDB</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 拉取镜像</span>docker pull mongo<span class="token comment"># 创建容器</span>docker run -d --privileged --name<span class="token operator">=</span>graylog-mongo <span class="token punctuation">\</span>-v mongo-configdb:/data/configdb/ <span class="token punctuation">\</span>-v mongo-db:/data/db/ <span class="token punctuation">\</span>-p <span class="token number">27017</span>:27017 <span class="token punctuation">\</span>mongo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-4、安装GrayLog"><a href="#4-3-4、安装GrayLog" class="headerlink" title="4.3.4、安装GrayLog"></a>4.3.4、安装GrayLog</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 拉取镜像</span>docker pull graylog/graylog:3.3.0<span class="token comment"># 创建容器 --link: 指定链接的容器(容器通信)</span>docker run -d --name<span class="token operator">=</span>graylog <span class="token punctuation">\</span>--link graylog-mongo:mongo <span class="token punctuation">\</span>-p <span class="token number">9000</span>:9000 <span class="token punctuation">\</span>-p <span class="token number">12201</span>:12201/udp <span class="token punctuation">\</span>-e <span class="token assign-left variable">GRAYLOG_HTTP_EXTERNAL_URI</span><span class="token operator">=</span>http://192.168.12.135:9000/ <span class="token punctuation">\</span>-e <span class="token assign-left variable">GRAYLOG_ELASTICSEARCH_HOSTS</span><span class="token operator">=</span>http://192.168.12.135:9201/ <span class="token punctuation">\</span>-e <span class="token assign-left variable">GRAYLOG_ROOT_TIMEZONE</span><span class="token operator">=</span><span class="token string">"Asia/Shanghai"</span> <span class="token punctuation">\</span>-e <span class="token assign-left variable">GRAYLOG_WEB_ENDPOINT_URI</span><span class="token operator">=</span><span class="token string">"http://192.168.12.135:9000/:9000/api"</span> <span class="token punctuation">\</span>-e <span class="token assign-left variable">GRAYLOG_ROOT_PASSWORD_SHA2</span><span class="token operator">=</span>8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 <span class="token punctuation">\</span>graylog/graylog:3.3.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-5、访问GrayLog"><a href="#4-3-5、访问GrayLog" class="headerlink" title="4.3.5、访问GrayLog"></a>4.3.5、访问GrayLog</h4><p>访问：<a href="http://192.168.12.135:9000/">http://192.168.12.135:9000</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108203217473.png" alt="image-20210108203217473"></p><p>输入用户名与密码，都是<code>admin</code>，进入首页，因为没有数据，暂看不到日志信息：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108203726840.png" alt="image-20210108203726840"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108203840561.png" alt="image-20210108203840561"></p><h4 id="4-3-6、配置GrayLog"><a href="#4-3-6、配置GrayLog" class="headerlink" title="4.3.6、配置GrayLog"></a>4.3.6、配置GrayLog</h4><p>配置日志采集方式</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108204112117.png" alt="image-20210108204112117"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108204504502.png" alt="image-20210108204504502"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108204512235.png" alt="image-20210108204512235"></p><p>配置完后如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108204520185.png" alt="image-20210108204520185"></p><p>GrayLog配置完后，需要到我们的项目中设置日志信息。</p><h3 id="4-4、GrayLog应用"><a href="#4-4、GrayLog应用" class="headerlink" title="4.4、GrayLog应用"></a>4.4、GrayLog应用</h3><p>GrayLog的服务端日志收集器已经准备好，我们还需要在项目中添加GrayLog的客户端，将项目日志发送到GrayLog服务端，保存到ElasticSearch。分布式日志服务都是无侵入的，所以只需要配置即可。</p><h4 id="4-4-1、添加依赖"><a href="#4-4-1、添加依赖" class="headerlink" title="4.4.1、添加依赖"></a>4.4.1、添加依赖</h4><p>这个是第三方提供的GrayLog依赖，并不是GrayLog官网。</p><p>将下方的依赖添加到有需要使用GrayLog的项目；如果都需要那么则都需要加，包括之后的配置。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>biz.paluch.logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logstash-gelf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.13.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-4-2、日志配置文件"><a href="#4-4-2、日志配置文件" class="headerlink" title="4.4.2、日志配置文件"></a>4.4.2、日志配置文件</h4><p>在需要添加日志的每个项目的<code>resource</code>目录下添加<code>logback.xml</code>文件:</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 控制台日志输出器 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 对日志进行格式化 --&gt;</span>        <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread线程名，%-5level：级别 %msg：日志消息，%n是换行符--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- GrayLog日志输出器 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>biz.paluch.logging.gelf.logback.GelfLogbackAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端连接主机 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>udp:192.168.12.135<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端连接端口 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>12201<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- GrayLog服务端版本号 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 当前服务名称(服务id) 【重要】--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facility</span><span class="token punctuation">&gt;</span></span>heima-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facility</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 附加字段 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>additionalFields</span><span class="token punctuation">&gt;</span></span>version=4.1.0,module=heima-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>additionalFields</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 记录异常跟踪栈日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extractStackTrace</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extractStackTrace</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 过滤异常跟踪栈日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filterStackTrace</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filterStackTrace</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 映射分析搜集的日志 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mdcProfiling</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mdcProfiling</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 时间戳格式化 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timestampPattern</span><span class="token punctuation">&gt;</span></span>yyyy-MM-dd HH:mm:ss,SSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timestampPattern</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 最大消息大小 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maximumMessageSize</span><span class="token punctuation">&gt;</span></span>8192<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maximumMessageSize</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 记录日志 additivity: false(只能在当前logger中使用) --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bhd<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 根记录日志 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GELF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">日志级别</span><span class="token punctuation">:</span> <span class="token attr-value">有8个级别的log（除去OFF和ALL，可以说分为6个级别），优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL。</span><span class="token attr-name">级别大小</span><span class="token punctuation">:</span><span class="token attr-name">ALL</span> <span class="token attr-value">&gt; TRACE &gt; DEBUG &gt; INFO &gt; WARN &gt; ERROR &gt; FATAL &gt; OFF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>配置完后；重启项目。</p><h4 id="4-4-3、查看日志"><a href="#4-4-3、查看日志" class="headerlink" title="4.4.3、查看日志"></a>4.4.3、查看日志</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108211647270.png" alt="image-20210108211647270"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108211714564.png" alt="image-20210108211714564"></p><p>编辑面板：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212152072.png" alt="image-20210108212152072"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212239422.png" alt="image-20210108212239422"></p><p>保存查看视图：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212322653.png" alt="image-20210108212322653"></p><p>创建面板：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212336281.png" alt="image-20210108212336281"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212343256.png" alt="image-20210108212343256"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108212350129.png" alt="image-20210108212350129"></p><p>查看详细信息：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108213526566.png" alt="image-20210108213526566"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108213532425.png" alt="image-20210108213532425"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108213540515.png" alt="image-20210108213540515"></p><p>上述这些面板的数据更新也可以通过设置如下进行定时更新：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210108213719936.png" alt="image-20210108213719936"></p><h2 id="5、分布式链路追踪Sleuth"><a href="#5、分布式链路追踪Sleuth" class="headerlink" title="5、分布式链路追踪Sleuth"></a>5、分布式链路追踪Sleuth</h2><h3 id="5-1、分布式链路追踪"><a href="#5-1、分布式链路追踪" class="headerlink" title="5.1、分布式链路追踪"></a>5.1、分布式链路追踪</h3><h4 id="5-1-1、现况"><a href="#5-1-1、现况" class="headerlink" title="5.1.1、现况"></a>5.1.1、现况</h4><p>随着业务的发展，单体架构演变成微服务架构，并且系统规模也变得越来越大，各个服务之间的调用关系也变得越来越复杂。在微服务的应用中，一个由客户端发起的请求到请求结束中间可能会有多个不同的服务调用，然后产生最终的结果。<strong>调用链路容易出错</strong>；客户端发起请求都会形成一个复杂的分布式服务调用链路，在每条链路中任何一个服务出现延迟或者超时或者异常都有可能引起整个请求异常。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/1591414864164-1592205999192.png" alt="1591414864164"></p><h4 id="5-1-2、链路追踪"><a href="#5-1-2、链路追踪" class="headerlink" title="5.1.2、链路追踪"></a>5.1.2、链路追踪</h4><p><strong>微服务架构</strong>是一个分布式架构，它按业务划分服务单元，一个分布式系统往往有很多个服务单元。由于服务单元数量众多，业务的复杂性，如果<strong>出现了错误和异常，很难去定位</strong>。主要体现在，一个请求可能需要调用很多个服务，而内部服务的调用复杂性，决定了问题难以定位。所以微服务架构中，<strong>必须实现分布式链路追踪</strong>，去跟进一个请求到底<strong>有哪些服务参与，参与的顺序又是怎样的，从而达到每个请求的步骤清晰可见，出了问题，很快定位</strong>。</p><p>链路追踪组件有Google的Dapper，Twitter 的Zipkin，Apache的Skywalking，以及阿里的Eagleeye （鹰眼）等，它们都是非常优秀的链路追踪开源组件。而Spring Cloud Sleuth可以很方便的集成Zipkin、Skywalking等这些组件；这些组件也被称为 APM 系统（Application Performance Management）<strong>应用性能管理系统</strong>。</p><blockquote><p>Google开源的 Dapper链路追踪组件，并在2010年发表了论文《Dapper, a Large-Scale Distributed  Systems Tracing Infrastructure》，这篇文章是业内实现链路追踪的标杆和理论基础，具有非常大的参考价值。</p></blockquote><h3 id="5-2、Spring-Cloud-Sleuth"><a href="#5-2、Spring-Cloud-Sleuth" class="headerlink" title="5.2、Spring Cloud Sleuth"></a>5.2、Spring Cloud Sleuth</h3><h4 id="5-2-1、简介"><a href="#5-2-1、简介" class="headerlink" title="5.2.1、简介"></a>5.2.1、简介</h4><p>Spring Cloud Sleuth是Spring Cloud提供的分布式系统服务链路追踪组件。Spring Cloud Sleuth是一个在应用中实现日志跟踪的强有力的工具。它在整个分布式系统中能跟踪一个用户请求的过程(包括数据采集，数据传输，数据存储，数据分析，数据可视化)，捕获这些跟踪数据，就能构建微服务的整个调用链的视图，这是调试和监控微服务的关键工具。</p><table><thead><tr><th>特点</th><th>说明</th></tr></thead><tbody><tr><td>提供链路追踪</td><td>通过sleuth可以很清楚的看出一个请求经过了哪些服务， 可以方便的理清服务间的调用关系</td></tr><tr><td>性能分析</td><td>通过sleuth可以很方便的看出每个采集请求的耗时， 分析出哪些服务调用比较耗时，当服务调用的耗时随着请求量的增大而增大时， 也可以对服务的扩容提供一定的提醒作用</td></tr><tr><td>数据分析优化链路</td><td>对于频繁地调用一个服务，或者并行地调用等， 可以针对业务做一些优化措施</td></tr><tr><td>可视化</td><td>对于程序未捕获的异常，可以在zipkin、skywalking等系统上的界面看到</td></tr></tbody></table><h4 id="5-2-2、专业术语"><a href="#5-2-2、专业术语" class="headerlink" title="5.2.2、专业术语"></a>5.2.2、专业术语</h4><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109164813816.png" alt="image-20210109164813816"></p><ul><li><p><strong>Trace</strong>：它是由一组有相同Trace  ID的Span串联形成一个树状结构。为了实现请求跟踪，当请求到分布式系统的入口端点时，只需要服务跟踪框架为该请求创建一个唯一的跟踪标识（即前文提到的Trace ID），同时在分布式系统内部流转的时候，框架始终保持传递该唯一标识，直到返回请求为止，我们通过它将所有请求过程中的日志关联起来；</p></li><li><p><strong>Span</strong>：它代表了一个基础的工作单元，例如服务调用。为了统计各处理单元的时间延迟，当前请求到达各个服务组件时，也通过一个唯一标识（即前文提到的Span  ID）来标记它的开始、具体过程以及结束。通过span的开始和结束的时间戳，就能统计该span的时间延迟，除此之外，我们还可以获取如事件名称、请求信息等元数据。</p></li><li><p><strong>Annotation</strong>：它用于记录一段时间内的事件。内部使用的最重要的注释是：</p><ul><li><p>cs - Client Sent - 客户端发送一个请求，这个注解描述了这个Span的开始。</p></li><li><p>sr - Server Received - 服务端获得请求并准备开始处理它，其中（sr – cs） 时间戳便可得到网络传输的时间。</p></li><li><p>ss - Server Sent （服务端发送响应）– 该注解表明请求处理的完成(当请求返回客户端)， （ss – sr）时间戳就可以得到服务器请求的时间。</p></li><li><p>cr - Client Received （客户端接收响应）- 表明此时Span的结束，（cr – cs）时间戳便可以得到整个请求所消耗的时间。</p></li></ul></li><li><p><strong>采样率</strong>：对多少请求进行采用统计、分析</p></li></ul><p>如果服务的流量很大，全部采集对传输、存储压力比较大。这个时候可以设置采样率，sleuth 可以通过配置  spring.sleuth.sampler.probability=X.Y（如配置为1.0，则采样率为100%，采集服务的全部追踪数据），若不配置默认采样率是0.1(即10%)。</p><h4 id="5-2-3、应用"><a href="#5-2-3、应用" class="headerlink" title="5.2.3、应用"></a>5.2.3、应用</h4><p>Sleuth可以直接使用；只是这样的话它只能将追踪信息输出到控制台，一般很少直接使用sleuth；但是如果使用的话也是非常简单，只需要有使用的项目中添加如下的依赖到 <code>pom.xml</code> 即可。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-sleuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后启动系统的话；可以在控制台看到类似如下的信息：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109165708758.png" alt="image-20210109165708758"></p><blockquote><p>如果在控制台中没有输出类似上述的追踪链路信息；可能是你的项目中的日志记录信息没有设置上述的信息输出。解决方法：将对应日志配置文件重命名或者直接删除即可。如: logback.xml 可以先改名为 logback.xml.bak之后查看上述的输出效果。</p></blockquote><h3 id="5-3、Zipkin"><a href="#5-3、Zipkin" class="headerlink" title="5.3、Zipkin"></a>5.3、Zipkin</h3><h4 id="5-3-1、简介"><a href="#5-3-1、简介" class="headerlink" title="5.3.1、简介"></a>5.3.1、简介</h4><p>Zipkin是Twitter的一个开源项目，是一个分布式跟踪系统。它有助于收集解决服务体系结构中的延迟问题所需的时序数据。功能包括该数据的收集和查找。 </p><p>Zipkin UI还提供了一个依赖关系图，该关系图显示了每个应用程序中跟踪了多少个请求。这对于识别聚合行为（包括错误路径或对不赞成使用的服务的调用）很有帮助。 </p><p>与Sleuth集成后，可以通过Zipkin的界面更加优化的查看链路信息、数据分析等。</p><p>官网地址: <a href="https://zipkin.io/">https://zipkin.io/</a> </p><p>Zipkin分为 Server服务器端、Client客户端：</p><ul><li><p>Server服务器端：包含四个组件，分别是collector、storage、search、web UI</p><ul><li><p><strong>collector 信息收集器</strong>，作为一个守护进程，它会时刻等待客户端传递过来的追踪数据，对这些数据进行验证、存储以及创建查询需要的索引。</p></li><li><p><strong>storage 存储组件</strong>，zipkin默认直接将数据存在内存中，此外支持使用Cassandra、ElasticSearch 和 Mysql。</p></li><li><p><strong>search 查询搜索</strong>，它提供了简单的RESTful API来供外部调用查询。</p></li><li><p><strong>web UI</strong> 是zipkin的服务端展示平台，主要调用search提供的接口，用图表将链路信息清晰地展示给开发人员。</p></li></ul></li><li><p> Client客户端：主要负责根据应用的调用情况生成追踪信息，并且将这些追踪信息发送至zipkin由收集器接收。<strong>其实就是我们的项目微服务</strong>添加了zipkin的客户端依赖包。</p></li></ul><p><strong>Zipkin工作流程图</strong>：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109171025290.png" alt="image-20210109171025290"></p><h4 id="5-3-2、安装"><a href="#5-3-2、安装" class="headerlink" title="5.3.2、安装"></a>5.3.2、安装</h4><p>zipkin可以下载<a href="https://github.com/openzipkin/zipkin">独立</a>的服务器端直接 <code>java -jar</code>运行，也可以以docker容器启动；以下以docker安装方式说明：</p><ul><li><p>docker安装zipkin-server</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 拉到镜像 </span>docker pull openzipkin/zipkin<span class="token comment"># 创建容器</span>docker run -d -p <span class="token number">9411</span>:9411 --name<span class="token operator">=</span>zipkin openzipkin/zipkin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>访问: <a href="http://192.168.12.135:9411/">http://192.168.12.135:9411</a></p></li></ul><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109172153368.png" alt="image-20210109172153368"></p><h4 id="5-3-3、应用"><a href="#5-3-3、应用" class="headerlink" title="5.3.3、应用"></a>5.3.3、应用</h4><p>在所有微服务工程中可以配置如下：</p><p>1）添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2）添加配置信息</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>    <span class="token key atrule">base-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//192.168.12.135<span class="token punctuation">:</span>9411/  <span class="token key atrule">sleuth</span><span class="token punctuation">:</span>    <span class="token key atrule">sampler</span><span class="token punctuation">:</span>      <span class="token key atrule">probability</span><span class="token punctuation">:</span> <span class="token number">1.0</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>系统不多，请求也少；所以设置采样率probability为 1.0；默认为 0.1</p></blockquote><p>3）重启服务器，访问服务 <a href="http://localhost:10086/user/1">http://localhost:10086/user/1</a> </p><p>4）访问Zipkin <a href="http://192.168.12.135:9411/">http://192.168.12.135:9411</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109173939878.png" alt="image-20210109173939878"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109173948761.png" alt="image-20210109173948761"></p><h3 id="5-4、Skywalking"><a href="#5-4、Skywalking" class="headerlink" title="5.4、Skywalking"></a>5.4、Skywalking</h3><h4 id="5-4-1、简介"><a href="#5-4-1、简介" class="headerlink" title="5.4.1、简介"></a>5.4.1、简介</h4><p>Skywalking与Zipkin同样是属于一款分布式链路追踪系统。Skywalking是由国内开源并提交到Apache孵化器的产品，它同时吸收了Zipkin/Pinpoint/CAT的设计思路，支持非侵入式埋点。是一款基于分布式跟踪的应用程序性能监控系统。被用于追踪、监控和诊断分布式系统，特别是使用微服务架构，云原生或容器技术。官网地址： <a href="http://skywalking.apache.org/">http://skywalking.apache.org</a></p><p><strong>提供以下主要功能</strong>：</p><ul><li>分布式追踪和上下文传输</li><li>应用、实例、服务性能指标分析</li><li>应用拓扑分析</li><li>应用和服务依赖分析</li><li>慢服务检测</li><li>性能优化</li></ul><p><strong>Skywalking与Zipkin区别</strong>：</p><ul><li><strong>颗粒度</strong>：Skywalking方法级（展示的更详细），方法中所有的调用都展示出来了，如数据库调用、redis调用，第三方网络调用，而Zipkin只能展示接口级</li><li><strong>UI界面</strong>：Skywalking完胜，国产开源，更适合国人眼球</li><li><strong>代码侵入性</strong>：Skywalking无代码侵入，使用字节码增强技术，在启动服务时使用 javaagent 指向skywalking服务即可收集调用链span信息</li><li><strong>Zipkin</strong>：简单、轻量级</li></ul><h4 id="5-4-2、安装"><a href="#5-4-2、安装" class="headerlink" title="5.4.2、安装"></a>5.4.2、安装</h4><p><strong>1）上传与解压</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token comment"># 使用工具将 资料\apache-skywalking-apm-6.5.0.tar.gz 文件上传到 /usr/local</span><span class="token comment"># 解压</span><span class="token function">tar</span> -xzvf apache-skywalking-apm-6.5.0.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2）配置存储组件为ElasticSearch</strong></p><p>修改存储组件为 ElasticSearch ；进入config目录，修改 application.yml，主要把存储方案从h2改为ElasticSearch</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local/apache-skywalking-apm-bin/config编辑 application.yml；具体查看如下图，修改前后对比：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改前：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109180313245.png" alt="image-20210109180313245"></p><p>修改后：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109180520316.png" alt="image-20210109180520316"></p><p><strong>3）启动</strong></p><p>启动前请检查 <code>ElasticSearch</code> 是启动的。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/usr/local/apache-skywalking-apm-bin/bin/startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问：<a href="http://192.168.12.135:8080/">http://192.168.12.135:8080</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109180844830.png" alt="image-20210109180844830"></p><h4 id="5-4-3、应用"><a href="#5-4-3、应用" class="headerlink" title="5.4.3、应用"></a>5.4.3、应用</h4><p><strong>1）解压并获取探针包</strong></p><p>使用一般的解压工具解压 <code>资料\apache-skywalking-apm-6.5.0.tar.gz</code> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109181120747.png" alt="image-20210109181120747"></p><p><strong>2）配置项目启动项</strong></p><p>Skywalking是无侵入性的，在开发阶段，不用改代码，只需要在部署启动时加入一些参数即可。在IDEA中的项目启动项中设置 VM 参数如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-javaagent:F:/tmp/workspaces/apache-skywalking-apm-bin/agent/skywalking-agent.jar-Dskywalking.agent.service_name<span class="token operator">=</span>heima-eureka-Dskywalking.collector.backend_service<span class="token operator">=</span><span class="token number">192.168</span>.12.135:11800<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><p><code>-javaagent:F:/tmp/workspaces/apache-skywalking-apm-bin/agent/skywalking-agent.jar</code>：配置的是skywalking-agent.jar这个包的位置，要修改成你自己存放的目录</p></li><li><p><code>-Dskywalking.agent.service_name=heima-eureka</code>：是当前项目的名称，需要改成当前微服务的名称</p></li><li><p><code>-Dskywalking.collector.backend_service=192.168.12.135:11800</code>：是skywalking的OPA服务地址，采用的是GRPC通信，因此端口是11800，不是8080</p></li></ul></blockquote><p>具体配置步骤如下：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109181703926.png" alt="image-20210109181703926"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109181839134.png" alt="image-20210109181839134"></p><p>其它项目如上图类似配置即可。配置完后启动项目。</p><p><strong>3）测试</strong></p><p>访问服务 <a href="http://localhost:10086/user/1">http://localhost:10086/user/1</a> </p><p>访问Skywalking <a href="http://192.168.12.135:8080/">http://192.168.12.135:8080/</a></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109182444962.png" alt="image-20210109182444962"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-07-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%A9%E5%B1%95-1.assets/image-20210109182519546.png" alt="image-20210109182519546"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0、课程目标&quot;&gt;&lt;a href=&quot;#0、课程目标&quot; class=&quot;headerlink&quot; title=&quot;0、课程目标&quot;&gt;&lt;/a&gt;0、课程目标&lt;/h2&gt;&lt;p&gt;目标1：能够说出Spring Cloud微服务组件&lt;/p&gt;
&lt;p&gt;目标2：能够使用网关Zuul&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring Cloud" scheme="https://chenliren9527.github.io/tags/Spring-Cloud/"/>
    
    <category term="微服务" scheme="https://chenliren9527.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="Zuul" scheme="https://chenliren9527.github.io/tags/Zuul/"/>
    
    <category term="限流" scheme="https://chenliren9527.github.io/tags/%E9%99%90%E6%B5%81/"/>
    
    <category term="Nginx限流" scheme="https://chenliren9527.github.io/tags/Nginx%E9%99%90%E6%B5%81/"/>
    
    <category term="Gateway限流" scheme="https://chenliren9527.github.io/tags/Gateway%E9%99%90%E6%B5%81/"/>
    
    <category term="分布式日志系统" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GrayLog" scheme="https://chenliren9527.github.io/tags/GrayLog/"/>
    
    <category term="分布式链路追踪" scheme="https://chenliren9527.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
    
    <category term="Zipkin" scheme="https://chenliren9527.github.io/tags/Zipkin/"/>
    
    <category term="skywalking" scheme="https://chenliren9527.github.io/tags/skywalking/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="https://chenliren9527.github.io/2021/01/31/mongodb/"/>
    <id>https://chenliren9527.github.io/2021/01/31/mongodb/</id>
    <published>2021-01-31T10:18:14.000Z</published>
    <updated>2022-05-17T05:35:19.553Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-MongonDB"><a href="#1-MongonDB" class="headerlink" title="1.  MongonDB"></a>1.  MongonDB</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1.  概述"></a>1.1.  概述</h2><p>MongoDB 是一个跨平台的，面向文档的数据库，是当前 NoSQL 数据库产品中最热门的一种。它介于关系数据库和非关系数据库之间，是非关系数据库当中功能最丰富，最像关系数据库的产品。它支持的数据结构非常松散，是类似JSON 的 BSON 格式，因此可以存储比较复杂的数据类型。</p><p>MongoDB 的官方网站地址是：<a href="http://www.mongodb.org/">http://www.mongodb.org/</a></p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image001.png" alt="img"> </p><h2 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2.  特点"></a>1.2.  特点</h2><p>MongoDB 最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。它是一个面向集合的,模式自由的文档型数据库。</p><p>具体特点总结如下：</p><p>（1）面向集合存储，易于存储对象类型的数据</p><p>（2）模式自由</p><p>（3）支持动态查询</p><p>（4）支持完全索引，包含内部对象</p><p>（5）支持复制和故障恢复</p><p>（6）使用高效的二进制数据存储，包括大型对象（如视频等）</p><p>（7）自动处理碎片，以支持云计算层次的扩展性</p><p>（8）支持 Python，PHP，Ruby，Java，C，C#，Javascript，Perl 及 C++语言的驱动程序，社区中也提供了对 Erlang 及.NET 等平台的驱动程序</p><p>（9） 文件存储格式为 BSON（一种 JSON 的扩展）</p><h2 id="1-3-体系结构"><a href="#1-3-体系结构" class="headerlink" title="1.3.  体系结构"></a>1.3.  体系结构</h2><p>MongoDB 的逻辑结构是一种层次结构。主要由：</p><p>文档(document)、集合(collection)、数据库(database)这三部分组成的。逻辑结构是面向用户</p><p>的，用户使用 MongoDB 开发应用程序使用的就是逻辑结构。</p><p>（1）MongoDB 的文档（document），相当于关系数据库中的一行记录。</p><p>（2）多个文档组成一个集合（collection），相当于关系数据库的表。</p><p>（3）多个集合（collection），逻辑上组织在一起，就是数据库（database）。</p><p>（4）一个 MongoDB 实例支持多个数据库（database）。</p><p>文档(document)、集合(collection)、数据库(database)的层次结构如下图:</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image003.jpg" alt="img"> </p><p>下表是MongoDB与MySQL数据库逻辑结构概念的对比</p><table><thead><tr><th>MongoDb</th><th>关系型数据库Mysql</th></tr></thead><tbody><tr><td>数据库(databases)</td><td>数据库(databases)</td></tr><tr><td>集合(collections)</td><td>表(table)</td></tr><tr><td>文档(document)</td><td>行(row)</td></tr></tbody></table><h1 id="2-安装与启动"><a href="#2-安装与启动" class="headerlink" title="2.  安装与启动"></a>2.  安装与启动</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1.  安装"></a>2.1.  安装</h2><p>详见《MongoDB windows版安装说明.docx》</p><p>为了方便操作也可以安装MongoDB的一个图形界面管理工具；解压“资料\robo3t-1.2.1-windows-x86_64-3e50a65.zip”然后双击运行“robo3t.exe”即可。</p><h2 id="2-2-启动"><a href="#2-2-启动" class="headerlink" title="2.2.  启动"></a>2.2.  启动</h2><h3 id="2-2-1-创建存放数据目录"><a href="#2-2-1-创建存放数据目录" class="headerlink" title="2.2.1.  创建存放数据目录"></a>2.2.1.  创建存放数据目录</h3><p>随便在系统中创建一个存放MongoDB的数据的目录；如：</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image005.jpg" alt="img"></p><h3 id="2-2-2-编写启动脚本"><a href="#2-2-2-编写启动脚本" class="headerlink" title="2.2.2.  编写启动脚本"></a>2.2.2.  编写启动脚本</h3><p>找到安装MongoDB的目录的bin目录下；</p><p>创建如下的启动脚本文件startMongoDB.bat；文件内容如下：</p>  <pre class="line-numbers language-none"><code class="language-none">.\mongod.exe --dbpath=D:\database\mongodb\data\db3_4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>–dbpath是刚刚创建的数据存放目录；</p><p>之后启动MongoDB就直接双击startMongoDB.bat即可。</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image007.jpg" alt="img"></p><p>默认连接的端口号为：27017</p><h2 id="2-3-连接"><a href="#2-3-连接" class="headerlink" title="2.3.  连接"></a>2.3.  连接</h2><p>在安装目录的bin目录路径中双击“mongo.exe”即可</p><h1 id="3-基本操作"><a href="#3-基本操作" class="headerlink" title="3.  基本操作"></a>3.  基本操作</h1><h2 id="3-1-选择或创建数据库"><a href="#3-1-选择或创建数据库" class="headerlink" title="3.1.  选择或创建数据库"></a>3.1.  选择或创建数据库</h2><p>使用use 数据库名称 即可选择数据库，如果该数据库不存在会自动创建</p><pre class="line-numbers language-none"><code class="language-none">use itcastdb  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  <img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image008.png" alt="img">  </p><h2 id="3-2-新增"><a href="#3-2-新增" class="headerlink" title="3.2.  新增"></a>3.2.  新增</h2><p>文档相当于关系数据库中的记录</p><p>首先定义一个文档变量，格式为变量名称={}; 例如：</p> <pre class="line-numbers language-none"><code class="language-none">obj = {"name":"传智播客","gender":"男","age":12,"address":"吉山"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image010.jpg" alt="img">  </p><p>接下来就是将这个变量存入MongoDB </p><p>格式为：</p><p>  <code>db.集合名称.save(变量);  </code></p><p>这里的集合就相当于关系数据库中的表。例如：</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image012.jpg" alt="img"></p><p>这样就在user集合中存入文档。如果这个user集合不存在，就会自动创建。</p><p>当然，也可以不用定义变量，直接把变量值放入save方法中也是可以的。</p>  <pre class="line-numbers language-none"><code class="language-none">db.user.save({"name":"黑马程序员","gender":"女","age":8,"address":"广州"});<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> <img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image014.jpg" alt="img">  </p><p>为了方便后期测试，预加数据：</p><pre class="line-numbers language-none"><code class="language-none">db.user.save({"name":"李雷","gender":"男","age":15,"address":"北京"});db.user.save({"name":"韩梅梅","gender":"女","age":14,"address":"上海"});db.user.save({"name":"露西","gender":"女","age":13,"address":"纽约"});db.user.save({"name":"莉莉","gender":"女","age":13,"address":"纽约"});db.user.save({"name":"Jim Green","gender":"男","age":12,"address":"华盛顿"});db.user.save({"name":"王大叔","gender":"男","age":40,"address":"深圳"});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-3-查询"><a href="#3-3-查询" class="headerlink" title="3.3.  查询"></a>3.3.  查询</h2><h3 id="3-3-1-查询全部文档"><a href="#3-3-1-查询全部文档" class="headerlink" title="3.3.1.  查询全部文档"></a>3.3.1.  查询全部文档</h3><p>语法：<code>db.集合名称.find();</code></p><pre class="line-numbers language-none"><code class="language-none">【说明】查询user集合中的所有文档【示例】db.user.find();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image016.jpg" alt="img">  </p><p>发现每条文档会有一个叫_id的字段，这个相当于原来关系数据库中表的主键，当在插入文档记录时没有指定该字段，MongDB会自动创建，其类型是ObjectID类型。</p><p>在插入文档记录时指定该字段也是可以的，其类型可以使ObjectID类型，也可以是MongoDB支持的任意类型。 例如：</p> <pre class="line-numbers language-none"><code class="language-none">db.user.save({"_id":123,"name":"JBL","gender":"男","age":12,"address":"吉山"});<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image018.jpg" alt="img">  </p><p>重新查询全部：</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image020.jpg" alt="img"></p><h3 id="3-3-2-条件查询"><a href="#3-3-2-条件查询" class="headerlink" title="3.3.2.  条件查询"></a>3.3.2.  条件查询</h3><p>语法：<code>db.集合名称.find({“属性名”:”条件值”});</code></p>  <pre class="line-numbers language-none"><code class="language-none">【说明】查询集合中某个属性的值为 *** 的所有文档【示例】db.user.find({"address":"吉山"});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image022.jpg" alt="img">  </p><h3 id="3-3-3-查询第一条"><a href="#3-3-3-查询第一条" class="headerlink" title="3.3.3.  查询第一条"></a>3.3.3.  查询第一条</h3><p>语法：<code>db.集合名称.findOne();</code></p>  <pre class="line-numbers language-none"><code class="language-none">【说明】查询集合中的第一个文档【示例】db.user.findOne();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image024.jpg" alt="img">  </p><h2 id="3-4-更新"><a href="#3-4-更新" class="headerlink" title="3.4.  更新"></a>3.4.  更新</h2><p>语法：<code>db.集合名称.update({更新条件键值对},{要更新的键值对});</code></p>  <pre class="line-numbers language-none"><code class="language-none">【说明】根据更新条件键值对，更新第二个参数对应的属性【示例】db.user.update({"name":"传智播客"},{"address":"广州吉山"});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image026.jpg" alt="img">     </p><pre class="line-numbers language-none"><code class="language-none">更新后文档只剩下_id 和address两个字段了。如果要保留其它字段值的话；需要使用MongoDB提供的修改器$set 来实现，请看下列示例：db.user.update({"name":"黑马程序员"},{$set:{"address":"广州吉山"}});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image028.jpg" alt="img">  </p><h2 id="3-5-删除"><a href="#3-5-删除" class="headerlink" title="3.5.  删除"></a>3.5.  删除</h2><h3 id="3-5-1-删除文档"><a href="#3-5-1-删除文档" class="headerlink" title="3.5.1.  删除文档"></a>3.5.1.  删除文档</h3><p>语法：db.集合名称.remove({删除条件键值对});</p> <pre class="line-numbers language-none"><code class="language-none">【说明】删除集合中所有符合条件的文档【示例】db.user.remove({"address":"广州吉山"});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image030.jpg" alt="img">  </p><h3 id="3-5-2-删除集合"><a href="#3-5-2-删除集合" class="headerlink" title="3.5.2.  删除集合"></a>3.5.2.  删除集合</h3><p>语法：<code>db.集合名称.drop()</code></p><pre class="line-numbers language-none"><code class="language-none">【说明】用于从数据库中删除集合；删除的时候可以使用show collections查看当前数据库下的所有集合【示例】db.test.save({"name":"aa"});db.test.drop();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image032.jpg" alt="img">  </p><h3 id="3-5-3-删除数据库"><a href="#3-5-3-删除数据库" class="headerlink" title="3.5.3.  删除数据库"></a>3.5.3.  删除数据库</h3><p>语法：<code>db.dropDatabase()</code></p><pre class="line-numbers language-none"><code class="language-none">【说明】删除当前数据库，默认为 test，你可以使用 db 命令查看当前数据库名。【示例】use itcast_test;db.dropDatabase();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>  <img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image034.jpg" alt="img">     </p><h1 id="4-高级查询"><a href="#4-高级查询" class="headerlink" title="4.  高级查询"></a>4.  高级查询</h1><h2 id="4-1-模糊查询"><a href="#4-1-模糊查询" class="headerlink" title="4.1.  模糊查询"></a>4.1.  模糊查询</h2><p>MongoDB的模糊查询是通过正则表达式的方式实现的。格式为：</p><p> /模糊查询字符串/</p><pre class="line-numbers language-none"><code class="language-none">【示例1】查询名字中带有“雷”的文档db.user.find({"name":/雷/});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image036.jpg" alt="img">     </p><pre class="line-numbers language-none"><code class="language-none">【示例2】查询名字以“李”开头的文档db.user.find({"name":/^李/});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image038.jpg" alt="img">  </p><h2 id="4-2-null值处理"><a href="#4-2-null值处理" class="headerlink" title="4.2.  null值处理"></a>4.2.  null值处理</h2><p>找出集合中某属性值为空或者不存在该属性的文档；与之前的条件查询是一样的，条件值写为null就可以了。</p><pre class="line-numbers language-none"><code class="language-none">【示例】先修改一个address空的记录，然后查询address为空的记录/*先更新address为null*/db.user.update({"_id":123},{$set:{"address":null}});/*查询address为null或者不存在该属性的文档*/db.user.find({"address":null});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image040.jpg" alt="img">  </p><h2 id="4-3-大于小于"><a href="#4-3-大于小于" class="headerlink" title="4.3.  大于小于"></a>4.3.  大于小于</h2><p>&lt;, &lt;=, &gt;, &gt;= 这个操作符也很常用，格式如下</p><pre class="line-numbers language-none"><code class="language-none">db.collection.find({ "field" : { $gt: value } } ); // 大于: field &gt; valuedb.collection.find({ "field" : { $lt: value } } ); // 小于: field &lt; valuedb.collection.find({ "field" : { $gte: value } } ); // 大于等于: field &gt;= valuedb.collection.find({ "field" : { $lte: value } } ); // 小于等于: field &lt;= value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">【示例】查询年龄大于等于14岁的用户/*查询age大于等于14的用户*/db.user.find({"age":{$gte:14}});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image042.jpg" alt="img">  </p><h2 id="4-4-不等于"><a href="#4-4-不等于" class="headerlink" title="4.4.  不等于"></a>4.4.  不等于</h2><p>不等于使用$ne操作符。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*查询性别不等于男的用户*/</span>  db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>{<span class="token string">"gender"</span>:{$ne:<span class="token string">"男"</span>}}<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image044.jpg" alt="img">  </p><h2 id="4-5-判断属性是否存在"><a href="#4-5-判断属性是否存在" class="headerlink" title="4.5.  判断属性是否存在"></a>4.5.  判断属性是否存在</h2><p>判断属性是否存在使用$exists操作符。</p><pre class="line-numbers language-none"><code class="language-none">/*查询address属性存在的文档*/db.user.find({"address":{$exists:true}});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image046.jpg" alt="img">  </p><h2 id="4-6-包含与不包含"><a href="#4-6-包含与不包含" class="headerlink" title="4.6.  包含与不包含"></a>4.6.  包含与不包含</h2><p>包含使用$in操作符；不包含使用$nin操作符。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*查询address在北京、上海的用户*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>{<span class="token string">"address"</span>:{$<span class="token operator">in</span>:<span class="token punctuation">[</span><span class="token string">"北京"</span><span class="token punctuation">,</span><span class="token string">"上海"</span><span class="token punctuation">]</span>}}<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*查询address不在北京、上海的用户*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>{<span class="token string">"address"</span>:{$nin:<span class="token punctuation">[</span><span class="token string">"北京"</span><span class="token punctuation">,</span><span class="token string">"上海"</span><span class="token punctuation">]</span>}}<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image048.jpg" alt="img">  </p><h2 id="4-7-统计记录数"><a href="#4-7-统计记录数" class="headerlink" title="4.7.  统计记录数"></a>4.7.  统计记录数</h2><p>统计记录条件使用count()方法。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*统计集合中的所有文档*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*统计集合中所有address在纽约的用户*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>{<span class="token string">"address"</span>:{$<span class="token operator">in</span>:<span class="token punctuation">[</span><span class="token string">"纽约"</span><span class="token punctuation">]</span>}}<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image050.jpg" alt="img">  </p><h2 id="4-8-条件连接-并且"><a href="#4-8-条件连接-并且" class="headerlink" title="4.8.  条件连接-并且"></a>4.8.  条件连接-并且</h2><p>如果需要查询同时满足两个以上条件，需要使用$and操作符将条件进行关联。（相当于SQL的and）</p><p>格式为：<code>$and:[ { },{ },{  } ]</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*查询age大于等于14并且 年龄小于等于20的用户*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>{$<span class="token operator">and</span>:<span class="token punctuation">[</span>{<span class="token string">"age"</span>:{$gte:<span class="token number">14</span>}}<span class="token punctuation">,</span>{<span class="token string">"age"</span>:{$lte:<span class="token number">20</span>}}<span class="token punctuation">]</span>}<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> <img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image052.jpg" alt="img">  </p><h2 id="4-9-条件连接-或者"><a href="#4-9-条件连接-或者" class="headerlink" title="4.9.  条件连接-或者"></a>4.9.  条件连接-或者</h2><p>如果两个以上条件之间是或者的关系，我们使用$or操作符进行关联，与前面$and的使用方式相同</p><p>格式为：<code>$or:[ { },{ },{  } ]</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*查询age小于等于15 或者 gender为女的用户*/</span>db<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>{$<span class="token operator">or</span>:<span class="token punctuation">[</span>{<span class="token string">"age"</span>:{$lte:<span class="token number">15</span>}}<span class="token punctuation">,</span>{<span class="token string">"gender"</span>:<span class="token string">"女"</span>}<span class="token punctuation">]</span>}<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image054.jpg" alt="img">  </p><h1 id="5-java连接MongoDB"><a href="#5-java连接MongoDB" class="headerlink" title="5.  java连接MongoDB"></a>5.  java连接MongoDB</h1><h2 id="5-1-添加依赖"><a href="#5-1-添加依赖" class="headerlink" title="5.1.  添加依赖"></a>5.1.  添加依赖</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mongodb<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mongo<span class="token operator">-</span>java<span class="token operator">-</span>driver<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.6</span><span class="token number">.3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-2-查询"><a href="#5-2-查询" class="headerlink" title="5.2.  查询"></a>5.2.  查询</h2><h3 id="5-2-1-查询全部"><a href="#5-2-1-查询全部" class="headerlink" title="5.2.1.  查询全部"></a>5.2.1.  查询全部</h3> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//创建连接对象</span>    <span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取要操作的数据库</span>    <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">"itcastdb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取集合</span>    <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//查询集合所有文档</span>    <span class="token class-name">FindIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documents <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>documents <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//遍历输出集合中的内容</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Document</span> document <span class="token operator">:</span> documents<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"_id = "</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"name = "</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"gender = "</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"gender"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"age = "</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"address = "</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MongoDB的数字类型默认使用64位浮点型数值。{“x”：3.14}或{“x”：3}。对于整型值，可以在保存的时候使用NumberInt（4字节符号整数），{“x”:NumberInt(“3”)} 或NumberLong（8字节符号整数）{“x”:NumberLong(“3”)}</p><h3 id="5-2-2-条件查询"><a href="#5-2-2-条件查询" class="headerlink" title="5.2.2.  条件查询"></a>5.2.2.  条件查询</h3><p>MongoDB使用BasicDBObject类型封装查询条件，构造方法的参数为key 和value。</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image056.jpg" alt="img"></p><h3 id="5-2-3-模糊查询"><a href="#5-2-3-模糊查询" class="headerlink" title="5.2.3.  模糊查询"></a>5.2.3.  模糊查询</h3><p>构建模糊查询条件是通过正则表达式的方式来实现的</p><p>（1）完全匹配Pattern pattern = Pattern.compile(“^name$”);</p><p>（2）右匹配Pattern pattern = Pattern.compile(“^.*name$”);</p><p>（3）左匹配Pattern pattern = Pattern.compile(“^name.*$”);</p><p>（4）模糊匹配Pattern pattern = Pattern.compile(“^.<em>name.</em>$”);</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image058.jpg" alt="img"></p><h3 id="5-2-4-大于小于查询"><a href="#5-2-4-大于小于查询" class="headerlink" title="5.2.4.  大于小于查询"></a>5.2.4.  大于小于查询</h3><p>在MongoDB提示符下条件json字符串为{ age: { $gte :14} } ，对应的java代码也是BasicDBObject 的嵌套。</p><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image060.jpg" alt="img"></p><h3 id="5-2-5-条件连接-并且"><a href="#5-2-5-条件连接-并且" class="headerlink" title="5.2.5.  条件连接-并且"></a>5.2.5.  条件连接-并且</h3><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image062.jpg" alt="img"></p><h3 id="5-2-6-条件连接-或者"><a href="#5-2-6-条件连接-或者" class="headerlink" title="5.2.6.  条件连接-或者"></a>5.2.6.  条件连接-或者</h3><p><img src="MongoDB%E8%AE%B2%E4%B9%89.assets/clip_image064.jpg" alt="img"></p><h2 id="5-3-新增"><a href="#5-3-新增" class="headerlink" title="5.3.  新增"></a>5.3.  新增</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//创建连接对象</span>    <span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取要操作的数据库</span>    <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">"itcastdb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取集合</span>    <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"芒果"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"gender"</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"广州"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//或者直接对document对象设置值</span>    collection<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-4-更新"><a href="#5-4-更新" class="headerlink" title="5.4.  更新"></a>5.4.  更新</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//创建连接对象</span>    <span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取要操作的数据库</span>    <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">"itcastdb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取集合</span>    <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//更新条件</span>    <span class="token class-name">BasicDBObject</span> condition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"芒果"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//更新内容</span>    <span class="token class-name">BasicDBObject</span> updateObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">"$set"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"北京"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    collection<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> updateObject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-5-删除"><a href="#5-5-删除" class="headerlink" title="5.5.  删除"></a>5.5.  删除</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//创建连接对象</span>    <span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取要操作的数据库</span>    <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">"itcastdb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取集合</span>    <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//删除条件</span>    <span class="token class-name">BasicDBObject</span> condition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"芒果"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    collection<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​                                               </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-MongonDB&quot;&gt;&lt;a href=&quot;#1-MongonDB&quot; class=&quot;headerlink&quot; title=&quot;1.  MongonDB&quot;&gt;&lt;/a&gt;1.  MongonDB&lt;/h1&gt;&lt;h2 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; cla</summary>
      
    
    
    
    <category term="数据库" scheme="https://chenliren9527.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据库" scheme="https://chenliren9527.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MongonDB" scheme="https://chenliren9527.github.io/tags/MongonDB/"/>
    
  </entry>
  
  <entry>
    <title>常见面试题总结(06)-Mybatis框架相关的常见面试题</title>
    <link href="https://chenliren9527.github.io/2021/01/29/chang-jian-mian-shi-ti-zong-jie-06-mybatis-kuang-jia-xiang-guan-de-chang-jian-mian-shi-ti/"/>
    <id>https://chenliren9527.github.io/2021/01/29/chang-jian-mian-shi-ti-zong-jie-06-mybatis-kuang-jia-xiang-guan-de-chang-jian-mian-shi-ti/</id>
    <published>2021-01-29T15:29:13.000Z</published>
    <updated>2022-05-17T05:35:21.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题1：-谈谈你对MyBatis框架的理解"><a href="#问题1：-谈谈你对MyBatis框架的理解" class="headerlink" title="问题1： 谈谈你对MyBatis框架的理解?"></a><strong>问题1</strong>： 谈谈你对MyBatis框架的理解?</h2><ol><li>MyBatis是一个持久层框架，它主要是对jdbc操作数据库的封装。<br>目的: 让持久层开发变得更加方便与简单。</li><li>MyBatis框架有两种配置文件: 核心配置文件、sql语句映射文件</li><li>MyBatis框架支持两种方式访问数据库: 传统API方式、mapper接口访问方式(面向接口编程)</li><li>MyBatis框架为了查询性能好，提供了一级缓存与二级缓存</li><li>MyBatis框架开发持久层的要点就是: 定义sql语句、在mapper接口定义对应的方法</li></ol><h2 id="问题2：-MyBatis框架执行流程能和我说一下吗"><a href="#问题2：-MyBatis框架执行流程能和我说一下吗" class="headerlink" title="问题2： MyBatis框架执行流程能和我说一下吗?"></a><strong>问题2</strong>： MyBatis框架执行流程能和我说一下吗?</h2><ol><li>加载mybatis配置文件</li><li>通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂；</li><li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行；</li><li>利用接口Mapper或者sqlSession中原生方法操作数据库；</li><li>在解析配置过程中会创建MappedStatement对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个MappedStatement对象；</li><li>MappedStatement对sql执行输入参数进行定义，Executor通过 MappedStatement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数；</li><li>MappedStatement对sql执行输出结果进行定义，Executor通过 MappedStatement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。</li></ol><h2 id="问题3：java程序可以通过jdbc操作数据库-为什么还需要用MyBatis框架呢"><a href="#问题3：java程序可以通过jdbc操作数据库-为什么还需要用MyBatis框架呢" class="headerlink" title="问题3：java程序可以通过jdbc操作数据库,为什么还需要用MyBatis框架呢?"></a><strong>问题3</strong>：java程序可以通过jdbc操作数据库,为什么还需要用MyBatis框架呢?</h2><p><strong>题目背景: 考察对MyBatis框架的认识</strong></p><p><strong>答题思路:</strong><br>jdbc开发存在的问题:</p><ol><li>sql语句直接在java代码中写死了，是硬编码，不方便维护，不灵活</li><li>jdbc程序操作数据库，对结果集封装处理很麻烦，有很多重复代码</li><li>jdbc程序每次访问操作数据库，都需要创建一个Connection连接对象，<pre><code>    操作完成需要释放Connection对象。造成系统资源浪费</code></pre></li></ol><p>MyBatis框架的优点:</p><ol><li>MyBatis框架通过xml配置文件的方式，配置sql语句。<br>让sql语句与java代码分离，结构清晰，方便维护</li><li>MyBatis框架提供了自动将sql语句执行的结果，映射封装到java对象上，减少了重复代码的编写</li><li>MyBatis框架提供了连接池功能，可以复用Connection对象，支持更好的利用系统资源<br>开发方便，重用性高</li></ol><h2 id="问题4：-描述MyBatis框架支持的开发方式"><a href="#问题4：-描述MyBatis框架支持的开发方式" class="headerlink" title="问题4： 描述MyBatis框架支持的开发方式?"></a><strong>问题4</strong>： 描述MyBatis框架支持的开发方式?</h2><p><strong>题目背景: 考察对mybatis框架使用是否熟悉</strong></p><p><strong>答题思路:</strong><br>    MyBatis框架支持两种开发的方式:<br>    第一种: 传统提供的API方式，即通过SqlSession.insert|update|delete|select方式<br>    第二种: mapper接口代理开发方法，即开发的时候编写一个接口，和对应的接口映射文件，在运行<br>           时，MyBatis框架通过动态代理技术，创建接口的代理对象，完成数据库操作。</p><h2 id="问题5-MyBatis框架的mapper接口开发，是否支持方法的重载"><a href="#问题5-MyBatis框架的mapper接口开发，是否支持方法的重载" class="headerlink" title="问题5: MyBatis框架的mapper接口开发，是否支持方法的重载?"></a><strong>问题5</strong>: MyBatis框架的mapper接口开发，是否支持方法的重载?</h2><p><strong>题目背景: 考察对mybatis框架是否有深入的一些理解</strong></p><p>**答题思路: **</p><ol><li><p>mybatis框架的mapper接口开发原则：</p><p>1.1 mapper接口映射文件中的【namespace】属性值，必须是mapper接口的全限定名称<br>【包名+类名】<br>1.2 mapper接口映射文件中的【id】属性值，与mapper接口中的【方法名称】一致<br>1.3 mapepr接口映射文件中的【resultType】属性值，与mapper接口中【方法返回值】一致</p></li><li><p>那么就是说，在mybatis框架中，找到目标方法的唯一标识是：<br>namesapce+id（这里的id就是接口方法名称）        </p></li><li><p>在java语言中方法重载指的是方法名称一样，参数类型或者个数不一样。结合2和3点，</p></li></ol><p>最终结论mapper接口中方法不支持重载</p><h2 id="问题6-MyBatis框架中-与-区别"><a href="#问题6-MyBatis框架中-与-区别" class="headerlink" title="问题6: MyBatis框架中#{}与${}区别?"></a><strong>问题6</strong>: MyBatis框架中#{}与${}区别?</h2><p><strong>题目背景: 考察对mybatis框架使用是否熟悉</strong><br>select * from account where id = ${id} ==&gt; select * from account where id = 1<br>select * from account where id = #{id} ==&gt; select * from account where id = 1</p><p>答题思路：</p><ol><li>在mybatis框架中,#{}是一个占位符，相当于jdbc中的问号【?】，在执行的时候底层是通过<br>PreparedStatement进行预编译，和参数设置值。可以有效防止sql注入</li><li>在mybatis框架中，${}是一个字符串拼接符，在执行sql语句预编译之前就会替换。<br>  会有sql注入的风险    </li><li>在使用上的区别：<br>  #{}: 在sql语句where条件、set修改、values()添加时使用。<br>  ${}: sql语句前面部分使用。(数据库列名、表名)</li></ol><h2 id="问题7：描述MyBatis框架中有哪些Executor执行器"><a href="#问题7：描述MyBatis框架中有哪些Executor执行器" class="headerlink" title="问题7：描述MyBatis框架中有哪些Executor执行器?"></a><strong>问题7</strong>：描述MyBatis框架中有哪些Executor执行器?</h2><p><strong>题目背景: 考察对mybatis框架是否有深入的一些理解</strong></p><p>答题思路:</p><ol><li>在mybatis框架中，有四种类型的Executor执行器:<pre><code>    SimpleExecutor、ReuseExecutor、BatchExecutor、CachingExecutor2.SimpleExecutor:</code></pre></li><li>特点：每次执行select|update|insert|delete操作，底层都会创建一个Statement对象，<pre><code>      执行完成立即关闭Statement对象    </code></pre></li><li>ReuseExecutor:<pre><code>特点：每次执行select|update|insert|delete操作，都会以当前的sql语句为key，     查找缓存中是否有Statement对象，如果有直接使用；如果没有则创建一个Statement     对象。简单理解，可以重复使用Statement对象</code></pre></li><li>BatchExecutor:<pre><code>特点：底层通过jdbc的addBatch执行批处理操作</code></pre></li><li>CachingExecutor:<pre><code>特点：在以上三个Executor执行器的基础上，支持二级缓存</code></pre></li></ol><h2 id="问题8-描述MyBatis框架的缓存支持"><a href="#问题8-描述MyBatis框架的缓存支持" class="headerlink" title="问题8: 描述MyBatis框架的缓存支持?"></a><strong>问题8</strong>: 描述MyBatis框架的缓存支持?</h2><p><strong>题目背景: 考察对mybatis框架是否有深入的一些理解</strong><br>答题思路:</p><ol><li>在mybatis框架中，支持一级缓存和二级缓存</li><li>一级缓存是指SqlSession级别的缓存，在同一个会话SqlSession内部有效，每一次数据库操作一<pre><code>  级缓存都存在。</code></pre></li><li>二级缓存是指SqlSessionFactory级别的缓存，二级缓存的范围更大，可以在不同的<pre><code>  SqlSession之间共享。二级缓存默认是全局开启的；但是应用时需要再mapper文件中添加`&lt;cache/&gt;`。</code></pre></li><li>在企业项目中，一般不推荐直接使用mybatis框架的二级缓存，原因是二级缓存以 命名空间 为单位；如果其它的命名空间也同样使用了某张表数据，那么在更新之后；原来的缓存是不会发生改变的，所以会存在读取脏数据的可能。</li><li>在实际企业项目中，可以考虑在业务层，结合相关的缓存中间件实现缓存服务。常用的缓存中间件有（redis、memcached）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题1：-谈谈你对MyBatis框架的理解&quot;&gt;&lt;a href=&quot;#问题1：-谈谈你对MyBatis框架的理解&quot; class=&quot;headerlink&quot; title=&quot;问题1： 谈谈你对MyBatis框架的理解?&quot;&gt;&lt;/a&gt;&lt;strong&gt;问题1&lt;/strong&gt;： </summary>
      
    
    
    
    <category term="常见面试题总结" scheme="https://chenliren9527.github.io/categories/%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="源码分析" scheme="https://chenliren9527.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="常见面试题总结" scheme="https://chenliren9527.github.io/tags/%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="Mybatis" scheme="https://chenliren9527.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>常见面试题总结(06)-Spring框架相关的常见面试题</title>
    <link href="https://chenliren9527.github.io/2021/01/29/chang-jian-mian-shi-ti-zong-jie-06-spring-kuang-jia-xiang-guan-de-chang-jian-mian-shi-ti/"/>
    <id>https://chenliren9527.github.io/2021/01/29/chang-jian-mian-shi-ti-zong-jie-06-spring-kuang-jia-xiang-guan-de-chang-jian-mian-shi-ti/</id>
    <published>2021-01-29T15:28:56.000Z</published>
    <updated>2022-05-17T05:35:21.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试题1：Spring框架中应用了哪些常见的设计模式"><a href="#面试题1：Spring框架中应用了哪些常见的设计模式" class="headerlink" title="面试题1：Spring框架中应用了哪些常见的设计模式"></a><strong>面试题1</strong>：Spring框架中应用了哪些常见的设计模式</h2><ol><li><p>单例模式:<br>保证一个类仅有一个实例，Spring管理的bean默认就是单例的。</p></li><li><p>策略模式:<br>定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换，Spring中的资源加载。</p></li><li><p>工厂方法模式:<br>Spring中的FactoryBean就是典型的工厂方法模式。</p></li><li><p>代理模式:<br>Spring的Proxy模式在aop中有体现，比如JdkDynamicAopProxy和Cglib2AopProxy。</p></li><li><p>观察者模式:<br>Spring中Observer模式常用的地方是listener的实现, 如ApplicationListener。</p></li><li><p>模板方法模式:<br>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。Spring框架用到了很多抽像类。</p></li></ol><h2 id="面试题2：Spring框架中的IoC是什么"><a href="#面试题2：Spring框架中的IoC是什么" class="headerlink" title="面试题2：Spring框架中的IoC是什么?"></a><strong>面试题2</strong>：Spring框架中的IoC是什么?</h2><ol><li>Spring IoC(Inversion of Control)指的是控制反转，IoC容器负责bean的实例化、管理bean与bean之间的依赖关系，它帮我们完成bean之间的依赖注入，控制权交由Spring容器，从而实现bean与bean之间松耦合。</li><li>以前控制权是当前bean对象，现在控制权交由Spring容器，这种行为就是控制反转(IoC)。</li></ol><h2 id="面试题3：-Spring框架中的单例bean线程安全吗"><a href="#面试题3：-Spring框架中的单例bean线程安全吗" class="headerlink" title="面试题3： Spring框架中的单例bean线程安全吗?"></a><strong>面试题3</strong>： Spring框架中的单例bean线程安全吗?</h2><p>不，Spring框架中的单例bean不是线程安全的。</p><p>Spring作用域（scope）配置的区别：</p><ul><li>非线程安全：singleton（默认）: Spring容器只存在一个共享的bean实例。</li><li>线程安全：  prototype:        每次对bean的请求都会创建一个新的bean实例。</li></ul><h2 id="面试题4：Spring框架中的AOP是什么"><a href="#面试题4：Spring框架中的AOP是什么" class="headerlink" title="面试题4：Spring框架中的AOP是什么?"></a><strong>面试题4</strong>：Spring框架中的AOP是什么?</h2><ol><li>AOP(Aspect-Oriented Programming)面向切面编程，对bean做增强处理的。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</li><li>主要的意图是: 将日志记录、事务处理、异常处理、性能统计、安全控制等代码从原有业务逻辑代码中分离出来，将它们抽取到非业务逻辑的方法中，利用AOP切面可以将这些方法切入，从而达到原有的业务逻辑代码效果。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面试题1：Spring框架中应用了哪些常见的设计模式&quot;&gt;&lt;a href=&quot;#面试题1：Spring框架中应用了哪些常见的设计模式&quot; class=&quot;headerlink&quot; title=&quot;面试题1：Spring框架中应用了哪些常见的设计模式&quot;&gt;&lt;/a&gt;&lt;strong&gt;</summary>
      
    
    
    
    <category term="常见面试题总结" scheme="https://chenliren9527.github.io/categories/%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="源码分析" scheme="https://chenliren9527.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="常见面试题总结" scheme="https://chenliren9527.github.io/tags/%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="Spring" scheme="https://chenliren9527.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>就业技术加强(06)-源码分析(3)-Spring</title>
    <link href="https://chenliren9527.github.io/2021/01/29/jiu-ye-ji-zhu-jia-qiang-06-yuan-ma-fen-xi-3-spring/"/>
    <id>https://chenliren9527.github.io/2021/01/29/jiu-ye-ji-zhu-jia-qiang-06-yuan-ma-fen-xi-3-spring/</id>
    <published>2021-01-29T10:27:32.000Z</published>
    <updated>2022-05-17T05:35:20.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0、课程目标"><a href="#0、课程目标" class="headerlink" title="0、课程目标"></a>0、课程目标</h2><p>目标1: 了解spring框架体系结构</p><p>目标2: 了解spring框架容器初始化流程</p><p>目标3: 掌握spring框架相关的常见面试题</p><h2 id="1、工厂体系结构"><a href="#1、工厂体系结构" class="headerlink" title="1、工厂体系结构"></a>1、工厂体系结构</h2><h3 id="1-1、导入演示工程"><a href="#1-1、导入演示工程" class="headerlink" title="1.1、导入演示工程"></a>1.1、导入演示工程</h3><p>将 <code>资料\演示工程\spring-demo</code> 导入到IDEA中。</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210104204133991.png" alt="image-20210104204133991"></p><h3 id="1-2、工厂继承关系"><a href="#1-2、工厂继承关系" class="headerlink" title="1.2、工厂继承关系"></a>1.2、工厂继承关系</h3><p>关于 <code>ApplicationContext</code> 的继承关系：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210104210840859.png" alt="image-20210104210840859"></p><p>关于 <code>ClassPathXmlApplicationContext</code> 的继承关系：</p><p>先找到 <code>BeanFactory</code> 然后按 <code>ctrl + h</code> </p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210104211815072.png" alt="image-20210104211815072"></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>BeanFactory</td><td>spring框架工厂体系结构的顶层接口，提供了基础规范：获取bean对象、bean的作用范围、bean的类型。</td></tr><tr><td>ListableBeanFactory</td><td>BeanFactory接口中的getBean方法只能获取单个对象。ListableBeanFactory可以获取多个对象</td></tr><tr><td>HierarchicalBeanFactory</td><td>提供父容器的访问功能。在一个spring应用中，支持有多个BeanFactory，并且可以设置为它们的父子关系。比如ssm框架整合中的两个IoC容器</td></tr><tr><td>ApplicationContext</td><td>项目中直接使用的工厂接口，它同时继承了ListableBeanFactory和HierarchicalBeanFactory接口</td></tr><tr><td>AbstractApplicationContext</td><td>ApplicationContext工厂抽象类，提供了IoC容器初始化公共实现</td></tr><tr><td>AbstractRefreshableApplicationContext</td><td>在AbstractApplicationContext基础上，增加了IoC容器重建支持</td></tr><tr><td>AbstractXmlApplicationContext</td><td>增加了配置文件解析处理</td></tr><tr><td>ClassPathXmlApplicationContext</td><td>项目中，直接使用的工厂实现类。从类的根路径下加载配置文件，创建spring IoC容器</td></tr><tr><td>DefaultListableBeanFactory</td><td>在spring框架工厂体系结构中，它是最强大的工厂类，也是我们最终创建的IoC容器，它内部持有了一系列Map集合。</td></tr></tbody></table><h2 id="2、容器初始化"><a href="#2、容器初始化" class="headerlink" title="2、容器初始化"></a>2、容器初始化</h2><h3 id="2-1、初始化时序图"><a href="#2-1、初始化时序图" class="headerlink" title="2.1、初始化时序图"></a>2.1、初始化时序图</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105154237352.png" alt="image-20210105154237352"></p><h3 id="2-2、核心源码"><a href="#2-2、核心源码" class="headerlink" title="2.2、核心源码"></a>2.2、核心源码</h3><p>从初始化开始时候调试起：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105113050523.png" alt="image-20210105113050523"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105113056730.png" alt="image-20210105113056730"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105113103235.png" alt="image-20210105113103235"></p><p>上述使用到了 <code>ClassPathXmlApplicationContext</code> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassPathXmlApplicationContext</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractXmlApplicationContext</span> <span class="token punctuation">{</span>         <span class="token comment">// 资源配置文件成员变量，是一个数组，支持多个spring的配置文件</span>     <span class="token annotation punctuation">@Nullable</span>    <span class="token keyword">private</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources<span class="token punctuation">;</span>     <span class="token comment">// 默认构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token comment">// 如果已经存在一个ioc容器，可以在构造的时候设置【父】容器</span>    <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment">// 1. 根据xxx.xml配置文件，创建ioc容器</span>    <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">String</span> configLocation<span class="token punctuation">)</span><span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>configLocation<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   <span class="token comment">/**    * 2. 方法说明：    *根据xml文件的定义，以及父容器，创建一个新的ClassPathXmlApplicationContext    *    *参数说明：    *configLocations：xml配置文件数组    *refresh：是否要重新创建ioc容器。加载全部bean的定义和创建所有的单例对象    *parent：父容器    */</span>    <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations<span class="token punctuation">,</span> <span class="token keyword">boolean</span> refresh<span class="token punctuation">,</span>                   <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置父容器</span>            <span class="token comment">// 根据提供的路径，处理成配置文件数组(以分号、逗号、空格、tab、换行符分割)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setConfigLocations</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>refresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 3. 【核心方法】：该方法表示初始化（或者重建）ioc容器。即可以把原</span>                           <span class="token comment">// 来的ApplicationContext销毁，重新执行初始化创建</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也使用到了<code>AbstractApplicationContext</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractApplicationContext</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultResourceLoader</span> <span class="token keyword">implements</span> <span class="token class-name">ConfigurableApplicationContext</span> <span class="token punctuation">{</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token comment">/**     * 4.方法说明：     *【核心方法】：该方法表示初始化（或者重建）ioc容器。即可以把原来的     *   ApplicationContext销毁，重新执行初始化创建      */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>             <span class="token comment">// 创建ioc容器，同步加锁，保障线程安全</span>       <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 准备工作：记录容器启动的时间 和 容器激活状态</span><span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 【关键步骤】 获取新的bean工厂(obtainFreshBeanFactory)</span>            <span class="token comment">//1.根据配置文件中的内容，解析成一个个Bean定义实例（BeanDefinition）</span>             <span class="token comment">//2.将一个个Bean定义实例，注册到BeanFactory中</span>            <span class="token comment">// 3.细节：此时还没有真正创建对应的bean对象</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 为BeanFactory设置其它信息:</span>            <span class="token comment">// 1.设置bean类加载器</span>             <span class="token comment">// 2.设置Bean表达式解析器</span>            <span class="token comment">// 3.设置BeanPostProcessor（bean后置处理器）</span>            <span class="token comment">// 4.设置资源加载器</span>             <span class="token comment">// ....</span><span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">// 设置BeanFactoryPostProcessors(预留方法)</span><span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 调用BeanFactoryPostProcessor各个实现类的 </span>                 <span class="token comment">// postProcessBeanFactory(factory) 方法</span>                 <span class="token comment">// 可以理解为是给BeanFactory提供的一种扩展机制。比如可以让我们的</span>                 <span class="token comment">// BeanFactory实现BeanFactoryPostProcessor接口，增强该BeanFactory的功能</span><span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 注册BeanPostProcessor的实现类：</span>                  <span class="token comment">// 1.该接口有两个方法：</span>                  <span class="token comment">// postProcessBeforeInitialization(), 在init-method属性指定的方法前调用</span>                  <span class="token comment">// postProcessAfterInitialization(),  在init-method属性指定的方法后调用</span><span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 初始化国际化支持的资源文件</span><span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 初始化ApplicationContext事件广播器</span><span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 模板方法：用于特殊bean的初始化，默认是空实现（在api中如果预留了一些方法</span>                 <span class="token comment">// 实现是空，表示该方法是留给子类自我实现。那么这些方法称为：钩子方法）</span><span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 注册事件监听器：监听器需要实现ApplicationListener接口</span><span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// 【关键步骤】实例化所有非延迟加载的单例bean对象</span>                  <span class="token comment">// &lt;bean id="userDao" class="com.itheima.spring.dao.impl.UserDaoImpl" </span>                  <span class="token comment">//     lazy-init="false" scope="singleton"/&gt;</span><span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// 发布广播事件。ApplicationContext初始化完成</span><span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>"<span class="token class-name">Exception</span> encountered during context initialization                                    <span class="token operator">-</span> <span class="token string">" + "</span>cancelling refresh attempt<span class="token operator">:</span> " <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>                 <span class="token comment">// 如果发生异常，需要销毁已经创建的singleton对象</span><span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// 将active状态设置为false</span><span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Propagate exception to caller.</span><span class="token keyword">throw</span> ex<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span><span class="token comment">// Reset common introspection caches in Spring's core, since we</span><span class="token comment">// might not ever need metadata for singleton beans anymore...</span><span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3、主体流程"><a href="#2-3、主体流程" class="headerlink" title="2.3、主体流程"></a>2.3、主体流程</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/spring-ioc-refresh.png" alt="spring-ioc-refresh"></p><h3 id="2-4、准备刷新容器"><a href="#2-4、准备刷新容器" class="headerlink" title="2.4、准备刷新容器"></a>2.4、准备刷新容器</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105144856121.png" alt="image-20210105144856121"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 方法说明：创建bean容器前的预备工作 * 1.设置容器启动时间 * 2.设置closed状态 * 3.设置active状态 */</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 容器启动时间（当前系统时间）</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupDate <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// closed状态，false表示容器不是关闭状态</span><span class="token keyword">this</span><span class="token punctuation">.</span>closed<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// active状态,true表示容器是激活状态</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Refreshing "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 初始化加载属性资源文件。该方法是空实现，留给子类实现特殊处理</span><span class="token function">initPropertySources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 准备校验系统环境属性资源。比如使用@Value注解中系统环境中取值：</span><span class="token comment">// @Value("${jdbc.driver}")</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validateRequiredProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 初始化早期应用的事件集合，它是一个Set</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5、创建BeanFactory"><a href="#2-5、创建BeanFactory" class="headerlink" title="2.5、创建BeanFactory"></a>2.5、创建BeanFactory</h3><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105175539262.png" alt="image-20210105175539262"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105175546970.png" alt="image-20210105175546970"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105175553774.png" alt="image-20210105175553774"></p><p>跟进 <code>loadBeanDefinitions(beanFactory)</code> 方法查看，在配置文件中定义的两个Bean是否被解析为 <code>BeanDefinition</code></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183046353.png" alt="image-20210105183046353"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183141914.png" alt="image-20210105183141914"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183154837.png" alt="image-20210105183154837"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183204568.png" alt="image-20210105183204568"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183213763.png" alt="image-20210105183213763"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183223953.png" alt="image-20210105183223953"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183234918.png" alt="image-20210105183234918"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183245051.png" alt="image-20210105183245051"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183257891.png" alt="image-20210105183257891"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183311617.png" alt="image-20210105183311617"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183321121.png" alt="image-20210105183321121"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183330641.png" alt="image-20210105183330641"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183402461.png" alt="image-20210105183402461"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183500635.png" alt="image-20210105183500635"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183537248.png" alt="image-20210105183537248"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105183547930.png" alt="image-20210105183547930"></p><p>在解析创建完 <code>BeanDefinition</code> 后返回 <code>BeanFactory</code></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105175908999.png" alt="image-20210105175908999"></p><h3 id="2-6、创建单例Bean"><a href="#2-6、创建单例Bean" class="headerlink" title="2.6、创建单例Bean"></a>2.6、创建单例Bean</h3><p>到这一步，已经完成了spring配置文件的解析，将相关的配置信息封装成了<code>BeanDefinition</code>对象，同时将<code>BeanDefinition</code>对象，注册到了BeanFactory中。<br><strong>需要注意</strong>：真正的Bean实例对象还没有创建，接下跟进，创建实例化bean的流程：<br> 跟进入口 <code>refresh()</code>方法中的  <code>finishBeanFactoryInitialization(beanFactory)</code></p><p>先跟进源码：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205747877.png" alt="image-20210105205747877"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205756511.png" alt="image-20210105205756511"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205807580.png" alt="image-20210105205807580"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205814639.png" alt="image-20210105205814639"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205840012.png" alt="image-20210105205840012"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205845904.png" alt="image-20210105205845904"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205857038.png" alt="image-20210105205857038"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205905194.png" alt="image-20210105205905194"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205913962.png" alt="image-20210105205913962"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205923051.png" alt="image-20210105205923051"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205936363.png" alt="image-20210105205936363"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105205947661.png" alt="image-20210105205947661"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105210406145.png" alt="image-20210105210406145"></p><p>在创建完Bean之后；在如下方法对Bean属性进行设置值：</p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105210641842.png" alt="image-20210105210641842"></p><p><img src="%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA-06-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-3-Spring.assets/image-20210105210718506.png" alt="image-20210105210718506"></p><p>再小结如下：</p><pre class="line-numbers language-none"><code class="language-none">1.调用【AbstractApplicationContext】finishBeanFactoryInitialization方法：初始化创建全部单例【singleton】对象的入口方法2.调用【DefaultListableBeanFactory】preInstantiateSingletons方法：循环遍历创建所有（非抽象、非延迟加载、是单例）的bean对象入口方法3.调用【AbstractBeanFactory】getBean方法：直接调用本类中的doGetBean方法4.调用【AbstractBeanFactory】doGetBean方法：从容器中获取目标bean。如果目标bean已经存在，直接获取返回；如果目标bean不存在，则创建目标bean5.调用【AbstractAutowireCapableBeanFactory】createBean方法：加载目标bean字节码Class，创建bean对象6.调用【AbstractAutowireCapableBeanFactory】doCreateBean方法：实例化bean，设置依赖注入，进行后置回调处理7.调用【AbstractAutowireCapableBeanFactory】createBeanInstance方法：通过三种实例化bean方式实例化（工厂方法、构造方法依赖注入、无参数构造方法）8.调用【AbstractAutowireCapableBeanFactory】instantiateBean方法：使用无参数构造方法实例化bean9.调用【SimpleInstantiationStrategy】instantiate方法：通过反射技术实例化bean对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、常见面试题"><a href="#3、常见面试题" class="headerlink" title="3、常见面试题"></a>3、常见面试题</h2><p><strong>面试题1</strong>：Spring框架中应用了哪些常见的设计模式</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">1. 单例模式:   保证一个类仅有一个实例，Spring管理的bean默认就是单例的。   2. 策略模式:   定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换，Spring中的资源加载。  3. 工厂方法模式:   Spring中的FactoryBean就是典型的工厂方法模式。   4. 代理模式:   Spring的Proxy模式在aop中有体现，比如JdkDynamicAopProxy和Cglib2AopProxy。   5. 观察者模式:   Spring中Observer模式常用的地方是listener的实现, 如ApplicationListener。   6. 模板方法模式:   定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。Spring框架用到了很多抽像类。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>面试题2</strong>：Spring框架中的IoC是什么?</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1. Spring IoC(Inversion of Control)指的是控制反转，IoC容器负责bean的实例化、管理bean与bean之间的依赖关系，它帮我们完成bean之间的依赖注入，控制权交由Spring容器，从而实现bean与bean之间松耦合。2. 以前控制权是当前bean对象，现在控制权交由Spring容器，这种行为就是控制反转(IoC)。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>面试题3</strong>： Spring框架中的单例bean线程安全吗?</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">不，Spring框架中的单例bean不是线程安全的。Spring作用域（scope）配置的区别：- 非线程安全：singleton（默认）: Spring容器只存在一个共享的bean实例。- 线程安全：  prototype:        每次对bean的请求都会创建一个新的bean实例。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>面试题4</strong>：Spring框架中的AOP是什么?</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">1. AOP(Aspect-Oriented Programming)面向切面编程，对bean做增强处理的。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。2. 主要的意图是: 将日志记录、事务处理、异常处理、性能统计、安全控制等代码从原有业务逻辑代码中分离出来，将它们抽取到非业务逻辑的方法中，利用AOP切面可以将这些方法切入，从而达到原有的业务逻辑代码效果。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0、课程目标&quot;&gt;&lt;a href=&quot;#0、课程目标&quot; class=&quot;headerlink&quot; title=&quot;0、课程目标&quot;&gt;&lt;/a&gt;0、课程目标&lt;/h2&gt;&lt;p&gt;目标1: 了解spring框架体系结构&lt;/p&gt;
&lt;p&gt;目标2: 了解spring框架容器初始化流程&lt;/p&gt;
</summary>
      
    
    
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/categories/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    
    <category term="笔记" scheme="https://chenliren9527.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="源码分析" scheme="https://chenliren9527.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    <category term="就业技术加强" scheme="https://chenliren9527.github.io/tags/%E5%B0%B1%E4%B8%9A%E6%8A%80%E6%9C%AF%E5%8A%A0%E5%BC%BA/"/>
    
    <category term="Spring" scheme="https://chenliren9527.github.io/tags/Spring/"/>
    
  </entry>
  
</feed>
